{"version":3,"sources":["apis/index.js","js/index.js","actions/index.js","components/Message.js","components/LandingPage.js","components/RenderNumbers.js","components/Creator.js","components/CrosswordCreator.js","components/LoginPage.js","components/Header.js","components/Loader.js","components/AccountCrosswords.js","components/Details.js","components/ChangePassword.js","components/AccountSettings.js","components/Confirmation.js","components/AdminForm.js","components/AccountAdministration.js","components/Account.js","components/CrosswordAdmin.js","components/CrByType.js","components/Crosswords.js","components/Blank.js","components/RatingForm.js","components/Solving.js","components/AccountActivation.js","components/MailRequired.js","components/LoginProblems.js","components/PasswordReset.js","components/App.js","reducers/index.js","reducers/crosswordReducer.js","reducers/userReducer.js","reducers/fetchCrosswords.js","reducers/fetchUsers.js","reducers/mailReducer.js","index.js"],"names":["axios","create","baseURL","headers","setCookie","cookieName","cookieValue","expireHours","d","Date","setTime","getTime","expires","toUTCString","document","cookie","getCookie","name","ca","decodeURIComponent","split","i","length","c","charAt","substring","indexOf","getDate","date","getFullYear","lz","getMonth","getHours","getMinutes","getSeconds","number","padStart","compareNumbers","a","b","getUser","id","token","dispatch","apis","get","response","type","payload","data","resendActivation","post","manageAdmin","userID","password","action","put","getCrossword","ID","Message","message","isError","className","LandingPage","props","handleChange","e","target","setState","value","email","emailMessage","signsLeft","showMessage","setTimeout","handleMail","preventDefault","sendMail","state","mail","alt","src","href","onChange","this","placeholder","cols","rows","maxLength","onClick","React","Component","connect","RenderNumbers","array","push","map","element","QuestionsAcross","questions","handleDelete","question","text","bind","Solution","crossword","column","field","sort","readOnly","QuestionsDown","RenderColumns","handleClick","setQuestion","setPassword","columns","questionState","passwordState","questionForm","style","visibility","Creator","componentDidMount","window","location","replace","user","crossWord","down","Number","across","Array","y","letter","String","fromCharCode","toString","questionRange","userId","toUpperCase","handleQuestionChange","questionNumber","questionText","questionType","renderRows","change","click","stateQuestion","statePassword","cross","row","index","key","currentTarget","from","getElementsByClassName","div","innerHTML","solution","save","error","addCrossword","getElementById","blank","childNodes","item","attributes","class","tagName","includes","removeAttribute","setAttribute","backgroundColor","handleEdit","select","button","handleQuestion","addQuestion","isNaN","checkboxes","range","checkbox","checked","x","renderQuestions","handleDeleteQuestion","splice","closeHelp","showHelp","remove","root","mask","createElement","after","alignSelf","values","addedBy","CrosswordCreator","console","log","header","inputs","min","max","required","LoginPage","handleSwitcher","switcher","login","confirmPassword","handleSignIn","userLogin","handleSignUp","addUser","_id","register","jwt_access","Profile","enter","leave","signOut","onMouseEnter","onMouseLeave","Header","handleEnter","display","handleLeave","getRandom","getRandomCrossword","handleSignOut","userSignOut","loaded","Loader","AccountCrosswords","getAddedCrosswords","addedSite","addedCrosswords","crosswords","addCrL","getSolvedCrosswords","solvedSite","solvedCrosswords","slvCrL","getProgressCrosswords","progressSite","progressCrosswords","prCrL","lastSiteAdded","lastSiteSolved","lastSiteProgress","handleSection","prevSection","section","crosswordDetails","dtlRts","ratings","dtlSlv","solvedBy","dtlAdb","handleSite","currentSite","renderAdded","tries","isApproved","isRejected","renderSolved","dateSolved","renderProgress","string","dateCreated","details","ovrRating","difficult","rejectMsg","added","progress","solved","page","Details","approved","rejected","currentPassword","handleUpdate","userUpdate","ChangePassword","newPassword","confirmNewPassword","passwordUpdate","AccountSettings","Confirmation","handleConfirm","handleClose","AdminForm","handleSearch","users","query","getUsersByQuery","confirm","handleAppoint","renderUsers","AccountAdministration","componentDidUpdate","update","getAdmins","admins","empty","isAdmin","getUnapprovedCrosswords","unapr","renderCrosswords","handleDetails","getUserById","fetchedUser","userDateCr","renderAdmins","admin","handleAdd","add","handleBack","width","fontSize","Account","divs","handleHover","adminPanel","match","params","content","showRange","q","moveCursor","onKeyUp","RenderSolvedColumns","CrosswordAdmin","handleTextArea","rejMsg","colorQuestion","color","isArray","currentQuestion","input","firstChild","currentRange","keyCode","focus","handleView","handleApprove","approveCrossword","crosswordID","handleReject","rejectMessage","handleMessage","crosswordSolved","isEmpty","col","CrByType","fields","filled","percent","tried","Math","round","data-percent","transitionDuration","height","Crosswords","getAppCrosswords","isSolved","prop","beginner","semiAdvanced","advanced","expert","current","showCrosswords","param","difficults","types","Blank","RatingForm","currentStar","mark","children","star","handleRating","reviewCrossword","reload","renderStars","rating","isReviewed","toReview","Solving","handleSave","saveCrossword","crossword_id","handleSolve","solveCrossword","showRating","addTry","reviewed","loading","AccountActivation","activateAccount","MailRequired","handleSend","LoginProblems","handleForgot","passwordReminder","handleResend","PasswordReset","resetPassword","App","path","exact","component","combineReducers","ReactDOM","render","store","createStore","reducers","applyMiddleware","thunk","querySelector"],"mappings":"+RACeA,E,OAAAA,EAAMC,OAAO,CACxBC,QAAQ,gDACRC,QAAS,CAAC,8BAA+B,OAIhCD,EAAQ,0CCPd,SAASE,EAAUC,EAAYC,EAAaC,GAC/C,IAAIC,EAAI,IAAIC,KACZD,EAAEE,QAAQF,EAAEG,UAA2B,GAAdJ,EAAmB,GAAK,KACjD,IAAIK,EAAU,WAAWJ,EAAEK,cAC3BC,SAASC,OAASV,EAAa,IAAMC,EAAc,IAAMM,EAAU,UAU9D,SAASI,EAAUX,GAItB,IAHA,IAAIY,EAAOZ,EAAa,IAEpBa,EADgBC,mBAAmBL,SAASC,QACzBK,MAAM,KACrBC,EAAI,EAAGA,EAAGH,EAAGI,OAAQD,IAAK,CAEhC,IADA,IAAIE,EAAIL,EAAGG,GACW,KAAfE,EAAEC,OAAO,IACdD,EAAIA,EAAEE,UAAU,GAElB,GAAuB,GAAnBF,EAAEG,QAAQT,GACZ,OAAOM,EAAEE,UAAUR,EAAKK,OAAQC,EAAED,QAGtC,MAAO,GAGF,SAASK,EAAQC,GACtB,MAAM,GAAN,OAAUA,EAAKC,cAAf,YAAgCC,EAAIF,EAAKG,WAAW,GAApD,YAA2DD,EAAGF,EAAKD,WAAnE,YAAiFG,EAAGF,EAAKI,YAAzF,YAAwGF,EAAGF,EAAKK,cAAhH,YAAiIH,EAAGF,EAAKM,eAG3I,SAASJ,EAAGK,GACN,MAAO,UAAGA,GAASC,SAAS,EAAG,KAG9B,SAASC,EAAeC,EAAGC,GAChC,OAAOD,EAAEH,OAASI,EAAEJ,OCnCnB,IAAMK,EAAU,SAACC,EAAIC,GAAL,8CAAe,WAAMC,GAAN,eAAAL,EAAA,sEACbM,EAAKC,IAAL,0BAA4BJ,GAAM,CAACtC,QAAS,CAACuC,MAAOA,KADvC,OAC9BI,EAD8B,OAElCH,EAAS,CAACI,KAAM,WAAYC,QAASF,EAASG,OAFZ,2CAAf,uDA0CVC,EAAmB,SAACT,GAAD,8CAAQ,WAAME,GAAN,eAAAL,EAAA,sEACfM,EAAKO,KAAL,sBAAyBV,IADV,OAChCK,EADgC,OAEpCH,EAAS,CAACI,KAAM,oBAAqBC,QAASF,EAASG,OAFnB,2CAAR,uDAenBG,EAAc,SAACC,EAAQC,EAAUZ,EAAOa,GAA1B,8CAAqC,WAAMZ,GAAN,eAAAL,EAAA,sEACvCM,EAAKY,IAAI,eAAgB,CAACH,SAAQC,WAAUC,UAAS,CAACpD,QAAS,CAACuC,MAAOA,KADhC,OACxDI,EADwD,OAE5DH,EAAS,CAACI,KAAM,gBAAiBC,QAASF,EAASG,OAFS,2CAArC,uDAedQ,EAAe,SAACC,GAAD,8CAAQ,WAAMf,GAAN,eAAAL,EAAA,sEACXM,EAAKC,IAAL,oBAAsBa,IADX,OAC5BZ,EAD4B,OAEhCH,EAAS,CAACI,KAAM,gBAAiBC,QAASF,EAASG,OAFnB,2CAAR,uDC9DbU,MAZf,YAAsC,IAApBC,EAAmB,EAAnBA,QACd,OAAa,IADoB,EAAVC,QAGf,yBAAKC,UAAU,mCAAmCF,GAItD,yBAAKE,UAAU,qBAAqBF,ICHtCG,E,YACF,WAAYC,GAAQ,IAAD,8BACf,4CAAMA,KAUVC,aAAe,SAAAC,GACX,OAAOA,EAAEC,OAAOlD,MACZ,IAAK,OACD,EAAKmD,SAAS,CAACnD,KAAMiD,EAAEC,OAAOE,QAC9B,MACJ,IAAK,QACD,EAAKD,SAAS,CAACE,MAAOJ,EAAEC,OAAOE,QAC/B,MACJ,IAAK,eACD,EAAKD,SAAS,CAACG,aAAcL,EAAEC,OAAOE,QACtC,EAAKD,SAAS,CAACI,UAAW,IAAKN,EAAEC,OAAOE,MAAM/C,WArBvC,EA2BnBmD,YA3BmB,uCA2BL,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CA3BK,0DA0CnBe,WA1CmB,uCA0CN,WAAMT,GAAN,SAAA5B,EAAA,6DACT4B,EAAEU,iBADO,kBAGC,EAAKZ,MAAMa,SAAS,EAAKC,MAAM7D,KAAM,EAAK6D,MAAMR,MAAO,EAAKQ,MAAMP,cAHnE,OAIL,EAAKE,YAAY,EAAKT,MAAMe,MAC5B,EAAKX,SAAS,CAACnD,KAAM,KACrB,EAAKmD,SAAS,CAACE,MAAO,KACtB,EAAKF,SAAS,CAACG,aAAc,KAPxB,kDASL,EAAKE,YAAY,KAAI3B,SAASG,MAAM,GAT/B,0DA1CM,sDAEf,EAAK6B,MAAM,CACP7D,KAAM,GACNqD,MAAO,GACPV,QAAS,GACTW,aAAc,GACdC,UAAW,KAPA,E,sEAwDf,OACI,yBAAKV,UAAU,qBACX,6BAASrB,GAAG,SACR,6BACI,yBAAKqB,UAAU,QAAQkB,IAAI,YAAYC,IAAI,sBAE/C,6BACI,+CACA,0KACA,uBAAGC,KAAK,UAAU,4BAAQpB,UAAU,eAAlB,mBAG1B,6BAASrB,GAAG,UACR,yBAAKqB,UAAU,wBACX,uBAAGA,UAAU,cAAa,kHAC1B,0DAEJ,yBAAKA,UAAU,wBACX,uBAAGA,UAAU,cAAa,4HAC1B,wDAEJ,yBAAKA,UAAU,wBACX,uBAAGA,UAAU,cAAa,2GAC1B,4DAGR,6BAASrB,GAAG,SACR,oEACA,yBAAKqB,UAAU,SACf,yBAAKA,UAAU,kBACP,yBAAKA,UAAU,eAAf,KACA,iEAAsC,uBAAGoB,KAAK,UAAR,QAAtC,MAEJ,yBAAKpB,UAAU,kBACX,yBAAKA,UAAU,eAAf,KACA,+DAEJ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,eAAf,KACA,8FAIZ,6BAASrB,GAAG,QACR,yBAAKqB,UAAU,WACf,uBAAGA,UAAU,mBACT,4CACA,0CACA,+CACA,sDAEJ,yBAAKA,UAAU,gBACX,0BAAMA,UAAU,QACZ,yBAAKA,UAAU,kBACf,0CACI,yBAAKA,UAAU,cACX,2BACAf,KAAK,OACL9B,KAAK,OACLkE,SAAUC,KAAKnB,aACfoB,YAAY,uBAGhB,yBAAKvB,UAAU,cACX,2BACAf,KAAK,QACL9B,KAAK,QACLkE,SAAUC,KAAKnB,aACfoB,YAAY,wBAGhB,yBAAKvB,UAAU,cACX,8BACA7C,KAAK,eACLqE,KAAK,KACLC,KAAK,KACLJ,SAAUC,KAAKnB,aACfoB,YAAY,gCACZG,UAAU,SAEV,oCAA0B,MAAvBJ,KAAKN,MAAMN,UAAmB,KAAO,2BAAOV,UAAU,cAAcsB,KAAKN,MAAMN,cAG1F,4BAAQiB,QAASL,KAAKT,WAAWb,UAAU,eAA3C,WAIXsB,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAa,U,GAhJvF6B,IAAMC,WA4JjBC,eALS,SAACd,GACrB,MAAO,CAAEC,KAAMD,EAAMC,QAMrB,CAAEF,SFvBkB,SAAC5D,EAAMqD,EAAOV,GAAd,8CAA0B,WAAMjB,GAAN,eAAAL,EAAA,sEACzBM,EAAKO,KAAK,YAAa,CAAClC,OAAMqD,QAAOV,YADZ,OAC1Cd,EAD0C,OAE9CH,EAAS,CAACI,KAAM,YAAaC,QAASF,EAASG,OAFD,2CAA1B,wDEqBT2C,CAGT7B,GCnKS,SAAS8B,IAGpB,IAFA,IAAIxE,EAAG,EACHyE,EAAQ,GACNzE,EAAE,KACJyE,EAAMC,KAAK1E,GACXA,IAEJ,OAAOyE,EAAME,KAAI,SAAAC,GACb,OAAO,4BAAQ5B,MAAO4B,GAAUA,MCFxC,SAASC,EAAT,GAAqD,IAA3BC,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,aACjC,OAAOD,EAAUH,KAAK,SAAAK,GAClB,MAAmB,WAAhBA,EAAStD,KAEZ,yBAAKe,UAAU,mBAAkB,2BAAIuC,EAASlE,OAAb,KAAuBkE,EAASC,MAAS,4BAAQb,QAASW,EAAaG,KAAK,KAAMF,GAAUvC,UAAU,mBAA7D,MAE5D,QAItB,SAAS0C,EAAT,GAAgC,IAAbC,EAAY,EAAZA,UACXX,EAAM,GAcV,OAbAW,EAAUT,KAAI,SAAAU,GACVA,EAAOV,KAAK,SAAAW,GACY,KAAjBA,EAAMrD,UACLwC,EAAMC,KAAK,CACP1B,MAAOsC,EAAMtC,MACblC,OAAQwE,EAAMrD,iBAM9BwC,EAAMc,KAAKvE,GAEJyD,EAAME,KAAK,SAAAC,GACd,OACI,4BACI,yBAAKnC,UAAU,mBACX,2BAAO+C,SAAS,OAAO9D,KAAK,OAAOe,UAAU,QAAQO,MAAO4B,EAAQ5B,QAChF,yBAAKP,UAAU,mBAAmBmC,EAAQ9D,aAUlD,SAAS2E,EAAT,GAAmD,IAA3BX,EAA0B,EAA1BA,UAAWC,EAAe,EAAfA,aAC/B,OAAOD,EAAUH,KAAK,SAAAK,GAClB,MAAmB,SAAhBA,EAAStD,KAER,yBAAKe,UAAU,mBAAkB,2BAAIuC,EAASlE,OAAb,KAAuBkE,EAASC,MAAS,4BAAQb,QAASW,EAAaG,KAAK,KAAMF,GAAUvC,UAAU,mBAA7D,MAEhE,QAItB,SAASiD,EAAT,GAAoI,IAA5G9C,EAA2G,EAA3GA,aAAc+C,EAA6F,EAA7FA,YAAaC,EAAgF,EAAhFA,YAAaC,EAAmE,EAAnEA,YAAaC,EAAsD,EAAtDA,QAASC,EAA6C,EAA7CA,cAAeC,EAA8B,EAA9BA,cAAeC,EAAe,EAAfA,aAChH,OAAOH,EAAQnB,KAAI,SAAAC,GAEf,MAAmB,UAAhBA,EAAQ5B,MACA,4BACP,yBAAKP,UAAU,kBAAkB2B,QAASuB,EAAYT,KAAK,KAAMN,EAAQhF,MAAOwB,GAAIwD,EAAQhF,MACxF,2BAAOkE,SAAUlB,EAAasC,OAAQxD,KAAK,OAAOyC,UAAU,IAAInB,MAAO4B,EAAQ5B,MAAOpD,KAAMgF,EAAQhF,KAAM6C,UAAU,UACnHsD,EACG,4BAAQjC,SAAU8B,EAAYV,OAAQ9D,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAC9D,4BAAQO,MAAM,KAClB,kBAACwB,EAAD,OAEA,KAGHwB,EACD,4BAAQlC,SAAU+B,EAAYX,OAAQ9D,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAClE,4BAAQO,MAAM,KACV,kBAACwB,EAAD,OAEJ,KAECyB,EACD,2BACA7E,GAAIwD,EAAQhF,KACZ6C,UAAU,iBACVf,KAAK,aAEL,KAEA,yBAAKN,GAAIwD,EAAQhF,KAAM6C,UAAU,kBAAkByD,MAAO,CAACC,WAAY,UACvE,yBAAK/E,GAAIwD,EAAQhF,KAAM6C,UAAU,kBAAkByD,MAAO,CAACC,WAAY,YAIpE,4BACP,yBAAK1D,UAAU,kBAAkB2B,QAASuB,EAAYT,KAAK,KAAMN,EAAQhF,MAAMwB,GAAIwD,EAAQhF,MAC3F,2BAAOkE,SAAUlB,EAAasC,OAAQxD,KAAK,OAAOyC,UAAU,IAAInB,MAAM,GAAGpD,KAAMgF,EAAQhF,KAAM6C,UAAU,wB,IAQ7G2D,E,YACF,WAAYzD,GAAQ,IAAD,8BACf,4CAAMA,KAuBV0D,kBAxBmB,sBAwBC,0CAAApF,EAAA,yDACZI,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,eAEhB0B,EAJa,0CAMN,EAAKsB,MAAMxB,QAAQC,EAAIC,GANjB,gFAQLiF,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,YARK,yDAWLyH,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,YAXK,QAchB,GAAG,EAAK8D,MAAM8D,KAAM,CAEpB,IADIC,EAAY,GACR1G,EAAG,EAAGA,EAAE,EAAKyD,MAAMkD,KAAM3G,IAGzB,IAFAc,EAAS8F,OAAO,EAAKnD,MAAMoD,QAC3BH,EAAU1G,GAAK,IAAI8G,MAAMhG,GACjBiG,EAAE,EAAGA,EAAEL,EAAU1G,GAAGC,OAAO8G,IAC3BC,EAAOhH,EAAE,GACTc,EAASiG,EAAE,EACfL,EAAU1G,GAAG+G,GAAK,CACdnH,KAAMqH,OAAOC,aAAaF,GAAQlG,EAAOqG,WACzCnE,MAAO,GACPf,SAAU,GACV+C,SAAU,GACdoC,cAAe,IAG3B,EAAKrE,SAAS,CAACsE,OAAQjG,IACvB,EAAK2B,SAAS,CAAC2D,UAAWA,SAE1BJ,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,WAjCgB,yDAxBD,EA6DnB+D,aA7DmB,uCA6DJ,WAAMC,GAAN,eAAA5B,EAAA,6DACPmE,EAAY,EAAK3B,MAAMiD,WACjB/B,KAAK,SAAAC,GACXA,EAAQD,KAAI,SAAAW,GACLA,EAAM1F,OAAOiD,EAAEC,OAAOlD,OACrB0F,EAAMtC,MAAMH,EAAEC,OAAOE,MAAMsE,qBAL5B,SASL,EAAKvE,SAAS,CAAC2D,UAAWtB,IATrB,2CA7DI,wDA0EnBmC,qBAAuB,SAAA1E,GACnB,OAAOA,EAAEC,OAAOlD,MACZ,IAAK,kBACD,EAAKmD,SAAS,CAACyE,eAAgB3E,EAAEC,OAAOE,QACxC,MACJ,IAAK,gBACD,EAAKD,SAAS,CAAC0E,aAAc5E,EAAEC,OAAOE,QACtC,MACJ,IAAK,gBACD,EAAKD,SAAS,CAAC2E,aAAc7E,EAAEC,OAAOE,UAnF/B,EA4FnB2E,WAAa,SAACC,EAAQC,EAAO7C,EAAU/C,EAAU6F,EAAeC,EAAe9B,GAC3E,IAAI+B,EAAQ,EAAKvE,MAAMiD,UACvB,OAAO,EAAKjD,MAAMiD,UAAU/B,KAAK,SAAkBsD,EAAKC,GACpD,OACA,wBAAIC,IAAKD,GACN,kBAACxC,EAAD,CAAe9C,aAAcgF,EAAQjC,YAAakC,EAAOjC,YAAaZ,EAAUa,YAAa5D,EAAU6D,QAASkC,EAAME,GAAQnC,cAAe+B,EAAe9B,cAAe+B,EAAe9B,aAAcA,EAAckC,IAAKD,SAjGnN,EA4GnBtC,YAAc,SAAA/C,GAEV,EAAKY,MAAMiD,UAAU/B,KAAK,SAAAC,GACtBA,EAAQD,KAAK,SAAAW,GACNA,EAAM1F,OAAOiD,EAAEuF,cAAchH,KAC5BkE,EAAMN,SAASnC,EAAEuF,cAAcpF,aAIhC8D,MAAMuB,KAAK5I,SAAS6I,uBAAuB,oBACjD3D,KAAK,SAAA4D,GACHA,EAAInH,KAAKyB,EAAEuF,cAAchH,KACxBmH,EAAIC,UAAU3F,EAAEuF,cAAcpF,WAxHvB,EA8HnB6C,YAAc,SAAAhD,GACV,IAAI4F,EAAW,EAAKhF,MAAMgF,SAC1B,EAAKhF,MAAMiD,UAAU/B,KAAK,SAAAC,GACtBA,EAAQD,KAAK,SAAAW,GACNA,EAAM1F,OAAOiD,EAAEuF,cAAchH,KAC5BkE,EAAMrD,SAASY,EAAEuF,cAAcpF,OAEf,KAAjBsC,EAAMrD,UACLwG,EAAS/D,KAAK,CACV5D,OAAQwE,EAAMrD,SACde,MAAOsC,EAAMtC,cAK7ByF,EAASlD,KAAK,EAAKvE,gBAEnB,EAAK+B,SAAS,CAAC0F,SAAUA,IAEd3B,MAAMuB,KAAK5I,SAAS6I,uBAAuB,oBACjD3D,KAAK,SAAA4D,GACHA,EAAInH,KAAKyB,EAAEuF,cAAchH,KACxBmH,EAAIC,UAAU3F,EAAEuF,cAAcpF,WApJvB,EAyJnBI,YAzJmB,uCAyJL,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CAzJK,0DAwKnBmG,KAxKmB,sBAwKZ,gCAAAzH,EAAA,yDACC0H,GAAQ,EACZ,EAAKlF,MAAMiD,UAAU/B,KAAK,SAAAU,GACtBA,EAAOV,KAAK,SAAAW,GACR,GAAkB,KAAdA,EAAMtC,MAEN,OADA2F,GAAQ,EACD,EAAKvF,YAAY,8BAA8B,SAI9DuF,EAVD,wBAWClE,EAAQ,GACZ,EAAKhB,MAAMiD,UAAU/B,KAAI,SAAAU,GACrBA,EAAOV,KAAK,SAAAW,GACY,KAAjBA,EAAMrD,UACLwC,EAAMC,KAAK,CACP1B,MAAOsC,EAAMtC,MACblC,OAAQwE,EAAMrD,iBAM9BwC,EAAMc,KAAK,EAAKvE,gBAvBb,SA2BKK,EAAQ1B,EAAU,cA3BvB,UA4BO,EAAKgD,MAAMiG,aAAa,EAAKnF,MAAMiD,UAAW,EAAKjD,MAAMqB,UAAWL,EAAO,EAAKhB,MAAM4D,OAAQhG,GA5BrG,iCA6BQ,EAAK+B,YAAY,EAAKT,MAAMyC,YA7BpC,2DA+BQ,EAAKhC,YAAY,KAAI3B,SAASG,MAAM,IA/B5C,0DAxKY,EA4MnB+D,YAAc,SAAA9C,GACV,IAAIyC,EAAQ7F,SAASoJ,eAAehG,GAGpC,GAAG,EAAKY,MAAMqF,MAAO,CAAC,IAAD,uBACjB,YAAkBxD,EAAMyD,WAAxB,+CAAoC,CAAC,IAA3BC,EAA0B,QAC5BhG,EAAQgG,EAAKC,WAAWC,MAAMlG,MAAMjD,MAAM,KAC9C,GAAkB,UAAfiJ,EAAKG,SAAsBnG,EAAMoG,SAAS,aAetC,GAAkB,UAAfJ,EAAKG,SAAqBnG,EAAMoG,SAAS,YAAa,CAC5DJ,EAAKK,gBAAgB,YACrBL,EAAKM,aAAa,QAAS,SAC3BN,EAAK9C,MAAMqD,gBAAgB,QAC3B,IAAI,IAAIvJ,EAAE,EAAGA,EAAE,EAAKyD,MAAMiD,UAAUzG,OAAOD,IACvC,EAAKyD,MAAMiD,UAAU1G,GAAG2E,KAAK,SAAAC,GACtB/B,IAAI+B,EAAQhF,OACXgF,EAAQ5B,MAAM,YAtB4B,CAEtDgG,EAAKM,aAAa,QAAS,kBAC3BN,EAAK9C,MAAMqD,gBAAgB,QAC3BP,EAAKhG,MAAM,GACX,IAAI,IAAIhD,EAAE,EAAGA,EAAE,EAAKyD,MAAMiD,UAAUzG,OAAOD,IACvC,EAAKyD,MAAMiD,UAAU1G,GAAG2E,KAAK,SAAAC,GACtB/B,IAAI+B,EAAQhF,OACXgF,EAAQ5B,MAAM,QACd4B,EAAQI,SAAS,GACjBJ,EAAQ3C,SAAS,GACjB2C,EAAQwC,cAAc,SAdzB,qFAhNN,EAkPnBoC,WAAa,SAAA3G,GAET,GADA,EAAKE,SAAS,CAACkD,cAAc,IAC1B,EAAKxC,MAAMqF,OAAS,EAAKrF,MAAMuB,UAAY,EAAKvB,MAAMxB,SAkBrD,OAjBA,EAAKc,SAAS,CAAC+F,OAAO,IACtB,EAAK/F,SAAS,CAACiC,UAAU,IACzB,EAAKjC,SAAS,CAACd,UAAU,IACX6E,MAAMuB,KAAK5I,SAAS6I,uBAAuB,oBAC5C3D,KAAK,SAAA8E,GACVA,EAAOvD,MAAMC,WAAW,YAEdW,MAAMuB,KAAK5I,SAAS6I,uBAAuB,oBAChD3D,KAAK,SAAA8E,GACVA,EAAOvD,MAAMC,WAAW,iBAElBW,MAAMuB,KAAK5I,SAAS6I,uBAAuB,gBACjD3D,KAAK,SAAA+E,GACTA,EAAOJ,aAAa,QAAS,kBAWrC,OAJA,EAAKvG,SAAS,CAAC+F,OAAO,IACtB,EAAK/F,SAAS,CAACiC,UAAU,IACzB,EAAKjC,SAAS,CAACd,UAAU,IAElBY,EAAEC,OAAOlD,MACZ,IAAK,QACD,EAAKmD,SAAS,CAAC+F,OAAO,IACVrJ,SAASoJ,eAAe,gBAC9BS,aAAa,QAAS,6BAC5B,MACJ,IAAK,WACD,EAAKvG,SAAS,CAACiC,UAAU,IAEJvF,SAASoJ,eAAe,mBAC9BS,aAAa,QAAS,6BACrC,MACJ,IAAK,WACD,EAAKvG,SAAS,CAACd,UAAU,IAEJxC,SAASoJ,eAAe,mBAC9BS,aAAa,QAAS,+BA7R9B,EAuSnBK,eAAiB,WACb,EAAK5G,SAAS,CAACkD,cAAc,IAC7B,EAAKlD,SAAS,CAAC+F,OAAO,IACtB,EAAK/F,SAAS,CAACiC,UAAU,IACzB,EAAKjC,SAAS,CAACd,UAAU,IACX6E,MAAMuB,KAAK5I,SAAS6I,uBAAuB,gBAC7C3D,KAAK,SAAA+E,GACTA,EAAOJ,aAAa,QAAS,mBA9StB,EAmTnBM,YAnTmB,sBAmTL,sCAAA3I,EAAA,yDACV,EAAK8B,SAAS,CAAC4F,MAAM,KACrB,EAAK5F,SAAS,CAAC6G,aAAa,IACC,KAA1B,EAAKnG,MAAMiE,aAHJ,yCAIC,EAAK3E,SAAS,CAAC4F,MAAO,8BAJvB,UAMmB,KAA1B,EAAKlF,MAAMgE,aANJ,yCAOC,EAAK1E,SAAS,CAAC4F,MAAO,8BAPvB,WASPkB,MAAM,EAAKpG,MAAM+D,iBAA+C,KAA5B,EAAK/D,MAAM+D,eATxC,yCAUC,EAAKzE,SAAS,CAAC4F,MAAO,sCAVvB,wBAYJ,EAAKlF,MAAMqB,UAAUH,KAAK,SAAAK,GACxB,EAAKvB,MAAM+D,iBAAiBxC,EAASlE,QAAU,EAAK2C,MAAMiE,eAAe1C,EAAStD,OAClF,EAAKqB,SAAS,CAAC4F,MAAO,8CACtB,EAAK5F,SAAS,CAAC6G,aAAa,QAf1B,YAkBP,EAAKnG,MAAMmG,YAlBJ,oBAmBN9E,EAAY,EAAKrB,MAAMqB,UAErBE,EAAW,CACblE,OAAQ,EAAK2C,MAAM+D,eACnBvC,KAAM,EAAKxB,MAAMgE,aACjB/F,KAAM,EAAK+B,MAAMiE,cAEjBoC,EAAarK,SAAS6I,uBAAuB,kBAC7C7D,EAAQqC,MAAMuB,KAAKyB,GACnBC,EAAQ,GACZtF,EAAME,KAAK,SAAAqF,GACJA,EAASC,SACRF,EAAMrF,KAAKsF,EAAS5I,OAGV,IAAf2I,EAAM9J,OAlCC,0CAmCC,EAAK8C,SAAS,CAAC4F,MAAO,wCAnCvB,QAqCNvD,EAAY,EAAK3B,MAAMiD,UAC3BqD,EAAMpF,KAAI,SAAAuF,GACN9E,EAAUT,KAAK,SAAAsD,GACXA,EAAItD,KAAI,SAAAW,GACDA,EAAM1F,OAAOsK,IACiB,WAA1B,EAAKzG,MAAMiE,aACVpC,EAAM8B,cAAc1C,KAApB,WAA6B,EAAKjB,MAAM+D,iBAER,SAA1B,EAAK/D,MAAMiE,cACjBpC,EAAM8B,cAAc1C,KAApB,WAA6B,EAAKjB,MAAM+D,2BAM5D1C,EAAUJ,KAAKM,GACfF,EAAUS,KAAK,EAAKvE,gBACpB,EAAK+B,SAAS,CAAC+B,UAAWA,IAC1B,EAAK/B,SAAS,CAAC2D,UAAWtB,IAC1B,EAAKrC,SAAS,CAACkD,cAAc,IAxDnB,8FAnTK,EAsXnBkE,gBAAkB,WACd,EAAK1G,MAAMqB,UAAUH,KAAK,SAAAK,GACtB,OAAO,2BAAIA,EAASlE,OAAb,KAAuBkE,EAASC,UAxX5B,EA4XnBmF,qBAAuB,SAAAvH,GACnB,IAOIkH,EAPAjF,EAAY,EAAKrB,MAAMqB,UAC3B,EAAKrB,MAAMqB,UAAUH,KAAK,SAACK,EAAUJ,GAC9BI,EAAStD,OAAOmB,EAAEnB,MAAQsD,EAASlE,SAAS+B,EAAE/B,QAC7CgE,EAAUuF,OAAOzF,EAAQ,MAM7BmF,EADQ,WAATlH,EAAEnB,KACO,IAAImB,EAAE/B,OAER,IAAI+B,EAAE/B,OAIhB,IAAIsE,EAAY,EAAK3B,MAAMiD,UAE3BtB,EAAUT,KAAI,SAAAsD,GACVA,EAAItD,KAAI,SAAAW,GACJ,GAAGA,EAAM8B,cAAcgC,SAASW,GAAQ,CACpC,IAAI7B,EAAQ5C,EAAM8B,cAAc/G,QAAQ0J,GACxCzE,EAAM8B,cAAciD,OAAOnC,EAAM,UAI7C,EAAKnF,SAAS,CAAC2D,UAAWtB,IAG1B,EAAKrC,SAAS,CAAC+B,UAAUA,KAzZV,EA4ZnBwF,UAAY,WACR,EAAKvH,SAAS,CAACwH,UAAU,IACZ9K,SAASoJ,eAAe,QAChC2B,UA/ZU,EAmanBD,SAAW,WACP,IAAME,EAAOhL,SAASoJ,eAAe,QAC/B6B,EAAOjL,SAASkL,cAAc,OACpCD,EAAKpB,aAAa,KAAM,QACxBmB,EAAKG,MAAMF,GACX,EAAK3H,SAAS,CAACwH,UAAU,KAtazB,EAAK9G,MAAM,CACPiD,UAAU,GACVG,OAAQlE,EAAMkE,OACdF,KAAMhE,EAAMgE,KACZ3B,UAAU,EACV/C,UAAU,EACV6G,OAAO,EACPH,MAAO,GACP1C,cAAc,EACdyB,aAAc,GACdF,eAAgB,GAChBC,aAAc,GACd3C,UAAW,GACX8E,aAAa,EACbnB,SAAU,GACVpB,OAAQ,GACRkD,UAAU,EACVhI,QAAS,GACTa,aAAa,GApBF,E,4EAwGJnC,EAAEC,GACb,OAAOD,EAAEH,OAAOI,EAAEJ,S,+BAoUlB,IAAMyJ,EACF,yBAAK9H,UAAU,kBACX,4BAAQ2B,QAASL,KAAKuG,UAAUpE,MAAO,CAAC2E,UAAW,YAAapI,UAAU,eAA1E,SACJ,2FAC+D,4BAAQA,UAAU,eAAlB,SAD/D,6CAGA,4FACgE,4BAAQA,UAAU,eAAlB,YADhE,mEAGA,4FACgE,4BAAQA,UAAU,eAAlB,YADhE,0EAGA,yEAC6C,4BAAQA,UAAU,eAAlB,gBAD7C,+MAMJ,OAEA,yBAAKA,UAAU,uBACf,yBAAKA,UAAU,mBACf,4BAAQA,UAAU,cAAc2B,QAASL,KAAKwG,UAA9C,QACI,yBAAK9H,UAAU,wBACX,4BAAQA,UAAU,cAAcrB,GAAG,eAAexB,KAAK,QAAQwE,QAASL,KAAKyF,YAA7E,SACA,4BAAQ/G,UAAU,cAAcrB,GAAG,kBAAkBxB,KAAK,WAAWwE,QAASL,KAAKyF,YAAnF,YACA,4BAAQ/G,UAAU,cAAcrB,GAAG,kBAAkBxB,KAAK,WAAWwE,QAASL,KAAKyF,YAAnF,aAEJ,2BAAO/G,UAAU,SACb,+BACCsB,KAAK4D,WAAW5D,KAAKnB,aAAcmB,KAAK4B,YAAa5B,KAAK6B,YAAa7B,KAAK8B,YAAa9B,KAAKN,MAAMuB,SAAUjB,KAAKN,MAAMxB,SAAU8B,KAAKN,MAAMwC,iBAIvJ,yBAAKxD,UAAU,yBACf,yBAAKA,UAAU,8BACP,4BAAQ2B,QAASL,KAAK4F,eAAelH,UAAU,eAA/C,gBACCsB,KAAKN,MAAMwC,aAAe,yBAAKxD,UAAU,kBAC1C,kDACA,2BAAOf,KAAK,SACZ9B,KAAK,kBACLkE,SAAUC,KAAKwD,uBAEf,2CACA,2BAAO7F,KAAK,OACZ9B,KAAK,gBACLkE,SAAUC,KAAKwD,uBAEf,uCACA,4BAAQ3H,KAAK,gBAAgBkE,SAAUC,KAAKwD,sBACxC,4BAAQvE,MAAM,KACd,4BAAQA,MAAM,UAAd,UACA,4BAAQA,MAAM,QAAd,SAEJ,4BAAQoB,QAASL,KAAK6F,YAAanH,UAAU,eAA7C,QACS,MAEb,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,sBAAqB,wBAAIA,UAAU,aAAd,UACpC,kBAACoC,EAAD,CAAiBC,UAAWf,KAAKN,MAAMqB,UAAWC,aAAchB,KAAKqG,wBAErE,yBAAK3H,UAAU,sBAAqB,wBAAIA,UAAU,aAAd,QACpC,kBAACgD,EAAD,CAAeX,UAAWf,KAAKN,MAAMqB,UAAWC,aAAchB,KAAKqG,yBAGvE,yBAAK3H,UAAU,sBACX,2BAAOA,UAAU,SACb,+BACI,4BAAI,kBAAC0C,EAAD,CAAUC,UAAWrB,KAAKN,MAAMiD,gBAIhD,4BAAQjE,UAAU,cAAc2B,QAASL,KAAK2E,MAA9C,mBACC3E,KAAKN,MAAMkF,OAEf5E,KAAKN,MAAM8G,SAAWA,EAAW,KACjCxG,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAa,U,GA1fnF6B,IAAMC,WAqgBbC,eALS,SAACd,GACrB,MAAO,CAAE2B,UAAW3B,EAAM2B,UAAWqB,KAAMhD,EAAMgD,QAMjD,CAAEmC,aJ1fsB,SAACkC,EAAQhG,EAAW2D,EAAUsC,EAAS1J,GAAvC,8CAAiD,WAAMC,GAAN,eAAAL,EAAA,sEACpDM,EAAKO,KAAL,wBAA2BiJ,GAAW,CAACD,SAAQhG,YAAW2D,WAAUsC,WAAU,CAACjM,QAAS,CAACuC,MAAOA,KAD5C,OACrEI,EADqE,OAEzEH,EAAS,CAACI,KAAM,gBAAiBC,QAASF,EAASG,OAFsB,2CAAjD,uDI0fRT,WAFLoD,CAGT6B,GC9hBS4E,E,YA1EX,WAAYrI,GAAQ,IAAD,8BACf,4CAAMA,KAUVC,aAAe,SAAAC,GAEX,OADA,EAAKE,SAAS,CAAC4F,MAAO,KACf9F,EAAEC,OAAOlD,MACZ,IAAK,SACD,EAAKmD,SAAS,CAAC8D,OAAQhE,EAAEC,OAAOE,QAChC,MACJ,IAAK,OACD,EAAKD,SAAS,CAAC4D,KAAM9D,EAAEC,OAAOE,UAlBvB,EAyBnB2C,YAAc,SAAA9C,GACVoI,QAAQC,IAAI,EAAKzH,MAAMoD,QACpB,EAAKpD,MAAMoD,OAAS,GAAK,EAAKpD,MAAMoD,OAAS,IAAM,EAAKpD,MAAMkD,KAAO,GAAK,EAAKlD,MAAMkD,KAAO,IAC/F,EAAK5D,SAAS,CAACnE,QAAQ,IACvB,EAAKmE,SAAS,CAACoI,OAAQ,4BAEnB,EAAKpI,SAAS,CAAC4F,MAAO,0DA7B1B,EAAKlF,MAAQ,CACToD,OAAQ,EACRF,KAAM,EACN/H,QAAQ,EACR+J,MAAO,GACPwC,OAAQ,0EAPG,E,sEAqCf,IAAMC,EACF,yBAAK3I,UAAU,qBACX,yBAAKA,UAAU,kBACf,uCAAmB,2BACvB7C,KAAK,OACL8B,KAAK,SACL2J,IAAI,IACJC,IAAI,KACJxH,SAAUC,KAAKnB,aACfI,MAAOe,KAAKN,MAAMkD,KAClB4E,UAAQ,IAER,yCACA,2BACA3L,KAAK,SACL8B,KAAK,SACL2J,IAAI,IACJC,IAAI,KACJxH,SAAUC,KAAKnB,aACfI,MAAOe,KAAKN,MAAMoD,SAElB,4BAAQpE,UAAU,cAClB7C,KAAK,SACLwE,QAASL,KAAK4B,aAFd,UAGC5B,KAAKN,MAAMkF,QAGhB,OACI,yBAAKlG,UAAU,yBACX,4BAAKsB,KAAKN,MAAM0H,QACnBpH,KAAKN,MAAM7E,OAAS,kBAAC,EAAD,CAASiI,OAAQ9C,KAAKN,MAAMoD,OAAQF,KAAM5C,KAAKN,MAAMkD,OAAUyE,O,GApEjE/G,IAAMC,WCD/BkH,E,YACF,WAAY7I,GAAQ,IAAD,8BACf,4CAAMA,KAYV8I,eAAiB,SAAA5I,GAEb,OADA,EAAKE,SAAS,CAAC4F,MAAO,KACf9F,EAAEC,OAAOlD,MACZ,IAAK,SACD,EAAKmD,SAAS,CAAC2I,SAAS,IACxB,MACJ,IAAK,SACD,EAAK3I,SAAS,CAAC2I,SAAS,MApBjB,EA2BnB9I,aAAe,SAAAC,GAEX,OADA,EAAKE,SAAS,CAAC4F,MAAO,KACf9F,EAAEC,OAAOlD,MACZ,IAAK,QACD,EAAKmD,SAAS,CAAC4I,MAAO9I,EAAEC,OAAOE,QAC/B,MACJ,IAAK,WACD,EAAKD,SAAS,CAACd,SAAUY,EAAEC,OAAOE,QAClC,MACJ,IAAK,kBACD,EAAKD,SAAS,CAAC6I,gBAAiB/I,EAAEC,OAAOE,QACzC,MACJ,IAAK,QACD,EAAKD,SAAS,CAACE,MAAOJ,EAAEC,OAAOE,UAxCxB,EA+CnB6I,aA/CmB,uCA+CJ,WAAMhJ,GAAN,SAAA5B,EAAA,6DACX4B,EAAEU,iBADS,kBAGD,EAAKZ,MAAMmJ,UAAU,EAAKrI,MAAMkI,MAAO,EAAKlI,MAAMxB,UAHjD,OAIHqE,OAAOC,SAASC,QAAhB,UAA2B3H,IAJxB,gDAMP,EAAKkE,SAAS,CAAC4F,MAAO,KAAIlH,SAASG,OAN5B,yDA/CI,wDAyDnBmK,aAzDmB,uCAyDJ,WAAMlJ,GAAN,SAAA5B,EAAA,6DACX4B,EAAEU,iBADS,kBAGD,EAAKZ,MAAMqJ,QAAQ,EAAKvI,MAAMkI,MAAO,EAAKlI,MAAMxB,SAAU,EAAKwB,MAAMmI,gBAAiB,EAAKnI,MAAMR,OAHhG,OAIPqD,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,yBAAmD,EAAK8D,MAAM8D,KAAKwF,MAJ5D,gDAMP,EAAKlJ,SAAS,CAAC4F,MAAO,KAAIlH,SAASG,OAN5B,yDAzDI,sDAEf,EAAK6B,MAAQ,CACTkI,MAAO,GACP1J,SAAU,GACV2J,gBAAiB,GACjB3I,MAAO,GACPyI,SAAU,EACV/C,MAAM,IARK,E,sEAqEf,IAAMgD,EACF,0BAAMlJ,UAAU,OAAOrB,GAAG,cAClB,yBAAKqB,UAAU,kBACX,yBAAKA,UAAU,cACf,wCACA,2BACAf,KAAK,OACL9B,KAAK,QACLoD,MAAOe,KAAKN,MAAMkI,MAClB7H,SAAUC,KAAKnB,aACf2I,UAAQ,KAGR,yBAAK9I,UAAU,cACf,2CACA,2BACAf,KAAK,WACL9B,KAAK,WACLkE,SAAUC,KAAKnB,aACfI,MAAOe,KAAKN,MAAMxB,SAClBsJ,UAAQ,KAGR,4BAAQnH,QAASL,KAAK8H,aAAcpJ,UAAU,eAA9C,WACA,uBAAGA,UAAU,QAAQoB,KAAI,UAAKhF,EAAL,oBAAzB,iCAKVqN,EACF,0BAAMzJ,UAAU,OAAOrB,GAAG,cAClB,yBAAKqB,UAAU,kBACX,yBAAKA,UAAU,cACf,wCACA,2BACAf,KAAK,OACL9B,KAAK,QACLkE,SAAUC,KAAKnB,aACf2I,UAAQ,EACRvI,MAAOe,KAAKN,MAAMkI,SAGlB,yBAAKlJ,UAAU,cACf,2CACA,2BACAf,KAAK,WACL9B,KAAK,WACLoD,MAAOe,KAAKN,MAAMxB,SAClB6B,SAAUC,KAAKnB,aACf2I,UAAQ,KAGR,yBAAK9I,UAAU,cACf,mDACA,2BACAf,KAAK,WACL9B,KAAK,kBACLkE,SAAUC,KAAKnB,aACf2I,UAAQ,IAER,yBAAK9I,UAAU,cACf,wCACA,2BACAf,KAAK,QACL9B,KAAK,QACLoD,MAAOe,KAAKN,MAAMR,MAClBa,SAAUC,KAAKnB,aACf2I,UAAQ,MAIR,4BAAQnH,QAASL,KAAKgI,aAAatJ,UAAU,eAA7C,aAIhB,OACI,yBAAKA,UAAU,aACf,yBAAKA,UAAU,qBACX,yBAAKA,UAAU,kBACY,IAAtBsB,KAAKN,MAAMiI,SAAe,4BAAQjJ,UAAU,gBAAgB7C,KAAK,SAASwE,QAASL,KAAK0H,gBAA9D,WAAiG,4BAAQ7L,KAAK,SAASwE,QAASL,KAAK0H,gBAApC,WACrG,IAAtB1H,KAAKN,MAAMiI,SAAe,4BAAQjJ,UAAU,gBAAgB7C,KAAK,SAASwE,QAASL,KAAK0H,gBAA9D,kBAAwG,4BAAQ7L,KAAK,SAASwE,QAASL,KAAK0H,gBAApC,mBAEhH,IAAtB1H,KAAKN,MAAMiI,SAAeC,EAAQO,EAClCnI,KAAKN,MAAMkF,Y,GAzJJtE,IAAMC,WAqKfC,eALS,SAACd,GACrB,MAAO,CAAEgD,KAAMhD,EAAMgD,QAMrB,CAAEqF,UNpJmB,SAACH,EAAO1J,GAAR,8CAAqB,WAAMX,GAAN,eAAAL,EAAA,sEACrBM,EAAKO,KAAK,aAAc,CAAC6J,QAAO1J,aADX,OAE1ClD,EAAU,cADN0C,EADsC,QAETG,KAAKqK,IAAK,KAC3ClN,EAAU,aAAc0C,EAASG,KAAKuK,WAAY,KAClD7K,EAAS,CAACI,KAAM,aAAcC,QAASF,EAASG,OAJN,2CAArB,uDMoJRoK,QNrGM,SAACL,EAAO1J,EAAU2J,EAAiB3I,GAAnC,8CAA6C,WAAM3B,GAAN,eAAAL,EAAA,sEAC3CM,EAAKO,KAAK,gBAAiB,CAAC6J,QAAO1J,WAAU2J,kBAAiB3I,UADnB,OAC5DxB,EAD4D,OAEhEH,EAAS,CAACI,KAAM,WAAYC,QAASF,EAASG,OAFkB,2CAA7C,wDMmGR2C,CAGTiH,GCtKAY,EAAU,SAAC,GAAmC,IAAlC3F,EAAiC,EAAjCA,KAAM4F,EAA2B,EAA3BA,MAAOC,EAAoB,EAApBA,MAAOC,EAAa,EAAbA,QAClC,OAAI9F,EAAKkF,MAOD,oCAAE,uBAAG/L,KAAK,SAASiE,KAAK,WAAU,yBAAK2I,aAAcH,EAAMnH,OAAQuH,aAAcH,EAAMpH,OAAQtF,KAAK,SAAS6C,UAAU,kBAAiB,uBAAG7C,KAAK,SAAS6C,UAAU,sBAAwB,yBAAK7C,KAAK,SAASwB,GAAG,eAAtB,YAC3L,uBAAGxB,KAAK,UAAUiE,KAAK,YAAW,yBAAK2I,aAAcH,EAAMnH,OAAQuH,aAAcH,EAAMpH,OAAQtF,KAAK,UAAU6C,UAAU,kBAAiB,uBAAG7C,KAAK,UAAU6C,UAAU,oBAAsB,yBAAKrB,GAAG,eAAexB,KAAK,WAA5B,aAC3L,yBAAKA,KAAK,UAAU4M,aAAcH,EAAMnH,OAAQuH,aAAcH,EAAMpH,OAAQd,QAASmI,EAAQrH,KAAK,MAAMzC,UAAU,kBAAiB,uBAAG7C,KAAK,UAAU6C,UAAU,qBAAuB,yBAAK7C,KAAK,UAAUwB,GAAG,gBAAvB,cAP1L,uBAAGxB,KAAK,SAASiE,KAAK,UAAS,yBAAK2I,aAAcH,EAAMnH,OAAQuH,aAAcH,EAAMpH,OAAQtF,KAAK,SAAS6C,UAAU,kBAAiB,uBAAG7C,KAAK,SAAS6C,UAAU,gBAAkB,yBAAK7C,KAAK,SAASwB,GAAG,eAAtB,cAYpLsL,E,YACF,WAAY/J,GAAQ,IAAD,8BACf,4CAAMA,KA2BVgK,YAAc,SAAA9J,GACV,IAAIjD,EAAOiD,EAAEC,OAAOmG,WAAWrJ,KAAKoD,MAC1BvD,SAASoJ,eAAT,eAAgCjJ,IACtCsG,MAAM0G,QAAQ,SA/BH,EAkCnBC,YAAc,SAAAhK,GACV,IAAIjD,EAAOiD,EAAEC,OAAOmG,WAAWrJ,KAAKoD,MAC1BvD,SAASoJ,eAAT,eAAgCjJ,IACtCsG,MAAM0G,QAAQ,QArCH,EAyCnBxJ,YAzCmB,uCAyCL,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CAzCK,0DAwDnBuK,UAxDmB,sBAwDP,sBAAA7L,EAAA,+EAEF,EAAK0B,MAAMoK,qBAFT,OAGRzG,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,uBAAiD,EAAK8D,MAAMyC,UAAU/C,KAH9D,+CAKJ,EAAKe,YAAY,KAAI3B,SAASG,MAAM,GALhC,wDAxDO,EAiEnBoL,cAjEmB,sBAiEH,sBAAA/L,EAAA,sEACN,EAAK0B,MAAMsK,cADL,OAEZ3G,OAAOC,SAASC,QAAhB,UAA2B3H,IAFf,2CA/DZ,EAAK4E,MAAQ,CACTgD,KAAM,GACNyG,QAAQ,EACR3K,QAAS,GACTa,aAAa,GANF,E,sMAWT/B,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,eAClB0B,E,0CAEO0C,KAAKpB,MAAMxB,QAAQC,EAAIC,G,OAC7B0C,KAAKhB,SAAS,CAAC0D,KAAM1C,KAAKpB,MAAM8D,O,uDAEhC1H,EAAU,aAAc,GAAI,MAC5BA,EAAU,aAAc,GAAI,M,kBACrBuH,OAAOC,SAASC,QAAhB,UAA2B3H,K,QAGtCkF,KAAKhB,SAAS,CAACmK,QAAQ,I,8IAiDvB,OACI,oCAAGnJ,KAAKN,MAAMyJ,OAAS,yBAAKzK,UAAU,oBAClC,uBAAG7C,KAAK,OAAOiE,KAAK,KAAI,yBAAKjE,KAAK,OAAO6M,aAAc1I,KAAK8I,YAAaL,aAAczI,KAAK4I,YAAYlK,UAAU,kBAAiB,uBAAG7C,KAAK,OAAO6C,UAAU,gBAAkB,yBAAK7C,KAAK,OAAOwB,GAAG,aAApB,UAC9K,uBAAGxB,KAAK,SAASwE,QAASL,KAAK+I,WAAW,yBAAKlN,KAAK,SAAS6M,aAAc1I,KAAK8I,YAAaL,aAAczI,KAAK4I,YAAYlK,UAAU,kBAAiB,uBAAG7C,KAAK,SAAS6C,UAAU,gBAAkB,yBAAK7C,KAAK,SAASwB,GAAG,eAAtB,YACpM,uBAAGxB,KAAK,aAAaiE,KAAK,eAAc,yBAAKjE,KAAK,aAAa6M,aAAc1I,KAAK8I,YAAaL,aAAczI,KAAK4I,YAAalK,UAAU,kBAAiB,uBAAG7C,KAAK,aAAa6C,UAAU,uBAAyB,yBAAK7C,KAAK,aAAawB,GAAG,mBAA1B,gBAClN,kBAAC,EAAD,CAASqF,KAAM1C,KAAKN,MAAMgD,KAAM4F,MAAOtI,KAAK4I,YAAaL,MAAOvI,KAAK8I,YAAaN,QAASxI,KAAKiJ,iBAC3F,KACRjJ,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAa,U,GAhFxF6B,IAAMC,WA0FZC,eALS,SAACd,GACrB,MAAO,CAAEgD,KAAMhD,EAAMgD,KAAMrB,UAAW3B,EAAM2B,aAM5C,CAAEjE,UAAS8L,YPnFY,yDAAM,WAAM3L,GAAN,SAAAL,EAAA,sDAC7BlC,EAAU,aAAc,GAAI,MAC5BA,EAAU,aAAc,GAAI,MAFC,2CAAN,uDOmFCgO,mBPjCM,yDAAM,WAAMzL,GAAN,eAAAL,EAAA,sEACfM,EAAKC,IAAL,sBADe,OAChCC,EADgC,OAEpCH,EAAS,CAACI,KAAM,uBAAwBC,QAASF,EAASG,OAFtB,2CAAN,wDO+BnB2C,CAGTmI,GCtGSS,MAXf,WACI,OACA,yBAAK1K,UAAU,oBACP,yBAAKA,UAAU,qCAEf,wCCEN2K,E,YACF,WAAYzK,GAAQ,IAAD,8BACf,4CAAMA,KAyBV0D,kBA1BmB,sBA0BC,8BAAApF,EAAA,yDACZI,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,eAChB0B,EAHa,0CAKF,EAAKsB,MAAMxB,QAAQC,EAAIC,GALrB,gFAODiF,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,YAPC,eAWhB,EAAKkE,SAAS,CAAC0D,KAAM,EAAK9D,MAAM8D,OAXhB,UAaV,EAAK9D,MAAM0K,mBAAmB,EAAK5J,MAAMgD,KAAKwF,IAAK,EAAKxI,MAAM6J,WAbpD,yBAcV,EAAKvK,SAAS,CAACwK,gBAAiB,EAAK5K,MAAM6K,WAAWA,aAd5C,yBAeV,EAAKzK,SAAS,CAAC0K,OAAQ,EAAK9K,MAAM6K,WAAWvN,SAfnC,yBAiBV,EAAK0C,MAAM+K,oBAAoB,EAAKjK,MAAMgD,KAAKwF,IAAK,EAAKxI,MAAMkK,YAjBrD,yBAkBV,EAAK5K,SAAS,CAAC6K,iBAAkB,EAAKjL,MAAM6K,WAAWA,aAlB7C,yBAmBV,EAAKzK,SAAS,CAAC8K,OAAQ,EAAKlL,MAAM6K,WAAWvN,SAnBnC,yBAqBV,EAAK0C,MAAMmL,sBAAsB,EAAKrK,MAAMgD,KAAKwF,IAAK,EAAKxI,MAAMsK,cArBvD,yBAsBV,EAAKhL,SAAS,CAACiL,mBAAoB,EAAKrL,MAAM6K,WAAWA,aAtB/C,yBAuBV,EAAKzK,SAAS,CAACkL,MAAO,EAAKtL,MAAM6K,WAAWvN,SAvBlC,QAyBU,GAAvB,EAAKwD,MAAM6J,WAAkB,EAAK7J,MAAMgK,QACvC,EAAK1K,SAAS,CAACmL,eAAe,IAEP,GAAxB,EAAKzK,MAAMkK,YAAmB,EAAKlK,MAAMoK,QACxC,EAAK9K,SAAS,CAACoL,gBAAgB,IAEN,GAA1B,EAAK1K,MAAMsK,cAAqB,EAAKtK,MAAMwK,OAC1C,EAAKlL,SAAS,CAACqL,kBAAkB,IAGrC,EAAKrL,SAAS,CAACmK,QAAQ,IAnCP,yDA1BD,EAmEnBmB,cAnEmB,uCAmEH,WAAMxL,GAAN,SAAA5B,EAAA,yDACZ,EAAK8B,SAAS,CAACuL,YAAa,EAAK7K,MAAM8K,UACvC,EAAKxL,SAAS,CAACwL,QAAS1L,EAAEC,OAAOmG,WAAWsF,QAAQvL,QACb,YAApCH,EAAEC,OAAOmG,WAAWsF,QAAQvL,MAHnB,wBAIR,EAAKD,SAAS,CAACmK,QAAQ,IAJf,SAKF,EAAKvK,MAAMP,aAAawE,OAAO/D,EAAEC,OAAOmG,WAAW7D,UAAUpC,QAL3D,OAMR,EAAKD,SAAS,CAACyL,iBAAkB,EAAK7L,MAAMyC,YAC5C,EAAKrC,SAAS,CAAC0L,OAAQ,EAAK9L,MAAMyC,UAAUsJ,QAAQzO,SACpD,EAAK8C,SAAS,CAAC4L,OAAQ,EAAKhM,MAAMyC,UAAUwJ,SAAS3O,SACrD,EAAK8C,SAAS,CAAC8L,OAAQ,EAAKlM,MAAMyC,UAAU2F,QAAQY,QACpD,EAAK5I,SAAS,CAACmK,QAAQ,IAVf,4CAnEG,wDAiFnB4B,WAjFmB,uCAiFN,WAAMjM,GAAN,eAAA5B,EAAA,sDACT,EAAK8B,SAAS,CAACmK,QAAQ,IADd,KAGF,EAAKzJ,MAAM8K,QAHT,OAKA,UALA,OA4BI,WA5BJ,QAmDI,aAnDJ,wBAMDQ,EAAc,EAAKtL,MAAM6J,UANxB,KAOMzK,EAAEC,OAAOmG,WAAW/G,OAAOc,MAPjC,OAQQ,SARR,OAWQ,SAXR,yCASa,EAAKD,SAAS,CAACuK,UAAWyB,EAAY,IATnD,6DAYa,EAAKhM,SAAS,CAACuK,UAAWyB,EAAY,IAZnD,qEAiBK,EAAKpM,MAAM0K,mBAAmB,EAAK5J,MAAMgD,KAAKwF,IAAK,EAAKxI,MAAM6J,WAjBnE,eAkBD,EAAKvK,SAAS,CAACwK,gBAAiB,EAAK5K,MAAM6K,WAAWA,aACtD,EAAKzK,SAAS,CAAC0K,OAAQ,EAAK9K,MAAM6K,WAAWvN,SACnB,EAAvB,EAAKwD,MAAM6J,WAAiB,EAAK7J,MAAMgK,OACtC,EAAK1K,SAAS,CAACmL,eAAe,IAE9B,EAAKnL,SAAS,CAACmL,eAAe,IAElC,EAAKnL,SAAS,CAACmK,QAAQ,IAzBtB,6BA6BD6B,EAAc,EAAKtL,MAAMkK,WA7BxB,KA8BM9K,EAAEC,OAAOlD,KA9Bf,OA+BQ,SA/BR,QAkCQ,SAlCR,0CAgCa,EAAKmD,SAAS,CAAC4K,WAAYoB,EAAY,IAhCpD,6DAmCa,EAAKhM,SAAS,CAAC4K,WAAYoB,EAAY,IAnCpD,qEAwCK,EAAKpM,MAAM+K,oBAAoB,EAAKjK,MAAMgD,KAAKwF,IAAK,EAAKxI,MAAMkK,YAxCpE,eAyCD,EAAK5K,SAAS,CAAC6K,iBAAkB,EAAKjL,MAAM6K,WAAWA,aACvD,EAAKzK,SAAS,CAAC8K,OAAQ,EAAKlL,MAAM6K,WAAWvN,SAClB,GAAxB,EAAKwD,MAAMkK,YAAmB,EAAKlK,MAAMoK,OACxC,EAAK9K,SAAS,CAACoL,gBAAgB,IAE/B,EAAKpL,SAAS,CAACoL,gBAAgB,IAEnC,EAAKpL,SAAS,CAACmK,QAAQ,IAhDtB,6BAoDG6B,EAAc,EAAKtL,MAAMsK,aApD5B,KAqDUlL,EAAEC,OAAOlD,KArDnB,OAsDY,SAtDZ,QAyDY,SAzDZ,0CAuDiB,EAAKmD,SAAS,CAACgL,aAAcgB,EAAY,IAvD1D,6DA0DiB,EAAKhM,SAAS,CAACgL,aAAcgB,EAAY,IA1D1D,qEA+DS,EAAKpM,MAAMmL,sBAAsB,EAAKrK,MAAMgD,KAAKwF,IAAK,EAAKxI,MAAMsK,cA/D1E,eAgEG,EAAKhL,SAAS,CAACiL,mBAAoB,EAAKrL,MAAM6K,WAAWA,aACzD,EAAKzK,SAAS,CAACkL,MAAO,EAAKtL,MAAM6K,WAAWvN,SACf,GAA1B,EAAKwD,MAAMsK,cAAqB,EAAKtK,MAAMwK,MAC1C,EAAKlL,SAAS,CAACqL,kBAAkB,IAEjC,EAAKrL,SAAS,CAACqL,kBAAkB,IAErC,EAAKrL,SAAS,CAACmK,QAAQ,IAvE1B,iEAjFM,wDA8JnB8B,YAAc,SAACX,GAEX,OAAO,EAAK5K,MAAM8J,gBAAgB5I,KAAI,SAAAS,GAClC,OAAO,yBAAK3C,UAAU,iBACd,iCAAO2C,EAAU/C,IACjB,6BAAM+C,EAAU0F,OAAO7K,OAAvB,MAAkCmF,EAAU0F,OAAO,GAAG7K,QACtD,uCAAamF,EAAU6J,OACvB,wCAAc7J,EAAUwJ,SAAS3O,QAC5BmF,EAAU8J,WAAa,yBAAKzM,UAAU,SAAf,YAAwC,KAC9D2C,EAAU+J,YAAe/J,EAAU8J,WAAwD,KAA3C,yBAAKzM,UAAU,UAAf,cACjD2C,EAAU+J,WAAa,yBAAK1M,UAAU,OAAf,YAAsC,KAC9D,4BAAQA,UAAU,cAAc8L,QAAQ,UAAUnJ,UAAWA,EAAU/C,GAAI+B,QAASiK,GAAe,uBAAGE,QAAQ,UAAUnJ,UAAWA,EAAU/C,GAAI+B,QAASiK,EAAe5L,UAAU,sBAzKpL,EA8KnB2M,aAAe,SAACf,GACZ,OAAO,EAAK5K,MAAMmK,iBAAiBjJ,KAAI,SAAAS,GACnC,IAAI7E,EAAOD,EAAQ,IAAIlB,KAAKgG,EAAUiK,aACtC,OAAO,yBAAK5M,UAAU,iBACd,iCAAO2C,EAAU/C,IACjB,6BAAM+C,EAAUyB,OAAhB,MAA2BzB,EAAUuB,MACrC,0CAAgBvB,EAAU2F,QAAQY,OAClC,6CAAmBpL,GACnB,4BAAQkC,UAAU,cAAc8L,QAAQ,UAAUnJ,UAAWA,EAAU/C,GAAI+B,QAASiK,GAAe,uBAAGE,QAAQ,UAAUnJ,UAAWA,EAAU/C,GAAI+B,QAASiK,EAAe5L,UAAU,sBAtLhL,EA2LnB6M,eAAiB,SAACjB,GACd,OAAO,EAAK5K,MAAMuK,mBAAmBrJ,KAAI,SAAAS,GACrC,OAAO,uBAAG3C,UAAU,iBACZ,iCAAO2C,EAAU/C,IACjB,6BAAM+C,EAAU0F,OAAO7K,OAAvB,MAAkCmF,EAAU0F,OAAO,GAAG7K,QACtD,6BAAK,4BAAQwC,UAAU,cAAc8L,QAAQ,UAAUnJ,UAAWA,EAAU/C,GAAI+B,QAASiK,GAAe,uBAAGE,QAAQ,UAAUnJ,UAAWA,EAAU/C,GAAI+B,QAASiK,EAAe5L,UAAU,iBACxL,uBAAGoB,KAAI,sBAAiBuB,EAAU/C,KAAO,4BAAQI,UAAU,eAAc,uBAAGA,UAAU,wBA/LlG,EAAKgB,MAAM,CACP8K,QAAS,QACT9H,KAAM,GACN6G,UAAW,EACXK,WAAY,EACZI,aAAc,EACdR,gBAAiB,GACjBK,iBAAkB,GAClBI,mBAAoB,GACpBP,OAAQ,EACRI,OAAQ,EACRI,MAAO,EACPC,eAAe,EACfC,gBAAgB,EAChBC,kBAAkB,EAClBlB,QAAQ,EACRsB,iBAAkB,GAClBG,OAAQ,EACRF,OAAQ,EACRI,OAAQ,GACRP,YAAa,IAtBF,E,sEAwMf,IAAIiB,EACDxL,KAAKN,MAAM+K,mBAEVe,EAASjP,EADE,IAAIlB,KAAK2E,KAAKN,MAAM+K,iBAAiBgB,eAGpD,IAAMC,EACF,yBAAKhN,UAAU,qBACX,4BAAQA,UAAU,cAAc8L,QAASxK,KAAKN,MAAM6K,YAAalK,QAASL,KAAKsK,eAAe,uBAAGE,QAASxK,KAAKN,MAAM6K,YAAa7L,UAAU,yBAC5I,oCAAUsB,KAAKN,MAAM+K,iBAAiBnM,IACtC,4CAAkBkN,GAClB,uCAAaxL,KAAKN,MAAM+K,iBAAiBS,OACzC,wCAAclL,KAAKN,MAAM+K,iBAAiBkB,UAA1C,KAAuD3L,KAAKN,MAAMgL,OAAlE,KACA,wCAAc1K,KAAKN,MAAMkL,QACzB,0CAAgB5K,KAAKN,MAAMoL,QAC3B,2CAAiB9K,KAAKN,MAAM+K,iBAAiBmB,WAC5C5L,KAAKN,MAAM+K,iBAAiBW,WAAa,6BAAK,8CAAoBpL,KAAKN,MAAM+K,iBAAiBoB,YAAuB,KAC1H,uBAAG/L,KAAI,sBAAiBE,KAAKN,MAAM+K,iBAAiBnM,KAAM,4BAAQI,UAAU,eAAc,uBAAGA,UAAU,kBAGrGoN,EACF,yBAAKpN,UAAU,kBAAkBsB,KAAKiL,YAAYjL,KAAKsK,eACvD,yBAAK5L,UAAU,oBACNsB,KAAKN,MAAM6J,UAAU,EAAI,4BAAQpL,OAAO,OAAOkC,QAASL,KAAK+K,WAAWrM,UAAU,eAAc,uBAAGP,OAAO,OAAOO,UAAU,yBAAsC,KACjKsB,KAAKN,MAAMyK,cAAgB,KAAO,4BAAQhM,OAAO,OAAOkC,QAASL,KAAK+K,WAAYrM,UAAU,eAAc,uBAAGP,OAAO,OAAOO,UAAU,4BAI5IqN,EACF,yBAAKrN,UAAU,kBAAkBsB,KAAKuL,eAAevL,KAAKsK,eAC1D,yBAAK5L,UAAU,oBACNsB,KAAKN,MAAMsK,aAAa,EAAI,4BAAQ7L,OAAO,OAAOkC,QAASL,KAAK+K,WAAWrM,UAAU,eAAc,uBAAGP,OAAO,OAAOO,UAAU,yBAAsC,KACpKsB,KAAKN,MAAM2K,iBAAmB,KAAO,4BAAQlM,OAAO,OAAOkC,QAASL,KAAK+K,WAAWrM,UAAU,eAAc,uBAAGP,OAAO,OAAMO,UAAU,4BAK7IsN,EACF,yBAAKtN,UAAU,kBAAkBsB,KAAKqL,aAAarL,KAAKsK,eACxD,yBAAK5L,UAAU,oBACNsB,KAAKN,MAAMkK,WAAW,EAAI,4BAAQzL,OAAO,OAAOkC,QAASL,KAAK+K,WAAWrM,UAAU,eAAc,uBAAGP,OAAO,OAAOO,UAAU,yBAAsC,KAClKsB,KAAKN,MAAM0K,eAAiB,KAAO,4BAAQjM,OAAO,OAAOkC,QAASL,KAAK+K,WAAWrM,UAAU,eAAc,uBAAGP,OAAO,OAAOO,UAAU,4BAI5IyK,EACF,oCAAwB,UAArBnJ,KAAKN,MAAM8K,QAAoB,oCAAGsB,GAAY,KACvB,WAArB9L,KAAKN,MAAM8K,QAAqB,6BAAMwB,GAAgB,KACjC,aAArBhM,KAAKN,MAAM8K,QAAuB,6BAAMuB,GAAkB,KACrC,YAArB/L,KAAKN,MAAM8K,QAAsB,6BAAMkB,GAAiB,MAGjE,OACI,oCACA,yBAAKhN,UAAU,0BACW,UAArBsB,KAAKN,MAAM8K,QACZ,4BAAQnK,QAASL,KAAKsK,cAAeE,QAAQ,QAAO9L,UAAU,+BAA9D,SACA,4BAAQ2B,QAASL,KAAKsK,cAAeE,QAAQ,QAAO9L,UAAU,wBAA9D,SACsB,WAArBsB,KAAKN,MAAM8K,QACZ,4BAAQnK,QAASL,KAAKsK,cAAeE,QAAQ,SAAS9L,UAAU,+BAAhE,UACA,4BAAQ2B,QAASL,KAAKsK,cAAeE,QAAQ,SAAS9L,UAAU,wBAAhE,UACsB,aAArBsB,KAAKN,MAAM8K,QACZ,4BAAQnK,QAASL,KAAKsK,cAAeE,QAAQ,WAAW9L,UAAU,+BAAlE,eACA,4BAAQ2B,QAASL,KAAKsK,cAAeE,QAAQ,WAAW9L,UAAU,wBAAlE,gBAEJ,yBAAKA,UAAU,mBACVsB,KAAKN,MAAMyJ,OAASA,EAAS,kBAAC,EAAD,Y,GA1Qd7I,IAAMC,WAyRvBC,eALS,SAACd,GACrB,MAAO,CAAE+J,WAAY/J,EAAM+J,WAAY/G,KAAMhD,EAAMgD,KAAMrB,UAAW3B,EAAM2B,aAM1E,CAAEiI,mBTpM4B,SAACjM,EAAI4O,GAAL,8CAAc,WAAM1O,GAAN,eAAAL,EAAA,sEACvBM,EAAKC,IAAL,4BAA8BJ,EAA9B,YAAoC4O,IADb,OACxCvO,EADwC,OAE5CH,EAAS,CAACI,KAAM,uBAAwBC,QAASF,EAASG,OAFd,2CAAd,uDSoMR8L,oBT/LS,SAACtM,EAAI4O,GAAL,8CAAc,WAAM1O,GAAN,eAAAL,EAAA,sEACxBM,EAAKC,IAAL,6BAA+BJ,EAA/B,YAAqC4O,IADb,OACzCvO,EADyC,OAE7CH,EAAS,CAACI,KAAM,wBAAyBC,QAASF,EAASG,OAFd,2CAAd,uDS+LYkM,sBT1LV,SAAC1M,EAAI4O,GAAL,8CAAc,WAAM1O,GAAN,eAAAL,EAAA,sEAC1BM,EAAKC,IAAL,+BAAiCJ,EAAjC,YAAuC4O,IADb,OAC3CvO,EAD2C,OAE/CH,EAAS,CAACI,KAAM,0BAA2BC,QAASF,EAASG,OAFd,2CAAd,uDS0LiCT,UAASiB,gBAFhEmC,CAGT6I,GC3RA6C,E,YAEF,WAAYtN,GAAQ,IAAD,8BACf,4CAAMA,KAiBV0D,kBAlBmB,sBAkBC,kCAAApF,EAAA,yDACZI,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,eAChB0B,EAHa,0CAKN,EAAKsB,MAAMxB,QAAQC,EAAIC,GALjB,gFAODiF,OAAOC,SAASC,QAAhB,UAA2B3H,KAP1B,QASZ,EAAKkE,SAAS,CAAC4I,MAAO,EAAKhJ,MAAM8D,KAAKkF,QACtC,EAAK5I,SAAS,CAACE,MAAO,EAAKN,MAAM8D,KAAKxD,QACtC,EAAKF,SAAS,CAAC8M,MAAO,EAAKlN,MAAM8D,KAAKoJ,MAAM5P,SAC5C,EAAK8C,SAAS,CAACgN,OAAQ,EAAKpN,MAAM8D,KAAKsJ,OAAO9P,SAC1CiQ,EAAU,EACVC,EAAU,EACd,EAAKxN,MAAM8D,KAAKoJ,MAAMlL,KAAK,SAAAS,GACpBA,EAAU8J,WACTgB,GAAW,EAEP9K,EAAU+J,aACdgB,GAAU,MAGlB,EAAKpN,SAAS,CAACmN,SAAUA,IACzB,EAAKnN,SAAS,CAACoN,SAAUA,IAxBb,wBA2BZ7J,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,WA3BY,yDAlBD,EAiDnBuE,YAjDmB,uCAiDL,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CAjDK,0DAgEnBK,aAhEmB,uCAgEJ,WAAMC,GAAN,SAAA5B,EAAA,sDACX,EAAK8B,SAAS,CAAC4F,MAAO,KADX,KAEJ9F,EAAEC,OAAOlD,KAFL,OAGF,UAHE,OAMF,UANE,OASF,oBATE,8BAIP,EAAKmD,SAAS,CAAC4I,MAAO9I,EAAEC,OAAOE,QAJxB,mCAOP,EAAKD,SAAS,CAACE,MAAOJ,EAAEC,OAAOE,QAPxB,mCAUP,EAAKD,SAAS,CAACqN,gBAAiBvN,EAAEC,OAAOE,QAVlC,qGAhEI,wDAiFnBqN,aAjFmB,uCAiFJ,WAAMxN,GAAN,iBAAA5B,EAAA,yDACX4B,EAAEU,iBACF,EAAKR,SAAS,CAAC4F,MAAO,KAClBtH,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,cAEa,KAA7B,EAAK8D,MAAM2M,gBANH,yCAOA,EAAKhN,YAAY,2DAA2D,IAP5E,gCAUL,EAAKT,MAAM2N,WAAW,EAAK7M,MAAMkI,MAAO,EAAKlI,MAAMR,MAAO,EAAKQ,MAAM2M,gBAAiBhP,EAAIC,GAVrF,OAWX,EAAK+B,YAAY,EAAKT,MAAM8D,MAXjB,2EAaA,EAAKrD,YAAY,KAAI3B,SAASG,MAAM,IAbpC,0DAjFI,sDAEf,EAAK6B,MAAQ,CACTgD,KAAK,GACLkF,MAAO,GACP1I,MAAO,GACPmN,gBAAiB,GACjBzH,MAAO,GACPkH,MAAO,GACPE,OAAQ,GACRG,SAAU,GACVC,SAAS,GACT5N,QAAS,GACTa,aAAa,EACbZ,SAAS,GAdE,E,sEAoGf,OACI,yBAAKC,UAAU,mBACX,0BAAMA,UAAU,OAAOrB,GAAG,eACtB,yBAAKqB,UAAU,kBACX,yBAAKA,UAAU,cACf,wCACA,2BACAf,KAAK,OACL9B,KAAK,QACLkE,SAAUC,KAAKnB,aACf2I,UAAQ,EACRvI,MAAOe,KAAKN,MAAMkI,SAGlB,yBAAKlJ,UAAU,cACf,wCACA,2BACAf,KAAK,QACL9B,KAAK,QACLoD,MAAOe,KAAKN,MAAMR,MAClBa,SAAUC,KAAKnB,aACf2I,UAAQ,KAGR,yBAAK9I,UAAU,cACf,mDACA,2BACAf,KAAK,WACL9B,KAAK,kBACLkE,SAAUC,KAAKnB,aACf2I,UAAQ,KAGR,4BAAQnH,QAASL,KAAKsM,aAAa5N,UAAU,eAA7C,YAGPsB,KAAKN,MAAMkF,MAEZ,kDACuB5E,KAAKN,MAAMoM,OAElC,qDAC0B9L,KAAKN,MAAMyM,SADrC,IACgDnM,KAAKN,MAAMoM,OAE3D,qDAC0B9L,KAAKN,MAAM0M,SADrC,IACgDpM,KAAKN,MAAMoM,OAE3D,mDACwB9L,KAAKN,MAAMsM,QAElChM,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAa,U,GAxJ3F6B,IAAMC,WAmKbC,eALS,SAACd,GACrB,MAAO,CAAEgD,KAAMhD,EAAMgD,QAMrB,CAAEtF,UAASmP,WV3IW,SAAC3E,EAAO1I,EAAOmN,EAAiBhP,EAAIC,GAApC,8CAA8C,WAAMC,GAAN,eAAAL,EAAA,sEAC/CM,EAAKY,IAAL,sBAAwBf,GAAM,CAACuK,QAAO1I,QAAOmN,mBAAkB,CAACtR,QAAS,CAACuC,MAAOA,KADlC,OAChEI,EADgE,OAEpEH,EAAS,CAACI,KAAM,cAAeC,QAASF,EAASG,OAFmB,2CAA9C,wDUyIX2C,CAGT0L,GCtKAM,E,YAEF,WAAY5N,GAAQ,IAAD,8BACf,4CAAMA,KAYV0D,kBAbmB,sBAaC,8BAAApF,EAAA,yDACZI,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,eAChB0B,EAHa,gCAIN,EAAKsB,MAAMxB,QAAQC,EAAIC,GAJjB,6BAOZiF,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,WAPY,2CAbD,EAwBnB+D,aAxBmB,uCAwBJ,WAAMC,GAAN,SAAA5B,EAAA,sDACX,EAAK8B,SAAS,CAAC4F,MAAO,KADX,KAEJ9F,EAAEC,OAAOlD,KAFL,OAGF,gBAHE,OAMF,uBANE,OASF,oBATE,8BAIP,EAAKmD,SAAS,CAACyN,YAAa3N,EAAEC,OAAOE,QAJ9B,mCAOP,EAAKD,SAAS,CAAC0N,mBAAoB5N,EAAEC,OAAOE,QAPrC,mCAUP,EAAKD,SAAS,CAACqN,gBAAiBvN,EAAEC,OAAOE,QAVlC,qGAxBI,wDAyCnBI,YAzCmB,uCAyCL,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CAzCK,0DAwDnB8N,aAxDmB,uCAwDJ,WAAMxN,GAAN,iBAAA5B,EAAA,yDACX4B,EAAEU,iBACF,EAAKR,SAAS,CAAC4F,MAAO,KAClBtH,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,cAEa,KAA7B,EAAK8D,MAAM2M,gBANH,yCAOA,EAAKhN,YAAY,2DAA2D,IAP5E,gCAUL,EAAKT,MAAM+N,eAAe,EAAKjN,MAAM+M,YAAa,EAAK/M,MAAMgN,mBAAoB,EAAKhN,MAAM2M,gBAAiBhP,EAAIC,GAV5G,OAWX,EAAK+B,YAAY,EAAKT,MAAM8D,MAXjB,2EAaA,EAAKrD,YAAY,KAAI3B,SAASG,MAAM,IAbpC,0DAxDI,sDAEf,EAAK6B,MAAQ,CACTgD,KAAK,GACL+J,YAAa,GACbC,mBAAoB,GACpBL,gBAAiB,GACjBzH,MAAO,GACPpG,QAAS,GACTa,aAAa,GATF,E,sEA2Ef,OACI,yBAAKX,UAAU,mBACX,0BAAMA,UAAU,OAAOrB,GAAG,eACtB,yBAAKqB,UAAU,kBACX,yBAAKA,UAAU,cACf,+CACA,2BACAf,KAAK,WACL9B,KAAK,cACLkE,SAAUC,KAAKnB,aACfoB,YAAY,4BACZuH,UAAQ,KAGR,yBAAK9I,UAAU,cACf,uDACA,2BACAf,KAAK,WACL9B,KAAK,qBACLoE,YAAY,+BACZF,SAAUC,KAAKnB,aACf2I,UAAQ,KAGR,yBAAK9I,UAAU,cACf,mDACA,2BACAf,KAAK,WACL9B,KAAK,kBACLkE,SAAUC,KAAKnB,aACfoB,YAAY,gCACZuH,UAAQ,KAGR,4BAAQnH,QAASL,KAAKsM,aAAa5N,UAAU,eAA7C,YAGPsB,KAAKN,MAAMkF,MACX5E,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAa,U,GAnHpF6B,IAAMC,WA8HpBC,eALS,SAACd,GACrB,MAAO,CAAEgD,KAAMhD,EAAMgD,QAMrB,CAAEtF,UAASuP,eXxEe,SAACF,EAAaC,EAAoBL,EAAiBhP,EAAIC,GAAvD,8CAAiE,WAAMC,GAAN,eAAAL,EAAA,sEACtEM,EAAKY,IAAL,+BAAiCf,GAAM,CAACoP,cAAaC,qBAAoBL,mBAAkB,CAACtR,QAAS,CAACuC,MAAOA,KADvC,OACvFI,EADuF,OAE3FH,EAAS,CAACI,KAAM,kBAAmBC,QAASF,EAASG,OAFsC,2CAAjE,wDWsEf2C,CAGTgM,GCnIAI,E,YACF,WAAYhO,GAAQ,IAAD,8BACf,4CAAMA,KAMV0D,kBAPmB,sBAOC,8BAAApF,EAAA,6DACZI,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,cAFH,kBAIF,EAAKgD,MAAMxB,QAAQC,EAAIC,GAJrB,gFAMDiF,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,YANC,yDAPD,EAiBnBwP,cAAgB,SAAAxL,GACZ,EAAKE,SAAS,CAACwL,QAAS1L,EAAEC,OAAOlD,QAhBjC,EAAK6D,MAAM,CACP8K,QAAS,WAHE,E,sEAuBf,OACI,oCACA,yBAAK9L,UAAU,0BACW,YAArBsB,KAAKN,MAAM8K,QACZ,4BAAQnK,QAASL,KAAKsK,cAAezO,KAAK,UAAS6C,UAAU,+BAA7D,mBACA,4BAAQ2B,QAASL,KAAKsK,cAAezO,KAAK,UAAS6C,UAAU,wBAA7D,mBACsB,aAArBsB,KAAKN,MAAM8K,QACZ,4BAAQnK,QAASL,KAAKsK,cAAezO,KAAK,WAAW6C,UAAU,+BAA/D,mBACA,4BAAQ2B,QAASL,KAAKsK,cAAezO,KAAK,WAAW6C,UAAU,wBAA/D,oBAEJ,yBAAKA,UAAU,mBACW,YAArBsB,KAAKN,MAAM8K,QAAsB,kBAAC,EAAD,MAAa,KACzB,aAArBxK,KAAKN,MAAM8K,QAAuB,kBAAC,EAAD,MAAoB,W,GApCzClK,IAAMC,WAiDrBC,gBALS,SAACd,GACrB,MAAO,CAAEgD,KAAMhD,EAAMgD,QAMrB,CAAEtF,WAFSoD,CAGToM,GC5BSC,OA5Bf,YAAyE,IAAlDnK,EAAiD,EAAjDA,KAAM7D,EAA2C,EAA3CA,aAAciO,EAA6B,EAA7BA,cAAeC,EAAc,EAAdA,YACtD,OACI,yBAAKrO,UAAU,0BACX,yBAAKA,UAAU,uBACX,0DAEJ,yBAAKA,UAAU,wBACnB,4EAAkDgE,EAAlD,KACQ,0BAAMrF,GAAG,gBACL,yBAAKqB,UAAU,kBACX,gDACA,yBAAKA,UAAU,cACX,2BACA7C,KAAK,WACLkE,SAAUlB,EAAasC,OACvBlB,YAAY,qBACZtC,KAAK,eAIb,4BAAQ0C,QAASyM,EAAc3L,KAAK,MAAOzC,UAAU,eAAc,uBAAGA,UAAU,kBAChF,4BAAQ2B,QAAS0M,EAAY5L,KAAK,MAAOgB,MAAO,CAACqD,gBAAiB,OAAQ9G,UAAU,eAAc,uBAAGA,UAAU,sBClB7HsO,G,YACF,WAAYpO,GAAQ,IAAD,8BACf,4CAAMA,KAeVS,YAhBmB,uCAgBL,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CAhBK,0DA+BnByO,aA/BmB,uCA+BJ,WAAMnO,GAAN,eAAA5B,EAAA,yDACX4B,EAAEU,iBACF,EAAKR,SAAS,CAACkO,MAAO,KACD,IAAlB,EAAKxN,MAAMyN,MAHH,yCAIA,EAAK9N,YAAY,iCAAiC,IAJlD,cAMP/B,EAAQ1B,EAAU,cANX,kBAQL,EAAKgD,MAAMwO,gBAAgB,EAAK1N,MAAMyN,MAAO7P,GARxC,wBASL,EAAK0B,SAAS,CAACkO,MAAO,EAAKtO,MAAMsO,QAT5B,0DAYP,EAAK7N,YAAY,KAAI3B,SAASG,MAAM,GAZ7B,0DA/BI,wDAgDnBiP,cAhDmB,uCAgDH,WAAMhO,GAAN,eAAA5B,EAAA,6DACR6B,EAASD,EAAEC,OADH,SAEN,EAAKC,SAAS,CAAC0D,KAAM3D,EAAOlD,OAFtB,uBAGN,EAAKmD,SAAS,CAACf,OAAQc,EAAO1B,KAHxB,OAIZ,EAAK2B,SAAS,CAACqO,SAAS,IAJZ,2CAhDG,wDAuDnBC,cAvDmB,uCAuDH,WAAMxO,GAAN,eAAA5B,EAAA,6DACZ4B,EAAEU,iBACElC,EAAQ1B,EAAU,cAFV,kBAIN,EAAKgD,MAAMZ,YAAY,EAAK0B,MAAMzB,OAAQ,EAAKyB,MAAMxB,SAAUZ,EAAO,OAJhE,OAKZ,EAAKsB,MAAMS,YAAY,EAAKT,MAAM8D,MAClC,EAAK9D,MAAM0N,eANC,gDASR,EAAKjN,YAAY,KAAI3B,SAASG,MAAM,GAT5B,yDAvDG,wDAsEnBkP,YAAc,SAAAjO,GACVA,EAAEU,iBACF,EAAKR,SAAS,CAACqO,SAAS,KAxET,EA2EnBxO,aAAe,SAAAC,GAEX,OADA,EAAKE,SAAS,CAAC4F,MAAO,KACf9F,EAAEC,OAAOlD,MACZ,IAAK,QACD,EAAKmD,SAAS,CAACmO,MAAOrO,EAAEC,OAAOE,QAC/B,MACJ,IAAK,WACD,EAAKD,SAAS,CAACd,SAAUY,EAAEC,OAAOE,UAlF3B,EA0FnBsO,YAAc,WACV,OAAO,EAAK7N,MAAMwN,MAAMtM,KAAI,SAAA8B,GACxB,OAAO,yBAAKhE,UAAU,uBAAsB,6BAAMgE,EAAKkF,OAAhD,IAA6D,4BAAQvK,GAAIqF,EAAKwF,IAAKrM,KAAM6G,EAAKkF,MAAOvH,QAAS,EAAKyM,cAAcpO,UAAU,eAA9E,UA1FxE,EAAKgB,MAAQ,CACTyN,MAAO,GACPvI,MAAO,GACPsI,MAAO,GACPG,SAAS,EACT3K,KAAM,GACNzE,OAAQ,GACRC,SAAU,GACVM,QAAS,GACTa,aAAa,EACbZ,SAAS,GAZE,E,sEAiGf,OACI,oCACA,0BAAMC,UAAU,cACZ,2BACA7C,KAAK,QACLoE,YAAY,mBACZF,SAAUC,KAAKnB,eACf,4BAAQH,UAAU,cAAc2B,QAASL,KAAKiN,cAA9C,UACCjN,KAAKN,MAAMkF,OAEf5E,KAAKN,MAAMwN,MAAMhR,OAAO,EAAI,yBAAKwC,UAAU,yBAAyBsB,KAAKuN,eAAuB,KAChGvN,KAAKN,MAAM2N,QAAU,kBAAC,GAAD,CAAc3K,KAAM1C,KAAKN,MAAMgD,KAAM7D,aAAcmB,KAAKnB,aAAciO,cAAe9M,KAAKsN,cAAeP,YAAa/M,KAAK+M,cAAkB,KAClK/M,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAa,U,GA9GrF6B,IAAMC,WAyHfC,gBALS,SAACd,GACrB,MAAO,CAAEwN,MAAOxN,EAAMwN,MAAOxK,KAAMhD,EAAMgD,QAMzC,CAAE0K,gBd/GyB,SAACD,EAAO7P,GAAR,8CAAkB,WAAMC,GAAN,eAAAL,EAAA,sEACxBM,EAAKC,IAAL,qBAAuB0P,GAAS,CAACpS,QAAS,CAACuC,MAAOA,KAD1B,OACzCI,EADyC,OAE7CH,EAAS,CAACI,KAAM,qBAAsBC,QAASF,EAASG,OAFX,2CAAlB,uDc+GRG,eAFRwC,CAGTwM,IC1HAQ,G,YACF,WAAY5O,GAAQ,IAAD,8BACf,4CAAMA,KAqBV6O,mBAtBmB,sBAsBE,4BAAAvQ,EAAA,yDACbI,EAAQ1B,EAAU,eACnB,EAAK8D,MAAMgO,OAFG,0CAIP,EAAK9O,MAAM+O,UAAUrQ,GAJd,OAKb,EAAK0B,SAAS,CAAC4O,OAAQ,EAAKhP,MAAMsO,QALrB,gDAOT,EAAKlO,SAAS,CAAC6O,MAAO,KAAInQ,SAASG,OAP1B,QASb,EAAKmB,SAAS,CAAC0O,QAAQ,IATV,yDAtBF,EAmCnBpL,kBAnCmB,sBAmCC,8BAAApF,EAAA,yDACZI,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,eAEhB0B,EAJa,0CAMF,EAAKsB,MAAMxB,QAAQC,EAAIC,GANrB,WAOqB,IAA1B,EAAKsB,MAAM8D,KAAKoL,QAPX,yCAQGvL,OAAOC,SAASC,QAAhB,UAA2B3H,KAR9B,kFAWDyH,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,YAXC,mCAeN,EAAK8D,MAAMmP,wBAAwBzQ,GAf7B,yBAgBN,EAAKsB,MAAM+O,UAAUrQ,GAhBf,QAiBhB,EAAK0B,SAAS,CAACgP,MAAO,EAAKpP,MAAM6K,aACjC,EAAKzK,SAAS,CAAC4O,OAAQ,EAAKhP,MAAMsO,QAlBlB,mDAoBZ,EAAKlO,SAAS,CAAC6O,MAAO,KAAInQ,SAASG,OApBvB,kEAnCD,EA4DnBoQ,iBAAmB,WACf,OAAG,EAAKvO,MAAMsO,MAAM9R,OAAO,EACpB,EAAKwD,MAAMsO,MAAMpN,KAAK,SAAAS,GACzB,IAAI7E,EAAOD,EAAQ,IAAIlB,KAAKgG,EAAUoK,cACtC,OACI,uBAAG3L,KAAI,2BAAsBuB,EAAU/C,IAAMI,UAAU,iBACnD,iCAAO2C,EAAU/C,IACjB,6BAAM+C,EAAU0F,OAAO7K,OAAvB,MAAkCmF,EAAU0F,OAAO,GAAG7K,QACtD,0CAAgBmF,EAAU2F,QAAQY,OAClC,4CAAkBpL,OAKvB,6BAAM,EAAKkD,MAAMmO,QA1ET,EA8EnBf,cA9EmB,uCA8EH,WAAMhO,GAAN,eAAA5B,EAAA,6DACR6B,EAASD,EAAEC,OADH,SAEN,EAAKC,SAAS,CAACf,OAAQc,EAAO1B,KAFxB,uBAGN,EAAK2B,SAAS,CAAC0D,KAAM3D,EAAOlD,OAHtB,OAIZ,EAAKmD,SAAS,CAACqO,SAAS,IAJZ,2CA9EG,wDAqFnBhO,YArFmB,uCAqFL,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CArFK,0DAoGnB0P,cApGmB,uCAoGH,WAAMpP,GAAN,mBAAA5B,EAAA,6DACZ4B,EAAEU,iBACElC,EAAQ1B,EAAU,cAFV,kBAIF,EAAKgD,MAAMuP,YAAYrP,EAAEC,OAAO1B,GAAIC,GAJlC,gFAMDiF,OAAOC,SAASC,QAAhB,UAA2B3H,KAN1B,QAQZ,EAAKkE,SAAS,CAACwL,QAAS,KACxB,EAAKxL,SAAS,CAAC0M,SAAS,IACxB,EAAK1M,SAAS,CAACoP,YAAa,EAAKxP,MAAM8D,OACnClG,EAAO,IAAInB,KAAK,EAAKuD,MAAM8D,KAAK+I,aAChCD,EAASjP,EAAQC,GACrB,EAAKwC,SAAS,CAACqP,WAAY7C,IAbf,yDApGG,wDAoHnB8C,aAAe,SAACxB,EAAeoB,GAE3B,OAAO,EAAKxO,MAAMkO,OAAOhN,KAAK,SAAA2N,GAC1B,IACI/C,EAASjP,EADF,IAAIlB,KAAKkT,EAAM9C,cAG1B,OACI,4BACI,4BAAK8C,EAAM3G,OACX,4BAAK2G,EAAMrP,OACX,4BAAKsM,GACL,4BAAI,4BAAQ3P,KAAM0S,EAAM3G,MAAOvK,GAAIkR,EAAMrG,IAAK7H,QAASyM,EAAepO,UAAU,eAAc,uBAAG7C,KAAM0S,EAAM3G,MAAOvK,GAAIkR,EAAMrG,IAAK7H,QAASyM,EAAepO,UAAU,sBAAgC,4BAAQ7C,KAAM0S,EAAM3G,MAAOvK,GAAIkR,EAAMrG,IAAK7H,QAAS6N,EAAexP,UAAU,eAAc,uBAAG7C,KAAM0S,EAAM3G,MAAOvK,GAAIkR,EAAMrG,IAAK7H,QAAS6N,EAAexP,UAAU,8BA/HnW,EAqInB4L,cAAgB,SAAAxL,GACZ,EAAKE,SAAS,CAACwL,QAAS1L,EAAEC,OAAOlD,OACjC,EAAKmD,SAAS,CAAC0M,SAAS,KAvIT,EA0InBqB,YAAc,SAAAjO,GACVA,EAAEU,iBACF,EAAKR,SAAS,CAACqO,SAAS,KA5IT,EA+InBxO,aAAe,SAAAC,GACX,OAAOA,EAAEC,OAAOlD,MACZ,IAAK,WACD,EAAKmD,SAAS,CAACd,SAAUY,EAAEC,OAAOE,UAlJ3B,EAsJnB+B,aAtJmB,uCAsJJ,WAAMlC,GAAN,eAAA5B,EAAA,6DACX4B,EAAEU,iBACElC,EAAQ1B,EAAU,cAFX,kBAIL,EAAKgD,MAAMZ,YAAY,EAAK0B,MAAMzB,OAAQ,EAAKyB,MAAMxB,SAAUZ,EAAO,UAJjE,OAKX,EAAK0B,SAAS,CAACqO,SAAS,IACxB,EAAKrO,SAAS,CAAC0O,QAAQ,IACvB,EAAKrO,YAAY,EAAKT,MAAM8D,MAPjB,kDASP,EAAKrD,YAAY,KAAI3B,SAASG,MAAM,GAT7B,0DAtJI,wDAmKnB2Q,UAAY,WACL,EAAK9O,MAAM+O,IACd,EAAKzP,SAAS,CAACyP,KAAK,IAEhB,EAAKzP,SAAS,CAACyP,KAAK,KAvKT,EA2KnBC,WAAa,WACT,EAAK1P,SAAS,CAAC0M,SAAS,IACxB,EAAK1M,SAAS,CAACwL,QAAS,YA3KxB,EAAK9K,MAAM,CACP8K,QAAS,SACTwD,MAAO,GACPJ,OAAQ,GACRC,MAAM,GACNY,KAAK,EACLf,QAAQ,EACRzP,OAAQ,GACRyE,KAAM,GACN2K,SAAS,EACTnP,SAAU,GACVM,QAAS,GACTa,aAAa,EACb+O,YAAa,GACb1C,SAAS,EACT2C,WAAY,GACZ5P,SAAS,GAlBE,E,sEAgLT,IAAD,OACL,OACI,oCACA,yBAAKC,UAAU,0BACW,YAArBsB,KAAKN,MAAM8K,QACZ,4BAAQnK,QAASL,KAAKsK,cAAezO,KAAK,UAAS6C,UAAU,+BAA7D,yBACA,4BAAQ2B,QAASL,KAAKsK,cAAezO,KAAK,UAAS6C,UAAU,wBAA7D,yBACsB,WAArBsB,KAAKN,MAAM8K,QACZ,4BAAQnK,QAASL,KAAKsK,cAAezO,KAAK,SAAS6C,UAAU,+BAA7D,UACA,4BAAQ2B,QAASL,KAAKsK,cAAezO,KAAK,SAAS6C,UAAU,wBAA7D,WAEJ,yBAAKA,UAAU,mBACW,YAArBsB,KAAKN,MAAM8K,QACR,yBAAK9L,UAAU,kBACVsB,KAAKiO,oBAEb,KACqB,WAArBjO,KAAKN,MAAM8K,QACZ,6BACI,4BAAQrI,MAAO,CAACwM,MAAO,OAAQC,SAAU,QAAQlQ,UAAU,cAAc2B,QAASL,KAAKwO,WAAW,uBAAG9P,UAAU,sBAC9GsB,KAAKN,MAAM+O,IAAM,kBAAC,GAAD,CAAWpP,YAAaW,KAAKX,YAAaiN,aAAc,WAAO,EAAKtN,SAAS,CAAC0O,QAAO,IAAQ,EAAK1O,SAAS,CAACyP,KAAK,OAAc,KACjJ,2BAAO/P,UAAU,gBACb,+BACQ,4BACI,qCACA,qCACA,4CACA,wCAGJ,+BACCsB,KAAKsO,aAAatO,KAAK8M,cAAe9M,KAAKkO,kBAI1D,KACDlO,KAAKN,MAAMgM,QAAU,yBAAKhN,UAAU,qBACjC,4BAAQA,UAAU,cAAc2B,QAASL,KAAK0O,YAAY,uBAAGhQ,UAAU,yBACvE,uCAAasB,KAAKN,MAAM0O,YAAYxG,OACpC,wCAAc5H,KAAKN,MAAM0O,YAAYlP,OACrC,qDAA2Bc,KAAKpB,MAAM8D,KAAKyJ,SAASjQ,QACpD,kDAAwB8D,KAAKpB,MAAM8D,KAAKoJ,MAAM5P,QAC9C,8CAAoB8D,KAAKN,MAAM2O,aACtB,KACZrO,KAAKN,MAAM2N,QAAU,kBAAC,GAAD,CAAc3K,KAAM1C,KAAKN,MAAMgD,KAAM7D,aAAcmB,KAAKnB,aAAciO,cAAe9M,KAAKgB,aAAc+L,YAAa/M,KAAK+M,cAAiB,KAChK/M,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAc,W,GA9N9E6B,IAAMC,WA0O3BC,gBALS,SAACd,GACrB,MAAO,CAAE+J,WAAY/J,EAAM+J,WAAYyD,MAAOxN,EAAMwN,MAAOxK,KAAMhD,EAAMgD,QAMvE,CAAEqL,wBftIiC,SAACzQ,GAAD,8CAAW,WAAMC,GAAN,eAAAL,EAAA,sEACzBM,EAAKC,IAAI,yBAA0B,CAAC1C,QAAS,CAACuC,MAAOA,KAD5B,OAC1CI,EAD0C,OAE9CH,EAAS,CAACI,KAAM,YAAaC,QAASF,EAASG,OAFD,2CAAX,uDesIR8P,UfvON,SAACrQ,GAAD,8CAAW,WAAMC,GAAN,eAAAL,EAAA,sEACXM,EAAKC,IAAI,cAAe,CAAC1C,QAAS,CAACuC,MAAOA,KAD/B,OAC5BI,EAD4B,OAEhCH,EAAS,CAACI,KAAM,aAAcC,QAASF,EAASG,OAFhB,2CAAX,uDeuOiBG,cAAamQ,Yf5O5B,SAAC9Q,EAAIC,GAAL,8CAAe,WAAMC,GAAN,eAAAL,EAAA,sEACjBM,EAAKC,IAAL,kBAAoBJ,GAAM,CAACtC,QAAS,CAACuC,MAAOA,KAD3B,OAClCI,EADkC,OAEtCH,EAAS,CAACI,KAAM,iBAAkBC,QAASF,EAASG,OAFd,2CAAf,uDe4OyCT,WAFrDoD,CAGTgN,IC5OAqB,G,YACF,WAAYjQ,GAAQ,IAAD,8BACf,4CAAMA,KAUV0D,kBAXmB,sBAWC,8BAAApF,EAAA,yDACZI,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,eAChB0B,EAHa,0CAKF,EAAKsB,MAAMxB,QAAQC,EAAIC,GALrB,OAMR,EAAK0B,SAAS,CAAC0D,KAAM,EAAK9D,MAAM8D,OAChC,EAAK1D,SAAS,CAAC8O,QAAS,EAAKlP,MAAM8D,KAAKoL,UAPhC,2EASDvL,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,YATC,yDAYLyH,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,YAZK,QAehB,EAAKkE,SAAS,CAACmK,QAAQ,IAfP,0DAXD,EAgCnBL,YAAc,WACV,IAAIgG,EAAOpT,SAAS6I,uBAAuB,qBAE/BxB,MAAMuB,KAAKwK,GAEjBlO,KAAK,SAAA4D,GACPA,EAAIrC,MAAM0G,QAAQ,WAtCP,EA2CnBkG,YAAc,WACV,IAAID,EAAOpT,SAAS6I,uBAAuB,qBAE/BxB,MAAMuB,KAAKwK,GAEjBlO,KAAK,SAAA4D,GACPA,EAAIrC,MAAM0G,QAAQ,YA/CtB,EAAKnJ,MAAQ,CACTgD,KAAM,CACFwF,IAAK,MACL4F,SAAS,EACT3E,QAAQ,IAND,E,sEAuDf,IAAM6F,EACF,oCAAqC,mBAAlChP,KAAKpB,MAAMqQ,MAAMC,OAAO1E,QAA6B,uBAAG1K,KAAK,2BAA0B,yBAAKpB,UAAU,uBAAsB,uBAAGA,UAAU,uBAAyB,yBAAKA,UAAU,qBAAf,qBAAqE,uBAAGoB,KAAK,2BAA0B,yBAAKpB,UAAU,gBAAe,uBAAGA,UAAU,uBAAyB,yBAAKA,UAAU,qBAAf,sBAG9UyQ,EACF,yBAAKzQ,UAAU,qBACX,yBAAK+J,aAAczI,KAAK+O,YAAarG,aAAc1I,KAAK8I,YAAapK,UAAU,kBACxC,eAAlCsB,KAAKpB,MAAMqQ,MAAMC,OAAO1E,QAAyB,uBAAG1K,KAAK,uBAAsB,yBAAKpB,UAAU,uBAAsB,uBAAGA,UAAU,uBAAlD,IAA4E,yBAAKA,UAAU,qBAAf,iBAAiE,uBAAGoB,KAAK,uBAAsB,yBAAKpB,UAAU,gBAAe,uBAAGA,UAAU,uBAA3C,IAAqE,yBAAKA,UAAU,qBAAf,iBAC7R,aAAlCsB,KAAKpB,MAAMqQ,MAAMC,OAAO1E,QAAuB,uBAAG1K,KAAK,qBAAoB,yBAAKpB,UAAU,uBAAsB,uBAAGA,UAAU,eAAiB,yBAAKA,UAAU,qBAAf,eAA+D,uBAAGoB,KAAK,qBAAoB,yBAAKpB,UAAU,gBAAe,uBAAGA,UAAU,eAAiB,yBAAKA,UAAU,qBAAf,eACrSsB,KAAKN,MAAMoO,QAAUkB,EAAa,MAEvC,yBAAKtQ,UAAU,mBACwB,eAAlCsB,KAAKpB,MAAMqQ,MAAMC,OAAO1E,QAAyB,kBAAC,EAAD,CAAmB9H,KAAM1C,KAAKN,MAAMgD,OAAU,KAC7D,aAAlC1C,KAAKpB,MAAMqQ,MAAMC,OAAO1E,QAAuB,kBAAC,GAAD,CAAiB9H,KAAM1C,KAAKN,MAAMgD,OAAU,KACzD,mBAAlC1C,KAAKpB,MAAMqQ,MAAMC,OAAO1E,QAA6B,kBAAC,GAAD,CAAuB9H,KAAM1C,KAAKN,MAAMgD,OAAU,OAKpH,OACI,oCAAG1C,KAAKN,MAAMyJ,OAASgG,EAAU,U,GA5EvB7O,IAAMC,WAsFbC,gBALS,SAACd,GACrB,MAAO,CAAEgD,KAAMhD,EAAMgD,QAMrB,CAAEtF,WAFSoD,CAGTqO,IC1FN,SAAS/N,GAAT,GAAkD,IAAxBsO,EAAuB,EAAvBA,UACtB,OAD6C,EAAZrO,UAChBH,KAAK,SAAAK,GAClB,IAAIoO,EAAC,WAAOpO,EAASlE,QACrB,MAAmB,WAAhBkE,EAAStD,KAEZ,yBAAKe,UAAU,kBAAkB2B,QAAS+O,EAAUjO,KAAK,KAAMkO,GAAIhS,GAAE,WAAM4D,EAASlE,SAAU,2BAAIkE,EAASlE,OAAb,KAAuBkE,EAASC,OAEhH,QAItB,SAASE,GAAT,GAAgC,IAAbC,EAAY,EAAZA,UACXX,EAAM,GAcV,OAbAW,EAAUT,KAAI,SAAAU,GACVA,EAAOV,KAAK,SAAAW,GACY,KAAjBA,EAAMrD,UACLwC,EAAMC,KAAK,CACP1B,MAAOsC,EAAMtC,MACblC,OAAQwE,EAAMrD,iBAM9BwC,EAAMc,KAAKvE,GAEJyD,EAAME,KAAK,SAAAC,GACd,OACI,4BACI,yBAAKnC,UAAU,mBACX,2BAAO+C,SAAS,OAAO9D,KAAK,OAAOe,UAAU,QAAQO,MAAO4B,EAAQ5B,QAChF,yBAAKP,UAAU,mBAAmBmC,EAAQ9D,aAUlD,SAAS2E,GAAT,GAAgD,IAAxB0N,EAAuB,EAAvBA,UACpB,OAD2C,EAAZrO,UACdH,KAAK,SAAAK,GAClB,IAAIoO,EAAC,WAAOpO,EAASlE,QACrB,MAAmB,SAAhBkE,EAAStD,KAER,yBAAKe,UAAU,kBAAkB2B,QAAS+O,EAAUjO,KAAK,KAAMkO,GAAIhS,GAAE,WAAM4D,EAASlE,SAAU,2BAAIkE,EAASlE,OAAb,KAAuBkE,EAASC,OAEpH,QAGtB,SAASS,GAAT,GAAwE,IAAhD2N,EAA+C,EAA/CA,WAAYF,EAAmC,EAAnCA,UAAWvQ,EAAwB,EAAxBA,aAC3C,OADmE,EAAVkD,QAC1CnB,KAAI,SAAAC,GAEf,MAAmB,UAAhBA,EAAQ5B,MACA,4BACP,yBAAKP,UAAU,kBAAkB6Q,QAASD,EAAWnO,OAAQd,QAAS+O,EAAUjO,KAAK,KAAMN,EAAQwC,eAAgBhG,GAAIwD,EAAQhF,MAC3H,2BAAOoD,MAAO4B,EAAQ5B,MAAOc,SAAUlB,EAAasC,OAAQxD,KAAK,OAAOyC,UAAU,IAAIvE,KAAMgF,EAAQhF,KAAM6C,UAAU,UAChG,KAAnBmC,EAAQI,SAAgB,yBAAK5D,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAAmBmC,EAAQI,UAAkB,KACnF,KAAnBJ,EAAQ3C,SAAgB,yBAAKb,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAAmBmC,EAAQ3C,UAAkB,OAIpG,4BACP,yBAAKQ,UAAU,kBAAkBrB,GAAIwD,EAAQhF,KAAMsG,MAAO,CAACqD,gBAAiB,eAQxF,SAASgK,GAAT,GAAgE,IAAlCF,EAAiC,EAAjCA,WAAYF,EAAqB,EAArBA,UACtC,OAD2D,EAAVrN,QAClCnB,KAAI,SAAAC,GAEf,MAAmB,UAAhBA,EAAQ5B,MACA,4BACP,yBAAKP,UAAU,kBAAkB6Q,QAASD,EAAWnO,OAAQd,QAAS+O,EAAUjO,KAAK,KAAMN,EAAQwC,eAAgBhG,GAAIwD,EAAQhF,MAC3H,2BAAOoD,MAAO4B,EAAQ5B,MAAOtB,KAAK,OAAOyC,UAAU,IAAIvE,KAAMgF,EAAQhF,KAAM4F,SAAS,OAAO/C,UAAU,UACjF,KAAnBmC,EAAQI,SAAgB,yBAAK5D,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAAmBmC,EAAQI,UAAkB,KACnF,KAAnBJ,EAAQ3C,SAAgB,yBAAKb,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAAmBmC,EAAQ3C,UAAkB,OAIpG,4BACP,yBAAKQ,UAAU,kBAAkBrB,GAAIwD,EAAQhF,KAAMsG,MAAO,CAACqD,gBAAiB,e,IAQlFiK,G,YACF,WAAY7Q,GAAQ,IAAD,8BACf,4CAAMA,KAwEVC,aAAe,SAAAC,GACX,IAAIuC,EAAY,EAAK3B,MAAM2B,UAC3BA,EAAUT,KAAK,SAAAC,GACXA,EAAQD,KAAI,SAAAW,GACLA,EAAM1F,OAAOiD,EAAEC,OAAOlD,OACrB0F,EAAMtC,MAAMH,EAAEC,OAAOE,aAIjC,EAAKD,SAAS,CAACqC,UAAWA,KAlFX,EAsFnBqO,eAAiB,SAAA5Q,GACb,OAAOA,EAAEC,OAAOlD,MACZ,IAAK,UACD,EAAKmD,SAAS,CAAC2Q,OAAQ7Q,EAAEC,OAAOE,UAzFzB,EAgGnB2Q,cAAgB,SAAC3O,GACb,IAAIF,EAAYrF,SAAS6I,uBAAuB,mBAClCxB,MAAMuB,KAAKvD,GACjBH,KAAI,SAACC,EAASsD,GACXtD,EAAQxD,KAAK4D,EACZF,EAAUoD,GAAOhC,MAAM0N,MAAM,QAE7B9O,EAAUoD,GAAOhC,MAAM0N,MAAM,YAvG1B,EA8GnBjM,WAAa,SAAC0L,EAAYF,EAAWvL,EAAQa,EAAUrD,GACnD,IAAI4C,EAAQ5C,EACZ,OAAOA,EAAUT,KAAK,SAAkBsD,EAAKC,GACzC,OACA,wBAAIC,IAAKD,GACLO,EACD,kBAAC8K,GAAD,CAAqBF,WAAYA,EAAYF,UAAWA,EAAWrN,QAASkC,EAAME,GAAQC,IAAKD,IAC/F,kBAAC,GAAD,CAAemL,WAAYA,EAAYF,UAAWA,EAAWvQ,aAAcgF,EAAQ9B,QAASkC,EAAME,GAAQC,IAAKD,SArHvG,EA2HnBiL,UAAY,SAAAtQ,GACR,IACImC,EADAP,EAAQ5B,EAETiE,MAAM+M,QAAQpP,GACK,IAAfA,EAAMxE,OACF,EAAKwD,MAAMqQ,kBAAkBrP,EAAM,IACtC,EAAK1B,SAAS,CAAC+Q,gBAAiBrP,EAAM,KACtCO,EAASP,EAAM,KAEX,EAAK1B,SAAS,CAAC+Q,gBAAiBrP,EAAM,KACtCO,EAASP,EAAM,KAGnB,EAAK1B,SAAS,CAAC+Q,gBAAiBrP,EAAM,KAC1CO,EAASP,EAAM,KAIf,EAAK1B,SAAS,CAAC+Q,gBAAiBjR,IAChCmC,EAAWnC,GAEf,EAAK8Q,cAAc3O,GAGnB,IAAII,EAAY,EAAK3B,MAAM2B,UAE3BA,EAAUT,KAAI,SAAAsD,GACVA,EAAItD,KAAI,SAAAW,GACJ,GAAiB,UAAdA,EAAMtC,MAAiB,CAC1B,IAAI+Q,EAAQtU,SAASoJ,eAAevD,EAAM1F,MAAMoU,WAChDD,EAAM7N,MAAMqD,gBAAgB,QAC5BwK,EAAM1K,gBAAgB,mBAI9B,IAAIU,EAAQ,GAEZ3E,EAAUT,KAAI,SAAAsD,GACVA,EAAItD,KAAI,SAAAW,GACa,UAAdA,EAAMtC,SACqC,IAA3CsC,EAAM8B,cAAc/G,QAAQ2E,IACjBvF,SAASoJ,eAAevD,EAAM1F,MACxBoU,WACV9N,MAAMqD,gBAAgB,QAC5BQ,EAAMrF,KAAKY,EAAM1F,OAEPH,SAASoJ,eAAevD,EAAM1F,MACxBoU,WACV1K,aAAa,WAAY,eAK3C,EAAKvG,SAAS,CAACkR,aAAclK,KAhLd,EAoLnBsJ,WApLmB,uCAoLN,WAAMxQ,GAAN,eAAA5B,EAAA,wDACLiH,EAAQ,EAAKzE,MAAMwQ,aAAa5T,QAAQwC,EAAEC,OAAOlD,OAC5C,EAAE,EAAK6D,MAAMwQ,aAAahU,QAAsB,IAAZ4C,EAAEqR,WAC5B,IAAZrR,EAAEqR,SAA2B,KAAZrR,EAAEqR,SAA4B,KAAZrR,EAAEqR,SAA4B,KAAZrR,EAAEqR,SAA4B,KAAZrR,EAAEqR,SAChFzU,SAASoJ,eAAe,EAAKpF,MAAMwQ,aAAa/L,EAAM,IAAI8L,WAAWG,QAElD,IAAZtR,EAAEqR,SACEhM,EAAM,GACTzI,SAASoJ,eAAe,EAAKpF,MAAMwQ,aAAa/L,EAAM,IAAI8L,WAAWG,SARpE,2CApLM,wDAmMnB/Q,YAnMmB,uCAmML,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CAnMK,0DAkNnB6R,WAAa,WACN,EAAK3Q,MAAMgF,UACV,EAAK1F,SAAS,CAAC0F,UAAU,IACzBwC,QAAQC,IAAI,WAEZ,EAAKnI,SAAS,CAAC0F,UAAU,IACzBwC,QAAQC,IAAI,UAxND,EA4NnBmJ,cA5NmB,uCA4NH,WAAMxR,GAAN,eAAA5B,EAAA,6DACZ4B,EAAEU,iBACElC,EAAQ1B,EAAU,cAFV,kBAIF,EAAKgD,MAAM2R,iBAAiB,EAAK7Q,MAAM8Q,YAAa,UAAW,GAAIlT,GAJjE,OAKR,EAAK+B,YAAY,EAAKT,MAAMyC,WALpB,gDAOR,EAAKhC,YAAY,KAAI3B,SAASG,MAAM,GAP5B,yDA5NG,wDAuOnB4S,aAvOmB,uCAuOJ,WAAM3R,GAAN,eAAA5B,EAAA,6DACX4B,EAAEU,iBACElC,EAAQ1B,EAAU,cAFX,kBAID,EAAKgD,MAAM2R,iBAAiB,EAAK7Q,MAAM8Q,YAAa,SAAU,EAAK9Q,MAAMiQ,OAAQrS,GAJhF,OAKP,EAAK+B,YAAY,EAAKT,MAAMyC,WAC5B,EAAKrC,SAAS,CAAC0R,eAAe,IANvB,gDAQP,EAAKrR,YAAY,KAAI3B,SAASG,MAAM,GAR7B,yDAvOI,wDAoPnB8S,cApPmB,uCAoPH,WAAM7R,GAAN,SAAA5B,EAAA,sDACZ4B,EAAEU,iBACF,EAAKR,SAAS,CAAC0R,eAAe,IAFlB,2CApPG,wDAyPnB3D,YAAc,SAAAjO,GACVA,EAAEU,iBACF,EAAKR,SAAS,CAAC0R,eAAe,KAzP9B,EAAKhR,MAAQ,CACTyJ,QAAQ,EACR9H,UAAW,GACXuP,gBAAiB,GACjBlM,UAAU,EACV8L,YAAa,GACb3C,OAAO,EACP8B,OAAQ,GACRe,eAAe,EACfjS,SAAS,GAXE,E,wMAgBXnB,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,eAChB0B,E,0CAEW0C,KAAKpB,MAAMxB,QAAQC,EAAIC,G,gFAEtBiF,OAAOC,SAASC,QAAhB,UAA2B3H,K,YAGvCkF,KAAKpB,MAAM8D,KAAKoL,Q,4CAEb9N,KAAKpB,MAAMP,aAAa2B,KAAKpB,MAAMqQ,MAAMC,OAAO7R,I,SACnD2C,KAAKpB,MAAMyC,UAAU8J,YAAcnL,KAAKpB,MAAMyC,UAAU+J,aACvDpL,KAAKhB,SAAS,CAAC6O,OAAO,IAE1B7N,KAAKhB,SAAS,CAAC4R,gBAAiB5Q,KAAKpB,MAAMyC,UAAU0F,SACjD1F,EAAYrB,KAAKpB,MAAMyC,UAAU0F,OAAOnG,KAAK,SAAAU,GAC7C,OAAOA,EAAOV,KAAI,SAAAW,GACd,MAAiB,UAAdA,EAAMtC,MACE,CACHpD,KAAM0F,EAAM1F,KACZoD,MAAO,GACPf,SAAUqD,EAAMrD,SAChB+C,SAAUM,EAAMN,SAChBoC,cAAe9B,EAAM8B,eAGlB,CACHxH,KAAM0F,EAAM1F,KACZoD,MAAOsC,EAAMtC,MACbgC,SAAUM,EAAMN,SAChB/C,SAAUqD,EAAMrD,gBAKhC8B,KAAKhB,SAAS,CAACqC,UAAWA,IAC1BrB,KAAKhB,SAAS,CAAC+B,UAAWf,KAAKpB,MAAMyC,UAAUN,YAC/Cf,KAAKhB,SAAS,CAACwR,YAAaxQ,KAAKpB,MAAMyC,UAAU/C,K,mDAEzC0B,KAAKhB,SAAS,CAAC6O,OAAO,I,QAE1B7N,KAAKhB,SAAS,CAACmK,QAAQ,I,wBAInB7L,EAIAiF,OAAOC,SAASC,QAAhB,UAA2B3H,IAH/ByH,OAAOC,SAASC,QAAhB,UAA2B3H,EAA3B,W,sJAkMJ,IAAM+S,EACF,+EAGEsB,EACF,yBAAKzQ,UAAU,eACX,4BAAQA,UAAU,cAAc2B,QAASL,KAAKqQ,YAA9C,eACA,yBAAK3R,UAAU,mBACX,2BAAOA,UAAU,SACb,+BACfsB,KAAKN,MAAMgF,SAAW,oCAAG1E,KAAK4D,WAAW5D,KAAKsP,WAAYtP,KAAKoP,UAAWpP,KAAKnB,aAAcmB,KAAKN,MAAMgF,SAAU1E,KAAKN,MAAMkR,kBAAuB,oCAAG5Q,KAAK4D,WAAW5D,KAAKsP,WAAYtP,KAAKoP,UAAWpP,KAAKnB,aAAcmB,KAAKN,MAAMgF,SAAU1E,KAAKN,MAAM2B,eAIpP,yBAAK3C,UAAU,yBACnB,yBAAKA,UAAU,4BACX,yBAAKA,UAAU,sBAAqB,wBAAIA,UAAU,aAAd,UACpC,kBAAC,GAAD,CAAiB0Q,UAAWpP,KAAKoP,UAAWrO,UAAWf,KAAKN,MAAMqB,aAGlE,yBAAKrC,UAAU,sBAAqB,wBAAIA,UAAU,aAAd,QACpC,kBAAC,GAAD,CAAe0Q,UAAWpP,KAAKoP,UAAWrO,UAAWf,KAAKN,MAAMqB,cAIpE,yBAAKrC,UAAU,sBACX,2BAAOA,UAAU,SACb,+BACI,4BAAI,kBAAC,GAAD,CAAU2C,UAAWrB,KAAKN,MAAM2B,gBAIhD,4BAAQhB,QAASL,KAAKsQ,cAAe5R,UAAU,eAA/C,WACA,4BAAQ2B,QAASL,KAAK2Q,cAAejS,UAAU,eAA/C,UACCsB,KAAKN,MAAMkF,QAIViM,EACF,oCAAG7Q,KAAKN,MAAMmO,MAAQA,EAAQsB,GAG5BuB,EACF,yBAAKhS,UAAU,0BACf,yBAAKA,UAAU,uBACX,iDAEJ,yBAAKA,UAAU,wBACX,0BAAMrB,GAAG,gBACL,yBAAKqB,UAAU,kBACX,+CACA,yBAAKA,UAAU,cACX,8BACA7C,KAAK,UACLiV,IAAI,KACJ3Q,KAAK,IACLJ,SAAUC,KAAK0P,eACfzP,YAAY,mEAIpB,4BAAQI,QAASL,KAAKyQ,aAAc/R,UAAU,eAAc,uBAAGA,UAAU,kBACzE,4BAAQ2B,QAASL,KAAK+M,YAAa5K,MAAO,CAACqD,gBAAiB,OAAQ9G,UAAU,eAAc,uBAAGA,UAAU,qBAKrH,OACI,oCAAGsB,KAAKN,MAAMyJ,OAAS0H,EAAU,kBAAC,EAAD,MAChC7Q,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAa,KAChGuB,KAAKN,MAAMgR,cAAgBA,EAAgB,U,GAxU3BpQ,IAAMC,WAkVpBC,gBALS,SAACd,GACrB,MAAO,CAAE2B,UAAW3B,EAAM2B,UAAWqB,KAAMhD,EAAMgD,QAMjD,CAAErE,eAAcjB,UAASmT,iBjBjUG,SAAClT,EAAIc,EAAQK,EAASlB,GAAtB,8CAAgC,WAAMC,GAAN,eAAAL,EAAA,sEACvCM,EAAKO,KAAL,4BAA+BV,GAAM,CAACc,SAAQK,UAASlB,UADhB,OACxDI,EADwD,OAE5DH,EAAS,CAACI,KAAM,oBAAqBC,QAASF,EAASG,OAFK,2CAAhC,wDiB+TjB2C,CAGTiP,IC/WSsB,OA1Ef,YAAuC,IAApBtH,EAAmB,EAAnBA,WAAY/G,EAAO,EAAPA,KAC3B,OAAO+G,EAAW7I,KAAK,SAAAS,GACnB,IACI2P,EACAC,EACAC,EAHAC,GAAQ,EAIZ,GAAGzO,EACH,IAAI,IAAIzG,EAAG,EAAGA,EAAEyG,EAAKwI,MAAMhP,OAAQD,IAC/B,GAAGoF,EAAU6G,KAAKxF,EAAKwI,MAAMjP,GAAGiM,IAAK,CACjC8I,EAAO,EACPC,EAAO,EACPE,GAAQ,EACRzO,EAAKwI,MAAMjP,GAAG8K,OAAOnG,KAAI,SAAAsD,GACrBA,EAAItD,KAAK,SAAAW,GACW,SAAbA,EAAMtC,QACL+R,GAAQ,GAEI,IAAbzP,EAAMtC,OAA0B,SAAbsC,EAAMtC,QACxBgS,GAAQ,SAIpB,IAAI9K,EAAG8K,EAAOD,EAAO,IACrBE,EAAUrO,OAAOuO,KAAKC,MAAMlL,EAAI,OAAS,OAIjD,OAAG9E,EAAU2K,OAET,uBAAGlM,KAAI,sBAAiBuB,EAAU/C,IAAMI,UAAU,iBACtC,iCAAO2C,EAAU/C,IACjB,6BAAM+C,EAAU0F,OAAO7K,OAAvB,MAAkCmF,EAAU0F,OAAO,GAAG7K,OAAtD,aAAwEmF,EAAU2F,QAAQY,OAC1F,yBAAKlJ,UAAU,cAAc4S,eAAa,OAClC,yBAAK5S,UAAU,MAAMyD,MAAO,CAACoP,mBAAoB,QAAS5C,MAAM,OAAQ6C,OAAQ,SAC5E,yBAAK9S,UAAU,WAAWyD,MAAO,CAAC0N,MAAO,UAAzC,UAGZ,wCAAa,uBAAG1N,MAAO,CAAC0N,MAAM,OAAQjB,SAAU,QAASlQ,UAAU,kBACnE,yBAAKA,UAAU,wBAAuB,uBAAGyD,MAAO,CAAC0N,MAAO,QAASnR,UAAU,gBAAkB,6BAAM2C,EAAUsK,UAAhB,OAA+BtK,EAAUsJ,QAAQzO,OAAjD,OAInGiV,EAEF,uBAAGrR,KAAI,sBAAiBuB,EAAU/C,IAAMI,UAAU,iBAC1C,iCAAO2C,EAAU/C,IACjB,6BAAM+C,EAAU0F,OAAO7K,OAAvB,MAAkCmF,EAAU0F,OAAO,GAAG7K,OAAtD,aAAwEmF,EAAU2F,QAAQY,MAA1F,KACA,yBAAKlJ,UAAU,cAAc4S,eAAcJ,GACnC,yBAAKxS,UAAU,MAAMyD,MAAO,CAACoP,mBAAoB,QAAS5C,MAAM,GAAD,OAAIuC,EAAJ,KAAgBM,OAAQ,SACnF,yBAAK9S,UAAU,WAAWyD,MAAO,CAAC0N,MAAO,UAAWqB,EAApD,OAGR,4CACA,yBAAKxS,UAAU,wBAAuB,uBAAGyD,MAAO,CAAC0N,MAAO,QAASnR,UAAU,gBAAkB,6BAAM2C,EAAUsK,UAAhB,OAA+BtK,EAAUsJ,QAAQzO,OAAjD,OAMrG,uBAAG4D,KAAI,sBAAiBuB,EAAU/C,IAAMI,UAAU,iBAC1C,iCAAO2C,EAAU/C,IACjB,6BAAM+C,EAAU0F,OAAO7K,OAAvB,MAAkCmF,EAAU0F,OAAO,GAAG7K,OAAtD,aAAwEmF,EAAU2F,QAAQY,OAC1F,8BACA,8BACA,yBAAKlJ,UAAU,wBAAuB,uBAAGyD,MAAO,CAAC0N,MAAO,QAASnR,UAAU,gBAAkB,6BAAM2C,EAAUsK,UAAhB,OAA+BtK,EAAUsJ,QAAQzO,OAAjD,WC3DnHuV,G,YACF,WAAY7S,GAAQ,IAAD,8BACf,4CAAMA,KAaV0D,kBAdmB,sBAcC,gCAAApF,EAAA,6DACZI,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,cAFH,SAIN,EAAKgD,MAAM8S,iBAAiBpU,GAJtB,WAQbA,EARa,0CAUN,EAAKsB,MAAMxB,QAAQC,EAAIC,GAVjB,OAWZ,EAAK0B,SAAS,CAAC0D,KAAM,EAAK9D,MAAM8D,OAXpB,yDAaZ1H,EAAU,aAAc,GAAI,MAC5BA,EAAU,aAAc,GAAI,MAdhB,2BAkBhB,EAAKgE,SAAS,CAACyK,WAAY,EAAK7K,MAAM6K,aAChCA,EAAa,EAAK/J,MAAM+J,WAE3BnM,GAEQ,EAAKsB,MAAM8D,KAAKsJ,OAAO9P,OAAO,GAC7B,EAAK0C,MAAM8D,KAAKsJ,OAAOpL,KAAI,SAAAoL,GACvB,IAAI2F,GAAW,EACf,IAAI,IAAIC,KAAQnI,EAEhBA,EAAWmI,GAAMhR,KAAK,SAAAS,GAClBsQ,GAAS,EACVtQ,EAAU6G,KAAK8D,EAAO9D,MACrByJ,GAAS,EACTzK,QAAQC,IAAI6E,EAAO9D,IAAM,IAAM7G,EAAU6G,OAG/B,IAAXyJ,GACCzK,QAAQC,IAAI9F,EAAU6G,KACtB7G,EAAU2K,QAAO,IAEK,IAAnB3K,EAAU2K,SACT3K,EAAU2K,QAAS,SAY3C,EAAKhN,SAAS,CAACyK,WAAYA,IAC3B,EAAKzK,SAAS,CAAC6S,SAAUpI,EAAWoI,WACpC,EAAK7S,SAAS,CAAC8S,aAAcrI,EAAWqI,eACxC,EAAK9S,SAAS,CAAC+S,SAAUtI,EAAWsI,WACpC,EAAK/S,SAAS,CAACgT,OAAQvI,EAAWuI,SAxDlB,0DAdD,EA0EnBvI,WAAa,SAACA,GACVvC,QAAQC,IAAIsC,IA3EG,EA+EnBiF,WAAa,WACT,EAAK1P,SAAS,CAACiT,QAAS,KACxB,EAAKjT,SAAS,CAACkT,gBAAgB,KAjFhB,EAoFnBtQ,YApFmB,uCAoFL,WAAM9C,GAAN,SAAA5B,EAAA,sDACVgK,QAAQC,IAAI,SADF,KAEHrI,EAAEC,OAAO1B,GAFN,OAGD,aAHC,OAMD,kBANC,OASD,aATC,QAYD,WAZC,wCAII,EAAK2B,SAAS,CAACiT,QAAS,EAAKvS,MAAMmS,WAJvC,0DAOI,EAAK7S,SAAS,CAACiT,QAAS,EAAKvS,MAAMoS,eAPvC,4DAUI,EAAK9S,SAAS,CAACiT,QAAS,EAAKvS,MAAMqS,WAVvC,6DAaI,EAAK/S,SAAS,CAACiT,QAAS,EAAKvS,MAAMsS,SAbvC,oDAmBP,EAAKtS,MAAMuS,QAAQ/V,OAAO,GACzB,EAAK8C,SAAS,CAACkT,gBAAgB,IApBzB,4CApFK,wDA8GnBjE,iBAAmB,SAACrM,GAA2B,IAAD,uBAAVuQ,EAAU,iCAAVA,EAAU,kBAC1C,IAAI1I,EAAa0I,EACbC,EAAa,CAAC,WAAY,gBAAiB,WAAY,UACvD,OAAO3I,EAAW7I,KAAI,SAASjD,EAAMwG,GACjC,IAAI6H,EAAQ,EACRrO,EAAKiD,KAAK,SAAAS,IAEgB,IAAnBA,EAAU2K,SACTA,GAAQ,MAIhB,IAAIkF,EAAU,EACd,GAAGlF,EAAO,EAAG,CACT,IAAI7F,EAAI6F,EAAOrO,EAAKzB,OAAS,IAC7BgV,EAAUrO,OAAOuO,KAAKC,MAAMlL,EAAG,OAAS,OAIhD,OACQ,yBAAKzH,UAAU,iBAAiBrB,GAAI+U,EAAWjO,GAAQ9D,QAASuB,GAC5D,uBAAGlD,UAAU,gBAAgB0T,EAAWjO,IACxC,uBAAGzF,UAAU,iBAAb,WAAsCsN,EAAtC,IAA+CrO,EAAKzB,QACpD,yBAAKwC,UAAU,cAAc4S,eAAcJ,GACvC,yBAAKxS,UAAU,MAAMyD,MAAO,CAACoP,mBAAoB,QAAS5C,MAAM,GAAD,OAAIuC,EAAJ,KAAgBM,OAAQ,SACnF,yBAAK9S,UAAU,WAAWyD,MAAO,CAAC0N,MAAO,UAAWqB,EAApD,YArI5B,EAAKxR,MAAM,CACP+J,WAAY,GACZoI,SAAU,GACVC,aAAc,GACdC,SAAU,GACVC,OAAQ,GACRE,gBAAgB,EAChBD,QAAS,GACTrN,MAAO,IAVI,E,sEAkJf,IAAMyN,EACF,yBAAK3T,UAAU,wBAAwBsB,KAAKiO,iBAAiBjO,KAAK4B,YAAa5B,KAAKN,MAAMmS,SAAU7R,KAAKN,MAAMoS,aAAc9R,KAAKN,MAAMqS,SAAU/R,KAAKN,MAAMsS,SAG3JvI,EACF,yBAAK/K,UAAU,cACX,yBAAKA,UAAU,cAAc2B,QAASL,KAAK0O,WAAYvM,MAAO,CAACwM,MAAO,UAAtE,QACA,yBAAKjQ,UAAU,kBAAiB,kBAAC,GAAD,CAAU+K,WAAYzJ,KAAKN,MAAMuS,QAASvP,KAAM1C,KAAKN,MAAMgD,SAI7FyM,EACF,oCAAGnP,KAAKN,MAAMwS,eAAiBzI,EAAa4I,GAE1CzN,EACF,oCAAG5E,KAAKN,MAAMkF,OAIlB,OACI,oCAAsB,KAAnB5E,KAAKN,MAAMkF,MAAaA,EAAQuK,O,GAvKtB7O,IAAMC,WAiLhBC,gBALS,SAACd,GACrB,MAAO,CAAE+J,WAAY/J,EAAM+J,WAAY/G,KAAMhD,EAAMgD,QAMnD,CAAEgP,iBnB/F0B,SAACpU,GAAD,8CAAW,WAAMC,GAAN,eAAAL,EAAA,sEAClBM,EAAKC,IAAI,uBAAwB,CAAC1C,QAAS,CAACuC,MAAOA,KADjC,OACnCI,EADmC,OAEvCH,EAAS,CAACI,KAAM,qBAAsBC,QAASF,EAASG,OAFjB,2CAAX,uDmB+FRT,WAFToD,CAGTiR,ICnLSa,OANf,WACI,OACI,uECGFC,G,YACF,WAAY3T,GAAQ,IAAD,8BACf,4CAAMA,KAUVS,YAXmB,uCAWL,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CAXK,0DA0BnBoK,YAAc,SAAA9J,GACV,IAAI0T,EAAc1T,EAAEC,OAAOmG,WAAWuN,KAAKxT,MACvC4B,EAAUnF,SAAS6I,uBAAuB,mBAClCxB,MAAMuB,KAAKzD,EAAQ,GAAG6R,UAC5B9R,KAAI,SAAA+R,GACHH,GAAaG,EAAKzN,WAAWuN,KAAKxT,QACjC0T,EAAKxQ,MAAM0N,MAAM,YAhCV,EAoCnB/G,YAAc,SAAAhK,GACV,IAAI+B,EAAUnF,SAAS6I,uBAAuB,mBAClCxB,MAAMuB,KAAKzD,EAAQ,GAAG6R,UAC5B9R,KAAI,SAAA+R,GACFA,EAAKxQ,MAAM0N,MAAM,YAxCV,EA4CnB+C,aA5CmB,uCA4CJ,WAAM9T,GAAN,eAAA5B,EAAA,yDACPI,EAAQ1B,EAAU,cADX,yCAES,EAAKoD,SAAS,CAAC4F,MAAO,8DAF/B,gCAID,EAAKhG,MAAMiU,gBAAgB,EAAKnT,MAAMwI,IAAKpJ,EAAEC,OAAOmG,WAAWuN,KAAKxT,MAAO3B,GAJ1E,OAKP,EAAK+B,YAAY,EAAKT,MAAMyC,WAC5B/B,YAAW,WACPiD,OAAOC,SAASsQ,WACjB,KARI,kDAUP,EAAKzT,YAAY,KAAI3B,SAASG,MAAM,GAV7B,0DA5CI,wDA2DnBkV,YAAc,WAEV,MADY,CAAC,EAAG,EAAG,EAAG,EAAG,GACZnS,KAAI,SAAAC,GACb,OAAG,EAAKnB,MAAMsT,QAAQnS,EACX,uBAAGsB,MAAO,CAAC0N,MAAO,QAAQnR,UAAU,gBAEpC,uBAAGA,UAAU,oBA/D5B,EAAKgB,MAAO,CACRwI,IAAKtJ,EAAMsJ,IACX7I,aAAa,EACb4T,WAAYrU,EAAMqU,WAClBD,OAAQpU,EAAMoU,OACdxU,QAAS,IAPE,E,sEAwEf,IAAMyU,EACF,oCAAE,wFACE,yBAAKvU,UAAU,mBACX,6CAAmBsB,KAAKN,MAAMsT,OAA9B,MAA8ChT,KAAK+S,gBAGzDG,EACF,oCAAE,sEACE,yBAAKxU,UAAU,mBACf,uBAAG+T,KAAK,IAAIpS,QAASL,KAAK4S,aAAcnK,aAAczI,KAAK4I,YAAaF,aAAc1I,KAAK8I,YAAapK,UAAU,gCAClH,uBAAG+T,KAAK,IAAIpS,QAASL,KAAK4S,aAAcnK,aAAczI,KAAK4I,YAAaF,aAAc1I,KAAK8I,YAAapK,UAAU,gCAClH,uBAAG+T,KAAK,IAAIpS,QAASL,KAAK4S,aAAcnK,aAAczI,KAAK4I,YAAaF,aAAc1I,KAAK8I,YAAapK,UAAU,gCAClH,uBAAG+T,KAAK,IAAIpS,QAASL,KAAK4S,aAAcnK,aAAczI,KAAK4I,YAAaF,aAAc1I,KAAK8I,YAAapK,UAAU,gCAClH,uBAAG+T,KAAK,IAAIpS,QAASL,KAAK4S,aAAcnK,aAAczI,KAAK4I,YAAaF,aAAc1I,KAAK8I,YAAapK,UAAU,kCAI1H,OACI,yBAAKA,UAAU,kBACVsB,KAAKN,MAAMuT,WAAaA,EAAaC,EACrClT,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAa,U,GA7FxF6B,IAAMC,WAwGhBC,gBALS,SAACd,GACrB,MAAO,CAAE2B,UAAW3B,EAAM2B,UAAWqB,KAAMhD,EAAMgD,QAMjD,CAAEmQ,gBrBayB,SAACxV,EAAI2V,EAAQ1V,GAAb,8CAAuB,WAAMC,GAAN,eAAAL,EAAA,sEAC7BM,EAAKO,KAAL,2BAA8BV,GAAM,CAAC2V,UAAS,CAACjY,QAAS,CAAEuC,MAAOA,KADpC,OAC9CI,EAD8C,OAElDH,EAAS,CAACI,KAAM,mBAAoBC,QAASF,EAASG,OAFJ,2CAAvB,wDqBfhB2C,CAGT+R,ICxGN,SAASzR,GAAT,GAAkD,IAAxBsO,EAAuB,EAAvBA,UACtB,OAD6C,EAAZrO,UAChBH,KAAK,SAAAK,GAClB,GAAmB,WAAhBA,EAAStD,KAAiB,CACzB,IAAI0R,EAAC,WAAOpO,EAASlE,QACzB,OACA,yBAAKsD,QAAS+O,EAAUjO,KAAK,KAAMkO,GAAIhS,GAAE,WAAM4D,EAASlE,QAAU2B,UAAU,mBAAkB,2BAAIuC,EAASlE,OAAb,KAAuBkE,EAASC,OAEvH,OAAO,QAItB,SAASE,GAAT,GAAgC,IAAbC,EAAY,EAAZA,UACXX,EAAM,GAcV,OAbAW,EAAUT,KAAI,SAAAU,GACVA,EAAOV,KAAK,SAAAW,GACY,KAAjBA,EAAMrD,UACLwC,EAAMC,KAAK,CACP1B,MAAOsC,EAAMtC,MACblC,OAAQwE,EAAMrD,iBAM9BwC,EAAMc,KAAKvE,GAEJyD,EAAME,KAAK,SAAAC,GACd,OACI,4BACI,yBAAKnC,UAAU,mBACX,2BAAO+C,UAAU,EAAM9D,KAAK,OAAOe,UAAU,QAAQO,MAAO4B,EAAQ5B,QAChF,yBAAKP,UAAU,mBAAmBmC,EAAQ9D,aAUlD,SAAS2E,GAAT,GAAgD,IAAxB0N,EAAuB,EAAvBA,UACpB,OAD2C,EAAZrO,UACdH,KAAK,SAAAK,GAClB,GAAmB,SAAhBA,EAAStD,KAAe,CACvB,IAAI0R,EAAC,WAAOpO,EAASlE,QACzB,OACI,yBAAKsD,QAAS+O,EAAUjO,KAAK,KAAMkO,GAAIhS,GAAE,WAAM4D,EAASlE,QAAU2B,UAAU,mBAAkB,2BAAIuC,EAASlE,OAAb,KAAuBkE,EAASC,OAE3H,OAAO,QAGtB,SAASS,GAAT,GAAkF,IAA1D2N,EAAyD,EAAzDA,WAAYF,EAA6C,EAA7CA,UAAWvQ,EAAkC,EAAlCA,aAAckD,EAAoB,EAApBA,QAAS4P,EAAW,EAAXA,SAClE,OAAO5P,EAAQnB,KAAI,SAAAC,GAEf,MAAmB,UAAhBA,EAAQ5B,MACJ0S,EACQ,4BACX,yBAAKjT,UAAU,kBAAkBrB,GAAIwD,EAAQhF,MACzC,2BAAO4F,SAAS,OAAOxC,MAAO4B,EAAQ5B,MAAOc,SAAUlB,EAAasC,OAAQxD,KAAK,OAAOyC,UAAU,IAAIvE,KAAMgF,EAAQhF,KAAM6C,UAAU,UAChH,KAAnBmC,EAAQI,SAAgB,yBAAK5D,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAAmBmC,EAAQI,UAAkB,KACnF,KAAnBJ,EAAQ3C,SAAgB,yBAAKb,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAAmBmC,EAAQ3C,UAAkB,OAIpG,4BACP,yBAAKQ,UAAU,kBAAmB2B,QAAS+O,EAAUjO,KAAK,KAAMN,EAAQwC,eAAgBhG,GAAIwD,EAAQhF,MAChG,2BAAOoD,MAAO4B,EAAQ5B,MAAOsQ,QAASD,EAAWnO,OAAQpB,SAAUlB,EAAasC,OAAQxD,KAAK,OAAOyC,UAAU,IAAIvE,KAAMgF,EAAQhF,KAAM6C,UAAU,UAC5H,KAAnBmC,EAAQI,SAAgB,yBAAK5D,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAAmBmC,EAAQI,UAAkB,KACnF,KAAnBJ,EAAQ3C,SAAgB,yBAAKb,GAAIwD,EAAQhF,KAAM6C,UAAU,mBAAmBmC,EAAQ3C,UAAkB,OAKpG,4BACP,yBAAKQ,UAAU,kBAAkBrB,GAAIwD,EAAQhF,KAAMsG,MAAO,CAACqD,gBAAiB,e,IAQlF2N,G,YACF,WAAYvU,GAAQ,IAAD,8BACf,4CAAMA,KAkGVgR,cAAgB,SAAC3O,GACb,IAAIF,EAAYrF,SAAS6I,uBAAuB,mBAClCxB,MAAMuB,KAAKvD,GACjBH,KAAI,SAACC,EAASsD,GACXtD,EAAQxD,KAAK4D,EACZF,EAAUoD,GAAOhC,MAAM0N,MAAM,QAE7B9O,EAAUoD,GAAOhC,MAAM0N,MAAM,YA1G1B,EAgHnBT,UAAY,SAAAtQ,GACR,IACImC,EADAP,EAAQ5B,EAETiE,MAAM+M,QAAQpP,GACK,IAAfA,EAAMxE,OACF,EAAKwD,MAAMqQ,kBAAkBrP,EAAM,IACtC,EAAK1B,SAAS,CAAC+Q,gBAAiBrP,EAAM,KACtCO,EAASP,EAAM,KAEX,EAAK1B,SAAS,CAAC+Q,gBAAiBrP,EAAM,KACtCO,EAASP,EAAM,KAGnB,EAAK1B,SAAS,CAAC+Q,gBAAiBrP,EAAM,KAC1CO,EAASP,EAAM,KAIf,EAAK1B,SAAS,CAAC+Q,gBAAiBjR,IAChCmC,EAAWnC,GAEf,EAAK8Q,cAAc3O,GAGnB,IAAII,EAAY,EAAK3B,MAAM2B,UAE3BA,EAAUT,KAAI,SAAAsD,GACVA,EAAItD,KAAI,SAAAW,GACJ,GAAiB,UAAdA,EAAMtC,MAAiB,CAC1B,IAAI+Q,EAAQtU,SAASoJ,eAAevD,EAAM1F,MAAMoU,WAChDD,EAAM7N,MAAMqD,gBAAgB,QAC5BwK,EAAM1K,gBAAgB,mBAI9B,IAAIU,EAAQ,GAEZ3E,EAAUT,KAAI,SAAAsD,GACVA,EAAItD,KAAI,SAAAW,GACa,UAAdA,EAAMtC,SACqC,IAA3CsC,EAAM8B,cAAc/G,QAAQ2E,IACjBvF,SAASoJ,eAAevD,EAAM1F,MACxBoU,WACV9N,MAAMqD,gBAAgB,QAC5BQ,EAAMrF,KAAKY,EAAM1F,OAEPH,SAASoJ,eAAevD,EAAM1F,MACxBoU,WACV1K,aAAa,WAAY,eAK3C,EAAKvG,SAAS,CAACkR,aAAclK,KArKd,EAyKnBpC,WAAa,SAAC0L,EAAYF,EAAWvL,EAAQxC,EAAWsQ,GACpD,IAAI1N,EAAQ5C,EACZ,OAAOA,EAAUT,KAAK,SAAkBsD,EAAKC,GACzC,OACA,wBAAIC,IAAKD,GACN,kBAAC,GAAD,CAAemL,WAAYA,EAAYF,UAAWA,EAAWvQ,aAAcgF,EAAQ9B,QAASkC,EAAME,GAAQwN,SAAUA,EAAUvN,IAAKD,SA9K3H,EAqLnBtF,aAAe,SAAAC,GACX,IAAIuC,EAAY,EAAK3B,MAAM2B,UAC3BA,EAAUT,KAAK,SAAAC,GACXA,EAAQD,KAAI,SAAAW,GACLA,EAAM1F,OAAOiD,EAAEC,OAAOlD,OACrB0F,EAAMtC,MAAMH,EAAEC,OAAOE,MAAMsE,qBAIvC,EAAKvE,SAAS,CAACqC,UAAWA,KA9LX,EAiMnBhC,YAjMmB,uCAiML,WAAOb,EAASC,GAAhB,SAAAvB,EAAA,sDACV,EAAK8B,SAAS,CAACR,QAASA,IACrBC,EACH,EAAKO,SAAS,CAACP,QAASA,IAGxB,EAAKO,SAAS,CAACP,SAAS,IAExB,EAAKO,SAAS,CAACK,aAAa,IAC5BC,YAAY,WACR,EAAKN,SAAS,CAACK,aAAa,IAC5B,EAAKL,SAAS,CAACR,QAAS,OACzB,KAZO,2CAjMK,0DAiNnB4U,WAjNmB,sBAiNN,8BAAAlW,EAAA,6DACLI,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,cACnB,EAAKoD,SAAS,CAAC4F,MAAM,KAHZ,kBAKC,EAAKhG,MAAMyU,cAAc,EAAK3T,MAAM4T,aAAc,EAAK5T,MAAM2B,UAAWhE,EAAIC,GAL7E,OAML,EAAK+B,YAAY,EAAKT,MAAMyC,WANvB,gDAQL,EAAKrC,SAAS,CAAC4F,MAAO,KAAIlH,SAASG,OAR9B,yDAjNM,EA6NnB0V,YA7NmB,sBA6NL,8BAAArW,EAAA,yDACNI,EAAQ1B,EAAU,cAClBiV,GAAU,EACd,EAAKnR,MAAM2B,UAAUT,KAAK,SAAAsD,GACtBA,EAAItD,KAAI,SAAAW,GACa,KAAdA,EAAMtC,QACL4R,GAAU,UAInBA,EAVO,yCAWC,EAAKxR,YAAY,iEAAiE,IAXnF,cAaV,EAAKL,SAAS,CAAC4F,MAAM,KAbX,kBAeA,EAAKhG,MAAM4U,eAAe,EAAK9T,MAAM4T,aAAc,EAAK5T,MAAM2B,UAAW/D,GAfzE,OAgBN,EAAK+B,YAAY,EAAKT,MAAMyC,WAC5B/B,YAAW,WACPiD,OAAOC,SAASsQ,WACjB,KAnBG,kDAqBN,EAAKzT,YAAY,KAAI3B,SAASG,MAAM,GArB9B,0DA7NK,EAuPnByR,WAvPmB,uCAuPN,WAAMxQ,GAAN,iBAAA5B,EAAA,sDACLgT,EAAc,EAAKxQ,MAAMwQ,eACzB/L,EAAQ+L,EAAa5T,QAAQwC,EAAEC,OAAOlD,OACjC,EAAEqU,EAAahU,QAAsB,IAAZ4C,EAAEqR,WACjB,IAAZrR,EAAEqR,SAA2B,KAAZrR,EAAEqR,SAA4B,KAAZrR,EAAEqR,SAA4B,KAAZrR,EAAEqR,SAA4B,KAAZrR,EAAEqR,SACpEzU,SAASoJ,eAAeoL,EAAa/L,EAAM,IAAI8L,WAAWG,QAEnD,IAAZtR,EAAEqR,SACEhM,EAAM,GACDzI,SAASoJ,eAAeoL,EAAa/L,EAAM,IAAI8L,WAAWG,SATjE,2CAvPM,sDAEf,EAAK1Q,MAAQ,CACTyJ,QAAQ,EACR9H,UAAW,GACXqD,UAAU,EACV8L,YAAa,GACb8C,aAAc,GACd3B,UAAU,EACV5M,OAAO,EACPgL,gBAAiB,GACjBG,aAAc,GACd7Q,aAAa,EACbZ,SAAS,EACTnB,MAAO,KACPmW,YAAY,EACZR,YAAY,EACZD,OAAQ,GAjBG,E,+MAsBX1V,EAAQ1B,EAAU,cAClByB,EAAKzB,EAAU,eAChB0B,E,0CAEO0C,KAAKpB,MAAMxB,QAAQC,EAAIC,G,OAC7B0C,KAAKhB,SAAS,CAAC1B,MAAOA,I,yEAEXiF,OAAOC,SAASC,QAAhB,UAA2B3H,K,mCAKhCkF,KAAKpB,MAAMP,aAAa2B,KAAKpB,MAAMqQ,MAAMC,OAAO7R,I,oFAE/C2C,KAAKhB,SAAS,CAAC+F,OAAO,K,WAEjC/E,KAAKhB,SAAS,CAACsU,aAActT,KAAKpB,MAAMyC,UAAU6G,MAClDlI,KAAKhB,SAAS,CAAC+B,UAAWf,KAAKpB,MAAMyC,UAAUN,YAC/Cf,KAAKhB,SAAS,CAACwR,YAAaxQ,KAAKpB,MAAMyC,UAAU/C,KAC7C0B,KAAKpB,MAAMyC,UAAU8J,W,0CACdnL,KAAKhB,SAAS,CAAC+F,OAAO,K,WAE7B/E,KAAKpB,MAAMyC,U,0CACJrB,KAAKhB,SAAS,CAAC+F,OAAO,K,WAE9BzH,GACC0C,KAAKpB,MAAM8D,KAAKsJ,OAAOpL,KAAK,SAAAoL,GACzBA,EAAO9D,KAAK,EAAKtJ,MAAMyC,UAAU6G,MAChC,EAAKlJ,SAAS,CAAC2S,UAAU,IACzB,EAAK3S,SAAS,CAACyU,YAAY,SAKV,IAAtBzT,KAAKN,MAAMiS,S,wBACdtQ,EAAYrB,KAAKpB,MAAMyC,UAAU0F,OAAOnG,KAAK,SAAAU,GACzC,OAAOA,EAAOV,KAAI,SAAAW,GACd,MAAiB,UAAdA,EAAMtC,MACE,CACHpD,KAAM0F,EAAM1F,KACZoD,MAAO,GACPf,SAAUqD,EAAMrD,SAChB+C,SAAUM,EAAMN,SAChBoC,cAAe9B,EAAM8B,eAGlB,CACHxH,KAAM0F,EAAM1F,KACZoD,MAAOsC,EAAMtC,MACbgC,SAAUM,EAAMN,SAChB/C,SAAUqD,EAAMrD,gB,UAK1B8B,KAAKpB,MAAM8U,OAAO1T,KAAKpB,MAAMyC,UAAU6G,K,QAC7ClI,KAAKhB,SAAS,CAACqC,UAAWA,I,wBAE1BrB,KAAKhB,SAAS,CAACqC,UAAWrB,KAAKpB,MAAMyC,UAAU0F,SAC/C/G,KAAKpB,MAAM8D,KAAKiR,SAAS/S,KAAI,SAAAS,GACtBA,EAAU6G,MAAM,EAAKxI,MAAM4T,eAC1B,EAAKtU,SAAS,CAACiU,YAAY,IAC3B,EAAKjU,SAAS,CAACgU,OAAQ3R,EAAU2R,a,QAKtC1V,GACH0C,KAAKpB,MAAM8D,KAAKwI,MAAMtK,KAAK,SAAAuQ,GACpBA,EAAMjJ,KAAK,EAAKxI,MAAM4T,cACrB,EAAKtU,SAAS,CAACqC,UAAW8P,EAAMpK,YAIxC/G,KAAKhB,SAAS,CAACmK,QAAQ,I,sJA2KvB,IAAMgG,EACF,yBAAKzQ,UAAU,eACX,wBAAIA,UAAU,oBAAd,cAA6CsB,KAAKN,MAAM8Q,aACxD,yBAAK9R,UAAU,mBACX,2BAAOA,UAAU,SACb,+BACKsB,KAAK4D,WAAW5D,KAAKsP,WAAYtP,KAAKoP,UAAWpP,KAAKnB,aAAcmB,KAAKN,MAAM2B,UAAWrB,KAAKN,MAAMiS,aAIlH,yBAAKjT,UAAU,yBACnB,yBAAKA,UAAU,uBACX,yBAAKA,UAAU,sBAAqB,wBAAIA,UAAU,aAAd,UACpC,kBAAC,GAAD,CAAiB0Q,UAAWpP,KAAKoP,UAAWrO,UAAWf,KAAKN,MAAMqB,aAElE,yBAAKrC,UAAU,sBAAqB,wBAAIA,UAAU,aAAd,QACpC,kBAAC,GAAD,CAAe0Q,UAAWpP,KAAKoP,UAAWrO,UAAWf,KAAKN,MAAMqB,eAIpE,yBAAKrC,UAAU,sBACX,2BAAOA,UAAU,SACb,+BACI,4BAAI,kBAAC,GAAD,CAAU2C,UAAWrB,KAAKN,MAAM2B,gBAIhD,yBAAK3C,UAAU,oBAEdsB,KAAKN,MAAMpC,QAAQ0C,KAAKN,MAAMiS,SAAW,4BAAQtR,QAASL,KAAKoT,WAAY1U,UAAU,eAA5C,QAA0E,KACnHsB,KAAKN,MAAMiS,SAAW,2EAAuD,4BAAQtR,QAASL,KAAKuT,YAAa7U,UAAU,eAA7C,UAG7EsB,KAAKN,MAAM+T,WAAa,kBAAC,GAAD,CAAYvL,IAAKlI,KAAKN,MAAM4T,aAAcL,WAAYjT,KAAKN,MAAMuT,WAAYD,OAAQhT,KAAKN,MAAMsT,SAAa,KAErIhT,KAAKN,MAAMkF,OAGVgP,EACF,6BAAM5T,KAAKN,MAAMyJ,OAASgG,EAAU,yCAExC,OACI,oCAAGnP,KAAKN,MAAMqF,MAAQ,kBAAC,GAAD,MAAW6O,EAChC5T,KAAKN,MAAML,YAAc,kBAAC,EAAD,CAASb,QAASwB,KAAKN,MAAMlB,QAASC,QAASuB,KAAKN,MAAMjB,UAAa,U,GAvTvF6B,IAAMC,WAmUbC,gBALS,SAACd,GACrB,MAAO,CAAE2B,UAAW3B,EAAM2B,UAAWqB,KAAMhD,EAAMgD,QAMjD,CAAErE,eAAcjB,UAASiW,ctB9RA,SAACnL,EAAK7G,EAAWiC,EAAQhG,GAAzB,8CAAmC,WAAMC,GAAN,eAAAL,EAAA,sEACvCM,EAAKO,KAAL,+BAAkCuF,GAAU,CAAC4E,MAAK7G,aAAY,CAACtG,QAAS,CAACuC,MAAOA,KADzC,OACxDI,EADwD,OAE5DH,EAAS,CAACI,KAAM,iBAAkBC,QAASF,EAASG,OAFQ,2CAAnC,uDsB8Re2V,etBzRd,SAACtL,EAAK7G,EAAW/D,GAAjB,8CAA2B,WAAMC,GAAN,eAAAL,EAAA,sEAChCM,EAAKO,KAAL,0BAA6BmK,GAAO,CAAC7G,aAAY,CAACtG,QAAS,CAACuC,MAAOA,KADnC,OACjDI,EADiD,OAErDH,EAAS,CAACI,KAAM,kBAAmBC,QAASF,EAASG,OAFA,2CAA3B,uDsByR8B6V,OtB3UtC,SAACrW,GAAD,8CAAQ,WAAME,GAAN,eAAAL,EAAA,sEACLM,EAAKY,IAAL,wBAA0Bf,IADrB,OACtBK,EADsB,OAE1BH,EAAS,CAACI,KAAM,UAAWC,QAASF,EAASG,OAFnB,2CAAR,wDsByUP2C,CAGT2S,IC7ZAU,G,YACF,WAAYjV,GAAQ,IAAD,8BACf,4CAAMA,KAQV0D,kBATmB,sBASC,sBAAApF,EAAA,+EAEN,EAAK0B,MAAMkV,gBAAgB,EAAKlV,MAAMqQ,MAAMC,OAAO7R,GAAI,EAAKuB,MAAMqQ,MAAMC,OAAO5R,OAFzE,OAGZ,EAAK0B,SAAS,CAACR,QAAS,EAAKI,MAAM8D,OAHvB,+CAKZ,EAAK1D,SAAS,CAAC4F,MAAO,KAAIlH,SAASG,OALvB,OAOhB,EAAKmB,SAAS,CAACmK,QAAQ,IAPP,yDAPhB,EAAKzJ,MAAQ,CACTkF,MAAO,GACPuE,QAAQ,EACR3K,QAAS,IALE,E,sEAqBf,IAAMoG,EACF,yBAAKlG,UAAU,qBAAqBsB,KAAKN,MAAMkF,OAG7CuK,EACF,yBAAKzQ,UAAU,qBAAqBsB,KAAKN,MAAMlB,QAA/C,iBAAqE,uBAAGsB,KAAI,UAAKhF,EAAL,WAAsB,4BAAQ4D,UAAU,eAAlB,cAGhGD,EACF,yBAAKC,UAAU,QAA2B,KAAnBsB,KAAKN,MAAMkF,MAAauK,EAAUvK,GAE7D,OACI,6BAAM5E,KAAKN,MAAMyJ,OAAS1K,EAAU,U,GAlChB6B,IAAMC,WA4CvBC,gBALS,SAACd,GACrB,MAAO,CAAEgD,KAAMhD,EAAMgD,QAMrB,CAAEoR,gBvBVyB,SAACzW,EAAIC,GAAL,8CAAe,WAAMC,GAAN,eAAAL,EAAA,sEACrBM,EAAKY,IAAL,wBAA0Bf,GAAM,CAACC,UADZ,OACtCI,EADsC,OAE1CH,EAAS,CAACI,KAAM,mBAAoBC,QAASF,EAASG,OAFZ,2CAAf,wDuBQhB2C,CAGTqT,IChDAE,G,YACF,WAAYnV,GAAQ,IAAD,8BACf,4CAAMA,KAMVoV,WAPmB,sBAON,sBAAA9W,EAAA,+EAEC,EAAK0B,MAAMd,iBAAiB,EAAKc,MAAMqQ,MAAMC,OAAO7R,IAFrD,sDAIL,EAAK2B,SAAS,CAAC4F,MAAO,KAAIlH,SAASG,OAJ9B,wDALT,EAAK6B,MAAQ,CACTkF,MAAM,IAHK,E,sEAiBf,OACI,yBAAKlG,UAAU,qBAAf,4LAEwE,4BAAQ2B,QAASL,KAAKgU,WAAYtV,UAAU,eAA5C,QAFxE,yB,GAnBe4B,IAAMC,WAgClBC,gBALS,SAACd,GACrB,MAAO,CAAE2B,UAAW3B,EAAM2B,UAAWqB,KAAMhD,EAAMgD,QAMjD,CAAE5E,oBAFS0C,CAGTuT,IClCAE,G,YAEF,WAAYrV,GAAQ,IAAD,8BACf,4CAAMA,KAOVC,aAAe,SAAAC,GACX,EAAKE,SAAS,CAACR,QAAS,KACL,UAAhBM,EAAEC,OAAOlD,MACR,EAAKmD,SAAS,CAACE,MAAOJ,EAAEC,OAAOE,SAXpB,EAenBiV,aAfmB,uCAeJ,WAAMpV,GAAN,SAAA5B,EAAA,yDACX4B,EAAEU,iBACF,EAAKR,SAAS,CAACR,QAAS,KACF,KAAnB,EAAKkB,MAAMR,MAHH,yCAIA,EAAKF,SAAS,CAACR,QAAS,kCAJxB,gCAOD,EAAKI,MAAMuV,iBAAiB,EAAKzU,MAAMR,OAPtC,OAQP,EAAKF,SAAS,CAACR,QAAS,EAAKI,MAAM8D,OAR5B,2EAUA,EAAK1D,SAAS,CAACR,QAAS,KAAId,SAASG,QAVrC,0DAfI,wDA8BnBuW,aA9BmB,uCA8BJ,WAAMtV,GAAN,SAAA5B,EAAA,yDACX4B,EAAEU,iBACF,EAAKR,SAAS,CAACR,QAAS,KACF,KAAnB,EAAKkB,MAAMR,MAHH,yCAIA,EAAKF,SAAS,CAACR,QAAS,kCAJxB,gCAOD,EAAKI,MAAMd,iBAAiB,EAAK4B,MAAMR,OAPtC,OAQP,EAAKF,SAAS,CAACR,QAAS,EAAKI,MAAM8D,OAR5B,2EAUA,EAAK1D,SAAS,CAACR,QAAS,KAAId,SAASG,QAVrC,0DA9BI,sDAEf,EAAK6B,MAAQ,CACTR,MAAO,GACPV,QAAS,IAJE,E,sEA8Cf,OACI,yBAAKE,UAAU,aACX,yBAAKA,UAAU,qBACX,0BAAMA,UAAU,QACZ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,cACX,uEACA,2BACAf,KAAK,OACL6J,SAAS,OACT3L,KAAK,QACLoE,YAAY,kBACZF,SAAUC,KAAKnB,gBAGnB,yBAAKH,UAAU,QACX,4BAAQ2B,QAASL,KAAKkU,aAAcxV,UAAU,eAA9C,mBACA,4BAAQ2B,QAASL,KAAKoU,aAAc1V,UAAU,eAA9C,wBAIXsB,KAAKN,MAAMlB,c,GArEJ8B,IAAMC,WAkFnBC,gBALS,SAACd,GACrB,MAAO,CAAEgD,KAAMhD,EAAMgD,QAMrB,CAAEyR,iBzBtC0B,SAACjV,GAAD,8CAAW,WAAM3B,GAAN,eAAAL,EAAA,sEAClBM,EAAKO,KAAK,gBAAiB,CAACmB,UADV,OACnCxB,EADmC,OAEvCH,EAAS,CAACI,KAAM,oBAAqBC,QAASF,EAASG,OAFhB,2CAAX,uDyBsCRC,oBAFT0C,CAGTyT,ICtFAI,G,YACF,WAAYzV,GAAQ,IAAD,8BACf,4CAAMA,KAQVC,aAAe,SAAAC,GAEX,OADA,EAAKE,SAAS,CAACR,QAAS,KACjBM,EAAEC,OAAOlD,MACZ,IAAK,WACD,EAAKmD,SAAS,CAACd,SAAUY,EAAEC,OAAOE,QAClC,MACJ,IAAK,kBACD,EAAKD,SAAS,CAAC6I,gBAAiB/I,EAAEC,OAAOE,UAhBlC,EAuBnBqV,cAvBmB,uCAuBH,WAAMxV,GAAN,SAAA5B,EAAA,6DACZ4B,EAAEU,iBADU,kBAGF,EAAKZ,MAAM0V,cAAc,EAAK1V,MAAMqQ,MAAMC,OAAO7R,GAAI,EAAKuB,MAAMqQ,MAAMC,OAAO5R,MAAO,EAAKoC,MAAMxB,SAAU,EAAKwB,MAAMmI,iBAHlH,OAIR,EAAK7I,SAAS,CAACR,QAAS,EAAKI,MAAM8D,OAJ3B,yEAMD,EAAK1D,SAAS,CAACR,QAAS,KAAId,SAASG,QANpC,yDAvBG,sDAEf,EAAK6B,MAAQ,CACTxB,SAAU,GACV2J,gBAAiB,GACjBrJ,QAAS,IALE,E,sEAkCf,OACI,yBAAKE,UAAU,aACX,yBAAKA,UAAU,qBACX,0BAAMA,UAAU,QACZ,yBAAKA,UAAU,kBACX,yBAAKA,UAAU,cACX,+CACA,2BACAf,KAAK,WACL6J,SAAS,OACT3L,KAAK,WACLkE,SAAUC,KAAKnB,gBAGnB,yBAAKH,UAAU,cACX,uDACA,2BACAf,KAAK,WACL6J,SAAS,OACT3L,KAAK,kBACLkE,SAAUC,KAAKnB,gBAGf,4BAAQwB,QAASL,KAAKsU,cAAe5V,UAAU,eAA/C,UAGXsB,KAAKN,MAAMlB,c,GA7DJ8B,IAAMC,WA0EnBC,gBALS,SAACd,GACrB,MAAO,CAAEgD,KAAMhD,EAAMgD,QAMrB,CAAE4R,c1BxBuB,SAACpM,EAAK5K,EAAOY,EAAU2J,GAAvB,8CAA2C,WAAMtK,GAAN,eAAAL,EAAA,sEAC/CM,EAAKY,IAAL,8BAAgC8J,GAAO,CAAChK,WAAU2J,mBAAkB,CAAC9M,QAAS,CAACuC,MAAOA,KADvC,OAChEI,EADgE,OAEpEH,EAAS,CAACI,KAAM,iBAAkBC,QAASF,EAASG,OAFgB,2CAA3C,wD0BsBd2C,CAGT6T,ICvCSE,I,MAzBH,WACR,OACI,oCACA,kBAAC,EAAD,MACJ,kBAAC,IAAD,KACI,kBAAC,IAAD,KACI,kBAAC,IAAD,CAAOC,KAAK,IAAIC,OAAK,EAACC,UAAW/V,IACjC,kBAAC,IAAD,CAAO6V,KAAK,UAAUC,OAAK,EAACC,UAAWzN,IACvC,kBAAC,IAAD,CAAOuN,KAAK,SAASC,OAAK,EAACC,UAAWjN,IACtC,kBAAC,IAAD,CAAO+M,KAAK,WAAWC,OAAK,EAACC,UAAW7F,KACxC,kBAAC,IAAD,CAAO2F,KAAK,oBAAoBC,OAAK,EAACC,UAAW7F,KACjD,kBAAC,IAAD,CAAO2F,KAAK,uBAAuBC,OAAK,EAACC,UAAWjF,KACpD,kBAAC,IAAD,CAAO+E,KAAK,cAAcC,OAAK,EAACC,UAAWjD,KAC3C,kBAAC,IAAD,CAAO+C,KAAK,kBAAkBC,OAAK,EAACC,UAAWvB,KAC/C,kBAAC,IAAD,CAAOqB,KAAK,yBAAyBC,OAAK,EAACC,UAAWb,KACtD,kBAAC,IAAD,CAAOW,KAAK,oBAAoBC,OAAK,EAACC,UAAWX,KACjD,kBAAC,IAAD,CAAOS,KAAK,kBAAkBC,OAAK,EAACC,UAAWT,KAC/C,kBAAC,IAAD,CAAOO,KAAK,6BAA6BC,OAAK,EAACC,UAAWL,U,kBC3BvDM,gBAAgB,CAC3BtT,UCRW,WAEC,IADZ3B,EACW,uDADH,GACRvB,EAAW,uCACP,OAAQA,EAAOR,MACX,IAAK,gBAEL,IAAK,uBAEL,IAAK,gBAEL,IAAK,oBAEL,IAAK,iBAEL,IAAK,kBAEL,IAAK,mBACD,OAAOQ,EAAOP,QAClB,QACI,OAAO8B,IDVnBgD,KETW,WAEC,IADZhD,EACW,uDADH,GACRvB,EAAW,uCACP,OAAQA,EAAOR,MACX,IAAK,aAEL,IAAK,WACD,OAAOQ,EAAOP,QAClB,IAAK,cACD,MAAO,CAACgK,MAAO,GAAI1I,MAAO,IAC9B,IAAK,WACD,OAAOf,EAAOP,QAClB,IAAK,gBACD,OAAO8B,EACX,IAAK,cAEL,IAAK,kBAEL,IAAK,gBAEL,IAAK,iBAEL,IAAK,mBAEL,IAAK,oBAEL,IAAK,oBAEL,IAAK,iBACD,OAAOvB,EAAOP,QAClB,QACI,OAAO8B,IFrBnB+J,WGVW,WAEC,IADZ/J,EACW,uDADH,GACRvB,EAAW,uCACP,OAAQA,EAAOR,MACX,IAAK,YAEL,IAAK,qBAEL,IAAK,uBAEL,IAAK,wBAEL,IAAK,0BACD,OAAOQ,EAAOP,QAClB,QACI,OAAO8B,IHJnBwN,MIXW,WAEC,IADZxN,EACW,uDADH,GACRvB,EAAW,uCACP,OAAQA,EAAOR,MACX,IAAK,aAEL,IAAK,qBACD,OAAOQ,EAAOP,QAClB,QACI,OAAO8B,IJGnBC,KKZW,WAEC,IADZD,EACW,uDADH,GACRvB,EAAW,uCACP,OAAQA,EAAOR,MACX,IAAK,YACD,OAAOQ,EAAOP,QAClB,QACI,OAAO8B,MCEvBkV,IAASC,OACL,kBAAC,IAAD,KACA,kBAAC,IAAD,CAAUC,MAAOC,aAAYC,GAAUC,aAAgBC,QACvD,kBAAC,GAAD,QAGAxZ,SAASyZ,cAAc,Y","file":"static/js/main.6e67ef9b.chunk.js","sourcesContent":["import axios from 'axios';\r\nexport default axios.create({\r\n    baseURL:'https://morning-anchorage-23503.herokuapp.com',\r\n    headers: {\"Access-Control-Allow-Origin\": \"*\"}\r\n\r\n});\r\n\r\nexport const baseURL='https://krulikos-crosswords-app.web.app'\r\n\r\nexport const serverbaseURL='https://morning-anchorage-23503.herokuapp.com'","export function setCookie(cookieName, cookieValue, expireHours) {\r\n    let d = new Date();\r\n    d.setTime(d.getTime() + (expireHours * 60 * 60 * 1000));\r\n    let expires = \"expires=\"+d.toUTCString();\r\n    document.cookie = cookieName + \"=\" + cookieValue + \";\" + expires + \";path=/\";\r\n  }\r\n  \r\n  export function deleteCookie(cookieName) {\r\n      let d = new Date();\r\n        d.setTime(d.getTime() + 1);\r\n      let expires = \"expires=\"+d.toUTCString();\r\n      document.cookie = cookieName + \"=\" + \" \" + \";\" + expires + \";path=/\";\r\n  }\r\n  \r\n  export function getCookie(cookieName) {\r\n      let name = cookieName + \"=\";\r\n      let decodedCookie = decodeURIComponent(document.cookie);\r\n      let ca = decodedCookie.split(';');\r\n      for(let i = 0; i <ca.length; i++) {\r\n        let c = ca[i];\r\n        while (c.charAt(0) == ' ') {\r\n          c = c.substring(1);\r\n        }\r\n        if (c.indexOf(name) == 0) {\r\n          return c.substring(name.length, c.length);\r\n        }\r\n      }\r\n      return \"\";\r\n    }\r\n\r\n    export function getDate(date) {\r\n      return `${date.getFullYear()}-${lz((date.getMonth()+1))}-${lz(date.getDate())} ${lz(date.getHours())}:${lz(date.getMinutes())}:${lz(date.getSeconds())}`\r\n    }\r\n    \r\n    function lz(number) {\r\n          return `${number}`.padStart(2, \"0\");\r\n    }\r\n\r\n    export function compareNumbers(a, b) {\r\n      return a.number - b.number\r\n  }","import apis from '../apis/index';\r\nimport { setCookie } from '../js';\r\nimport { baseURL } from '../apis'\r\n\r\nexport const getUser = (id, token) => async dispatch => {\r\n    let response = await apis.get(`user/singleuser/${id}`, {headers: {token: token}});\r\n    dispatch({type: 'GET_USER', payload: response.data});\r\n}\r\n\r\nexport const getUserById = (id, token) => async dispatch => {\r\n    let response = await apis.get(`user/id/${id}`, {headers: {token: token}});\r\n    dispatch({type: 'GET_USER_BY_ID', payload: response.data});\r\n}\r\n\r\nexport const getAdmins = (token) => async dispatch => {\r\n    let response = await apis.get('user/admins', {headers: {token: token}});\r\n    dispatch({type: 'GET_ADMINS', payload: response.data});\r\n}\r\n\r\nexport const getUsersByQuery = (query, token) => async dispatch => {\r\n    let response = await apis.get(`user/query/${query}`, {headers: {token: token}});\r\n    dispatch({type: 'GET_USERS_BY_QUERY', payload: response.data})\r\n}\r\n\r\nexport const userLogin = (login, password) => async dispatch => {\r\n    let response = await apis.post('user/login', {login, password});\r\n    setCookie('customerID', response.data._id, 240);\r\n    setCookie('jwt_access', response.data.jwt_access, 240);\r\n    dispatch({type: 'USER_LOGIN', payload: response.data});\r\n}\r\n\r\nexport const userSignOut = () => async dispatch => {\r\n    setCookie('customerID', \"\", 0.00001);\r\n    setCookie('jwt_access', \"\", 0.00001);\r\n}\r\n\r\nexport const userUpdate = (login, email, currentPassword, id, token) => async dispatch => {\r\n    let response = await apis.put(`user/update/${id}`, {login, email, currentPassword}, {headers: {token: token}});\r\n    dispatch({type: 'UPDATE_USER', payload: response.data});\r\n}\r\n\r\nexport const activateAccount = (id, token) => async dispatch => {\r\n    let response = await apis.put(`user/activate/${id}`, {token});\r\n    dispatch({type: 'ACTIVATE_ACCOUNT', payload: response.data});\r\n}\r\n\r\nexport const resendActivation = (id) => async dispatch => {\r\n    let response = await apis.post(`user/resend/${id}`);\r\n    dispatch({type: 'RESEND_ACTIVATION', payload: response.data});\r\n}\r\n\r\nexport const passwordReminder = (email) => async dispatch => {\r\n    let response = await apis.post('user/reminder', {email});\r\n    dispatch({type: 'PASSWORD_REMINDER', payload: response.data});\r\n}\r\n\r\nexport const resetPassword = (_id, token, password, confirmPassword) => async dispatch => {\r\n    let response = await apis.put(`user/reset-password/${_id}`, {password, confirmPassword}, {headers: {token: token}});\r\n    dispatch({type: 'RESET_PASSWORD', payload: response.data})\r\n}\r\n\r\nexport const manageAdmin = (userID, password, token, action) => async dispatch => {\r\n    let response = await apis.put('user/appoint', {userID, password, action}, {headers: {token: token}});\r\n    dispatch({type: 'APPOINT_ADMIN', payload: response.data});\r\n}\r\n\r\nexport const passwordUpdate = (newPassword, confirmNewPassword, currentPassword, id, token) => async dispatch => {\r\n    let response = await apis.put(`user/password/update/${id}`, {newPassword, confirmNewPassword, currentPassword}, {headers: {token: token}});\r\n    dispatch({type: 'UPDATE_PASSWORD', payload: response.data});\r\n}\r\n\r\nexport const addUser = (login, password, confirmPassword, email) => async dispatch => {\r\n    let response = await apis.post('user/register', {login, password, confirmPassword, email});\r\n    dispatch({type: 'ADD_USER', payload: response.data});\r\n}\r\n\r\nexport const getCrossword = (ID) => async dispatch => {\r\n    let response = await apis.get(`crossword/${ID}`);\r\n    dispatch({type: 'GET_CROSSWORD', payload: response.data});\r\n}\r\n\r\nexport const getRandomCrossword = () => async dispatch => {\r\n    let response = await apis.get(`crossword/r/random`);\r\n    dispatch({type: 'GET_RANDOM_CROSSWORD', payload: response.data});\r\n}\r\n\r\nexport const addTry = (id) => async dispatch => {\r\n    let response = await apis.put(`crossword/try/${id}`);\r\n    dispatch({type: 'ADD_TRY', payload: response.data});\r\n}\r\n\r\nexport const getAppCrosswords = (token) => async dispatch => {\r\n    let response = await apis.get('crossword/a/approved', {headers: {token: token}});\r\n    dispatch({type: 'GET_APP_CROSSWORDS', payload: response.data});\r\n}\r\n\r\nexport const getAddedCrosswords = (id, page) => async dispatch => {\r\n    let response = await apis.get(`crossword/addedby/${id}/${page}`);\r\n    dispatch({type: 'GET_ADDED_CROSSWORDS', payload: response.data});\r\n}\r\n\r\nexport const getSolvedCrosswords = (id, page) => async dispatch => {\r\n    let response = await apis.get(`crossword/solvedby/${id}/${page}`);\r\n    dispatch({type: 'GET_SOLVED_CROSSWORDS', payload: response.data});\r\n}\r\n\r\nexport const getProgressCrosswords = (id, page) => async dispatch => {\r\n    let response = await apis.get(`crossword/inprogress/${id}/${page}`);\r\n    dispatch({type: 'GET_PROGRESS_CROSSWORDS', payload: response.data});\r\n}\r\n\r\nexport const getUnapprovedCrosswords = (token) => async dispatch => {\r\n    let response = await apis.get('crossword/u/unapproved', {headers: {token: token}});\r\n    dispatch({type: 'GET_UNAPR', payload: response.data});\r\n}\r\n\r\nexport const addCrossword = (values, questions, solution, addedBy, token) => async dispatch => {\r\n    let response = await apis.post(`crossword/add/${addedBy}`, {values, questions, solution, addedBy}, {headers: {token: token}});\r\n    dispatch({type: 'ADD_CROSSWORD', payload: response.data});\r\n}\r\n\r\nexport const approveCrossword = (id, action, message, token) => async dispatch => {\r\n    let response = await apis.post(`crossword/approve/${id}`, {action, message, token});\r\n    dispatch({type: 'APPROVE_CROSSWORD', payload: response.data});\r\n}\r\n\r\nexport const reviewCrossword = (id, rating, token) => async dispatch => {\r\n    let response = await apis.post(`crossword/review/${id}`, {rating}, {headers: { token: token}});\r\n    dispatch({type: 'REVIEW_CROSSWORD', payload: response.data});\r\n}\r\n\r\nexport const saveCrossword = (_id, crossword, userId, token) => async dispatch => {\r\n    let response = await apis.post(`crossword/tries/save/${userId}`, {_id, crossword}, {headers: {token: token}})\r\n    dispatch({type: 'SAVE_CROSSWORD', payload: response.data});\r\n}\r\n\r\nexport const solveCrossword = (_id, crossword, token) => async dispatch => {\r\n    let response = await apis.post(`crossword/solve/${_id}`, {crossword}, {headers: {token: token}});\r\n    dispatch({type: 'SOLVE_CROSSWORD', payload: response.data})\r\n}\r\n\r\nexport const sendMail = (name, email, message) => async dispatch => {\r\n    let response = await apis.post('mail/send', {name, email, message});\r\n    dispatch({type: 'SEND_MAIL', payload: response.data});\r\n}\r\n","import React from 'react';\r\n\r\nfunction Message({message, isError}) {\r\n    if(isError===true) {\r\n        return (\r\n            <div className=\"message-container message-error\">{message}</div>\r\n        )\r\n    } else {\r\n    return (\r\n        <div className=\"message-container\">{message}</div>\r\n    )\r\n    }\r\n}\r\n\r\nexport default Message","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { sendMail } from '../actions';\r\nimport Message from './Message';\r\n\r\n\r\nclass LandingPage extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            name: '',\r\n            email: '',\r\n            message: '',\r\n            emailMessage: '',\r\n            signsLeft: 1000\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        switch(e.target.name) {\r\n            case 'name':\r\n                this.setState({name: e.target.value});\r\n                break;\r\n            case 'email':\r\n                this.setState({email: e.target.value});\r\n                break;\r\n            case 'emailMessage': \r\n                this.setState({emailMessage: e.target.value});\r\n                this.setState({signsLeft: 1000-e.target.value.length})\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n    handleMail = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            await this.props.sendMail(this.state.name, this.state.email, this.state.emailMessage);\r\n            this.showMessage(this.props.mail)\r\n            this.setState({name: ''});\r\n            this.setState({email: ''});\r\n            this.setState({emailMessage: ''});\r\n        } catch(err) {\r\n            this.showMessage(err.response.data, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <div className=\"landing-container\">\r\n                <section id=\"first\">\r\n                    <div>\r\n                        <img className=\"image\" alt=\"crossword\" src=\"./crosswords.png\"></img>\r\n                    </div>\r\n                    <div>\r\n                        <h2>Crosswords App!</h2>\r\n                        <p>The best crosswords in the world! Add your own crossword, solve many crosswords from users all over the world. Four different difficulties.</p>\r\n                        <a href=\"/login\" ><button className=\"form-button\">JOIN US NOW!</button></a>\r\n                    </div>\r\n                </section>\r\n                <section id=\"second\">\r\n                    <div className=\"commentary-container\">\r\n                        <p className=\"commentary\"><i>This is something that I was looking for many years! Many crosswords in one place!</i></p>\r\n                        <p>Bryan, 24, England, London</p>\r\n                    </div>\r\n                    <div className=\"commentary-container\">\r\n                        <p className=\"commentary\"><i>It is incredible that I can create my own crossword and anybody in the world can solve them!</i></p>\r\n                        <p>Lalima, 31, India, Delhi</p>\r\n                    </div>\r\n                    <div className=\"commentary-container\">\r\n                        <p className=\"commentary\"><i>Brilliant site! When I discovered Crossword App, my life turns 180 degrees!</i></p>\r\n                        <p>Robert, 21, Poland, Wroclaw</p>\r\n                    </div>\r\n                </section>\r\n                <section id=\"three\">\r\n                    <h2>Three simple steps to add crossword!</h2>\r\n                    <div className=\"steps\">\r\n                    <div className=\"step-container\">\r\n                            <div className=\"step-number\">1</div>\r\n                            <p>Create an account in Crossword App <a href=\"/login\">HERE</a>.</p>\r\n                        </div>\r\n                        <div className=\"step-container\">\r\n                            <div className=\"step-number\">2</div>\r\n                            <p>Sign in and create a crossword!</p>\r\n                        </div>\r\n                        <div className=\"step-container\">\r\n                            <div className=\"step-number\">3</div>\r\n                            <p>Wait until your crossword will be approved by Administrator.</p>\r\n                        </div>\r\n                    </div>\r\n                </section>\r\n                <section id=\"four\">\r\n                    <div className=\"address\">\r\n                    <i className=\"fas fa-id-card\"></i>\r\n                        <p>Crossword App</p>\r\n                        <p>00-000 City</p>\r\n                        <p>Example Street 2</p>\r\n                        <p>Telephone: 000-000-000</p>\r\n                    </div>\r\n                    <div className=\"contact-form\">\r\n                        <form className=\"form\">\r\n                            <div className=\"form-container\">\r\n                            <h2>Contact us</h2>\r\n                                <div className=\"form-field\">\r\n                                    <input\r\n                                    type=\"text\"\r\n                                    name=\"name\"\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Type your name...\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <input\r\n                                    type=\"email\"\r\n                                    name=\"email\"\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Type your email...\"\r\n                                    />\r\n                                </div>\r\n                                <div className=\"form-field\">\r\n                                    <textarea\r\n                                    name=\"emailMessage\"\r\n                                    cols=\"40\"\r\n                                    rows=\"10\"\r\n                                    onChange={this.handleChange}\r\n                                    placeholder=\"Type your message/question...\"\r\n                                    maxLength=\"1000\"\r\n                                    />\r\n                                    <>{this.state.signsLeft===1000 ? null : <label className=\"mini-label\">{this.state.signsLeft}</label>}</>\r\n                                </div>\r\n                            </div>\r\n                            <button onClick={this.handleMail}className=\"form-button\">SEND</button>\r\n                        </form>\r\n                    </div>\r\n                </section>                \r\n                {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError}/> : null}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { mail: state.mail };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { sendMail }\r\n    )(LandingPage);","import React from 'react';\r\n\r\nexport default function RenderNumbers() {\r\n    let i =1\r\n    let array = []\r\n    while(i<101) {\r\n        array.push(i)\r\n        i++\r\n    }\r\n    return array.map(element => {\r\n        return <option value={element}>{element}</option>\r\n    })\r\n}","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { addCrossword, getUser } from '../actions';\r\nimport { getCookie, compareNumbers } from '../js';\r\nimport { baseURL } from '../apis'\r\nimport RenderNumbers from './RenderNumbers'\r\nimport Message from './Message';\r\n\r\nfunction QuestionsAcross({questions, handleDelete}) {\r\n    return questions.map( question => {\r\n        if(question.type===\"across\") {\r\n        return (\r\n        <div className=\"single-question\"><p>{question.number}. {question.text}</p><button onClick={handleDelete.bind(null, question)}className=\"question-button\">X</button></div>\r\n        )\r\n        } else return null\r\n    })\r\n}\r\n\r\nfunction Solution({crossword}) {\r\n    let array=[]\r\n    crossword.map(column => {\r\n        column.map( field => {\r\n            if(field.password!==\"\") {\r\n                array.push({\r\n                    value: field.value,\r\n                    number: field.password\r\n                })\r\n            }\r\n        })\r\n    })\r\n\r\n    array.sort(compareNumbers);\r\n\r\n    return array.map( element => {\r\n        return (\r\n            <td>\r\n                <div className=\"field-container\">\r\n                    <input readOnly=\"true\" type=\"text\" className=\"field\" value={element.value}></input>\r\n        <div className=\"question-number\">{element.number}</div>\r\n                </div>\r\n            </td>\r\n        )\r\n    })\r\n\r\n    \r\n\r\n}\r\n\r\nfunction QuestionsDown({questions, handleDelete}) {\r\n    return questions.map( question => {\r\n        if(question.type===\"down\") {\r\n        return (\r\n            <div className=\"single-question\"><p>{question.number}. {question.text}</p><button onClick={handleDelete.bind(null, question)}className=\"question-button\">X</button></div>\r\n        )\r\n        } else return null\r\n    })\r\n}\r\n\r\nfunction RenderColumns({handleChange, handleClick, setQuestion, setPassword, columns, questionState, passwordState, questionForm}) {\r\n    return columns.map(element => {\r\n    \r\n        if(element.value!==\"blank\"){\r\n            return <td>\r\n            <div className=\"field-container\" onClick={handleClick.bind(null, element.name)} id={element.name}>\r\n                <input onChange={handleChange.bind()} type=\"text\" maxLength=\"1\" value={element.value} name={element.name} className=\"field\"></input>\r\n                {questionState ?\r\n                    <select onChange={setQuestion.bind()} id={element.name} className=\"question-select\">\r\n                        <option value=\"\"></option>\r\n                    <RenderNumbers/>\r\n                </select> :\r\n                    null\r\n                }\r\n                    \r\n                {passwordState ? \r\n                <select onChange={setPassword.bind()} id={element.name} className=\"password-select\">\r\n                <option value=\"\"></option>\r\n                    <RenderNumbers/>\r\n                </select> :\r\n                null\r\n            }\r\n                {questionForm ? \r\n                <input\r\n                id={element.name}\r\n                className=\"question-range\"\r\n                type=\"checkbox\"\r\n                /> :\r\n                null\r\n                }\r\n                <div id={element.name} className=\"question-number\" style={{visibility: \"none\"}}></div>\r\n                <div id={element.name} className=\"password-number\" style={{visibility: \"none\"}}></div>\r\n                </div>\r\n                </td>\r\n        } else {\r\n            return <td>\r\n            <div className=\"field-container\" onClick={handleClick.bind(null, element.name)}id={element.name}>\r\n            <input onChange={handleChange.bind()} type=\"text\" maxLength=\"1\" value=\"\" name={element.name} className=\"field disabled\"></input>\r\n                </div>\r\n                </td>\r\n        }\r\n    })\r\n        \r\n}\r\n\r\nclass Creator extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            crossWord:[],\r\n            across: props.across,\r\n            down: props.down,\r\n            question: false, \r\n            password: false,\r\n            blank: false,\r\n            error: \"\",\r\n            questionForm: false,\r\n            questionType: '',\r\n            questionNumber: '',\r\n            questionText: '',\r\n            questions: [],\r\n            addQuestion: true,\r\n            solution: [],\r\n            userId: '',\r\n            showHelp: false,\r\n            message: '',\r\n            showMessage: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let token = getCookie(\"jwt_access\");\r\n        let id = getCookie('customerID')\r\n\r\n        if(token) {\r\n        try {\r\n            await this.props.getUser(id, token);\r\n        } catch(err) {\r\n            return window.location.replace(`${baseURL}/login`)\r\n        }\r\n        } else {\r\n            return window.location.replace(`${baseURL}/login`)\r\n\r\n        }\r\n        if(this.props.user) {\r\n        let crossWord = []\r\n        for(let i =0; i<this.state.down; i++) {\r\n            let number = Number(this.state.across);\r\n                crossWord[i] = new Array(number)\r\n                for(let y=0; y<crossWord[i].length;y++) {\r\n                    let letter=i+65;\r\n                    let number = y+1;\r\n                    crossWord[i][y] = {\r\n                        name: String.fromCharCode(letter)+number.toString(),\r\n                        value: \"\",\r\n                        password: \"\",\r\n                        question: \"\",\r\n                    questionRange: []}\r\n                }\r\n        }\r\n        this.setState({userId: id});\r\n        this.setState({crossWord: crossWord})\r\n    } else {\r\n        window.location.replace(`${baseURL}/login`)\r\n    }\r\n    }\r\n\r\n    handleChange = async e => {\r\n        let crossword = this.state.crossWord;\r\n        crossword.map( element => {\r\n            element.map(field => {\r\n                if(field.name===e.target.name) {\r\n                    field.value=e.target.value.toUpperCase();\r\n                }\r\n            })\r\n        });\r\n        await this.setState({crossWord: crossword})\r\n\r\n    }\r\n\r\n    handleQuestionChange = e => {\r\n        switch(e.target.name) {\r\n            case 'question-number':\r\n                this.setState({questionNumber: e.target.value})\r\n                break;\r\n            case 'question-text':\r\n                this.setState({questionText: e.target.value});\r\n                break;\r\n            case 'question-type':\r\n                this.setState({questionType: e.target.value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n\r\n\r\n    renderRows = (change, click, question, password, stateQuestion, statePassword, questionForm) => {\r\n        let cross = this.state.crossWord;\r\n        return this.state.crossWord.map( function callback(row, index){\r\n            return(\r\n            <tr key={index}>\r\n               <RenderColumns handleChange={change} handleClick={click} setQuestion={question} setPassword={password} columns={cross[index]} questionState={stateQuestion} passwordState={statePassword} questionForm={questionForm} key={index}/>\r\n            </tr>\r\n            )\r\n        })\r\n            \r\n    }\r\n\r\n    compareNumbers(a,b) {\r\n        return a.number-b.number\r\n    }\r\n\r\n    setQuestion = e => {\r\n\r\n        this.state.crossWord.map( element => {\r\n            element.map( field => {\r\n                if(field.name===e.currentTarget.id) {\r\n                    field.question=e.currentTarget.value\r\n                }\r\n            })\r\n        })\r\n        let divs = Array.from(document.getElementsByClassName(\"question-number\"));\r\n        divs.map( div => {\r\n            if(div.id===e.currentTarget.id) {\r\n                div.innerHTML=e.currentTarget.value\r\n            }\r\n        })\r\n        \r\n    }\r\n\r\n    setPassword = e => {\r\n        let solution = this.state.solution;\r\n        this.state.crossWord.map( element => {\r\n            element.map( field => {\r\n                if(field.name===e.currentTarget.id) {\r\n                    field.password=e.currentTarget.value\r\n                }\r\n                if(field.password!==\"\") {\r\n                    solution.push({\r\n                        number: field.password,\r\n                        value: field.value\r\n                    })\r\n                }\r\n            })\r\n        })\r\n        solution.sort(this.compareNumbers);\r\n\r\n        this.setState({solution: solution})\r\n\r\n        let divs = Array.from(document.getElementsByClassName(\"password-number\"));\r\n        divs.map( div => {\r\n            if(div.id===e.currentTarget.id) {\r\n                div.innerHTML=e.currentTarget.value\r\n            }\r\n        })\r\n    }\r\n\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n    save = async () => {\r\n        let error = false;\r\n        this.state.crossWord.map( column => {\r\n            column.map( field => {\r\n                if (field.value===\"\") {\r\n                    error = true;\r\n                    return this.showMessage('All fields must be filled!', true)\r\n                }\r\n            })\r\n        })\r\n        if(!error) {\r\n        let array = [];\r\n        this.state.crossWord.map(column => {\r\n            column.map( field => {\r\n                if(field.password!==\"\") {\r\n                    array.push({\r\n                        value: field.value,\r\n                        number: field.password\r\n                    })\r\n                }\r\n            })\r\n        });\r\n\r\n        array.sort(this.compareNumbers);\r\n\r\n\r\n        try {\r\n            let token = getCookie('jwt_access');\r\n            await this.props.addCrossword(this.state.crossWord, this.state.questions, array, this.state.userId, token )\r\n            return this.showMessage(this.props.crossword)\r\n        } catch (err) {\r\n            return this.showMessage(err.response.data, true)\r\n        }\r\n    }\r\n    }\r\n\r\n    handleClick = e => {\r\n        let field = document.getElementById(e)\r\n\r\n\r\n        if(this.state.blank) {\r\n            for ( let item of field.childNodes) {\r\n                let value = item.attributes.class.value.split(' ')\r\n                if(item.tagName===\"INPUT\" && !value.includes(\"disabled\")) {\r\n\r\n                    item.setAttribute(\"class\", \"field disabled\")\r\n                    item.style.backgroundColor=\"black\"\r\n                    item.value=\"\"\r\n                    for(let i=0; i<this.state.crossWord.length;i++){\r\n                        this.state.crossWord[i].map( element => {\r\n                            if(e===element.name) {\r\n                                element.value=\"blank\";\r\n                                element.question=\"\";\r\n                                element.password=\"\";\r\n                                element.questionRange=[]\r\n                            }\r\n                        })\r\n                    }\r\n                } else if(item.tagName===\"INPUT\" && value.includes(\"disabled\")) {\r\n                    item.removeAttribute('disabled')\r\n                    item.setAttribute(\"class\", \"field\")\r\n                    item.style.backgroundColor=\"white\";\r\n                    for(let i=0; i<this.state.crossWord.length;i++){\r\n                        this.state.crossWord[i].map( element => {\r\n                            if(e===element.name) {\r\n                                element.value=\"\"\r\n                            }\r\n                        })\r\n                    }\r\n                }\r\n            }\r\n        }         \r\n    }\r\n\r\n    handleEdit = e => {\r\n        this.setState({questionForm: false})\r\n        if(this.state.blank || this.state.question || this.state.password) {\r\n            this.setState({blank: false})\r\n            this.setState({question: false})\r\n            this.setState({password: false})\r\n            let question= Array.from(document.getElementsByClassName(\"question-select\"));\r\n                question.map( select => {\r\n                    select.style.visibility=\"hidden\";         \r\n                })\r\n                let password= Array.from(document.getElementsByClassName(\"password-select\"));\r\n                password.map( select => {\r\n                    select.style.visibility=\"hidden\";         \r\n                })\r\n            let buttons = Array.from(document.getElementsByClassName(\"edit-button\"));\r\n            buttons.map( button => {\r\n                button.setAttribute(\"class\", \"edit-button\")\r\n                // button.style.backgroundColor=\"white\";\r\n                // button.style.color=\"#1665CD\";\r\n            })\r\n            return\r\n        } else {\r\n\r\n        this.setState({blank: false})\r\n        this.setState({question: false})\r\n        this.setState({password: false})\r\n\r\n        switch(e.target.name) {\r\n            case 'blank':\r\n                this.setState({blank: true});\r\n                let blank = document.getElementById(\"blank-button\");\r\n                blank.setAttribute(\"class\", \"edit-button button-active\");\r\n                break;\r\n            case 'question':\r\n                this.setState({question: true});\r\n                \r\n                let questionButton = document.getElementById(\"question-button\");\r\n                questionButton.setAttribute(\"class\", \"edit-button button-active\");\r\n                break;\r\n            case 'password':\r\n                this.setState({password: true});\r\n                \r\n                let passwordButton = document.getElementById(\"password-button\");\r\n                passwordButton.setAttribute(\"class\", \"edit-button button-active\");\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleQuestion = () => {\r\n        this.setState({questionForm: true})\r\n        this.setState({blank: false})\r\n        this.setState({question: false})\r\n        this.setState({password: false})\r\n        let buttons = Array.from(document.getElementsByClassName(\"edit-button\"));\r\n            buttons.map( button => {\r\n                button.setAttribute(\"class\", \"edit-button\")\r\n            })\r\n    }\r\n\r\n\r\n    addQuestion = async () => {\r\n        this.setState({error:\"\"})\r\n        this.setState({addQuestion: true})\r\n        if(this.state.questionType===\"\") {\r\n            return this.setState({error: \"Select type of question!\"})\r\n        }\r\n        if(this.state.questionText===\"\") {\r\n            return this.setState({error: \"You must write question!\"})\r\n        }\r\n        if(isNaN(this.state.questionNumber) || this.state.questionNumber===\"\") {\r\n            return this.setState({error: \"Question number is not a number.\"})\r\n        }\r\n        await this.state.questions.map( question => {\r\n            if (this.state.questionNumber===question.number && this.state.questionType===question.type) {\r\n                this.setState({error: \"Question with this number already exists!\"})\r\n                this.setState({addQuestion: false})\r\n            }\r\n        })\r\n        if(this.state.addQuestion) {\r\n        let questions = this.state.questions;\r\n\r\n        const question = {\r\n            number: this.state.questionNumber,\r\n            text: this.state.questionText,\r\n            type: this.state.questionType\r\n        };\r\n        let checkboxes = document.getElementsByClassName(\"question-range\");\r\n        let array = Array.from(checkboxes);\r\n        let range = [];\r\n        array.map( checkbox => {\r\n            if(checkbox.checked) {\r\n                range.push(checkbox.id)\r\n            }\r\n        })\r\n        if(range.length===0) {\r\n            return this.setState({error: \"You have to set up question range!\"})\r\n        }\r\n        let crossword = this.state.crossWord;\r\n        range.map(x => {\r\n            crossword.map( row => {\r\n                row.map(field => {\r\n                    if(field.name===x) {\r\n                        if(this.state.questionType===\"across\") {\r\n                            field.questionRange.push(`A${this.state.questionNumber}`)\r\n\r\n                        } else if(this.state.questionType===\"down\") {\r\n                            field.questionRange.push(`D${this.state.questionNumber}`)\r\n                        }\r\n                    } \r\n                })\r\n            })\r\n        })\r\n        questions.push(question)\r\n        questions.sort(this.compareNumbers);\r\n        this.setState({questions: questions});\r\n        this.setState({crossWord: crossword})\r\n        this.setState({questionForm: false})\r\n        \r\n        // array.map(element => {\r\n        //     element.checked=false\r\n        //     element.style.visibility=\"hidden\"\r\n        // })\r\n        \r\n    } else return\r\n\r\n    }\r\n\r\n    renderQuestions = () => {\r\n        this.state.questions.map( question => {\r\n            return <p>{question.number}. {question.text}</p>\r\n        })\r\n    }\r\n\r\n    handleDeleteQuestion = e => {\r\n        let questions = this.state.questions;\r\n        this.state.questions.map( (question, element) => {\r\n            if(question.type===e.type && question.number===e.number) {\r\n                questions.splice(element,1)\r\n            }\r\n        })\r\n\r\n        let range;\r\n        if(e.type==='across') {\r\n            range = 'A'+e.number\r\n        } else {\r\n            range='D'+e.number\r\n        }\r\n\r\n\r\n        let crossword = this.state.crossWord;\r\n\r\n        crossword.map(row => {\r\n            row.map(field => {\r\n                if(field.questionRange.includes(range)) {\r\n                    let index = field.questionRange.indexOf(range);\r\n                    field.questionRange.splice(index,1);\r\n                }\r\n            })\r\n        })\r\n        this.setState({crossWord: crossword})\r\n\r\n\r\n        this.setState({questions:questions})\r\n    }\r\n\r\n    closeHelp = () => {\r\n        this.setState({showHelp: false});\r\n        const mask = document.getElementById(\"mask\");\r\n        mask.remove()\r\n\r\n    }\r\n\r\n    showHelp = () => {\r\n        const root = document.getElementById(\"root\");\r\n        const mask = document.createElement(\"div\");\r\n        mask.setAttribute(\"id\", \"mask\");\r\n        root.after(mask);\r\n        this.setState({showHelp: true})\r\n    }\r\n\r\n    render() {\r\n\r\n        const showHelp = (\r\n            <div className=\"help-container\">\r\n                <button onClick={this.closeHelp}style={{alignSelf: \"flex-end\"}} className=\"form-button\">Close</button>\r\n            <div>\r\n                If you want to add blank value (black field) just click on <button className=\"edit-button\">BLANK</button> and select whick fields have to be blank\r\n            </div>\r\n            <div>\r\n                If you want to add question mark to crossword just click on <button className=\"edit-button\">QUESTION</button> and select question number from drop-down list in proper field\r\n            </div>\r\n            <div>\r\n                If you want to add solution mark to crossword just click on <button className=\"edit-button\">SOLUTION</button> button and select solution number from drop-down list in proper field\r\n            </div>\r\n            <div>\r\n                If you want to add a question just click <button className=\"form-button\">Add question</button> button and type question and number and select type of it in form. In addition you have to select range of question, you will do this by selecting checkboxes in proper fields which belongs to question.\r\n            </div>\r\n        </div>\r\n            )\r\n\r\n        return  (\r\n\r\n        <div className=\"content flex column\">\r\n        <div className=\"table-container\">\r\n        <button className=\"form-button\" onClick={this.showHelp}>HELP</button>\r\n            <div className=\"edit-panel-container\">\r\n                <button className=\"edit-button\" id=\"blank-button\" name=\"blank\" onClick={this.handleEdit}>BLANK</button>\r\n                <button className=\"edit-button\" id=\"password-button\" name=\"password\" onClick={this.handleEdit}>SOLUTION</button>\r\n                <button className=\"edit-button\" id=\"question-button\" name=\"question\" onClick={this.handleEdit}>QUESTION</button>\r\n            </div>\r\n            <table className=\"table\">\r\n                <tbody>\r\n                {this.renderRows(this.handleChange, this.handleClick, this.setQuestion, this.setPassword, this.state.question, this.state.password, this.state.questionForm)}\r\n                </tbody>\r\n            </table>\r\n        </div>\r\n        <div className=\"under-table-container\">\r\n        <div className=\"questions-editor-container\">\r\n                <button onClick={this.handleQuestion}className=\"form-button\">Add question</button>\r\n                {this.state.questionForm ? <div className=\"form-container\">\r\n                <label>Question number</label>\r\n                <input type=\"number\"\r\n                name=\"question-number\"\r\n                onChange={this.handleQuestionChange}\r\n                />\r\n                <label>Question</label>\r\n                <input type=\"text\"\r\n                name=\"question-text\"\r\n                onChange={this.handleQuestionChange}\r\n                />\r\n                <label>Type</label>\r\n                <select name=\"question-type\" onChange={this.handleQuestionChange}>\r\n                    <option value=\"\"></option>\r\n                    <option value=\"across\">ACROSS</option>\r\n                    <option value=\"down\">DOWN</option>\r\n                </select>\r\n                <button onClick={this.addQuestion} className=\"form-button\">ADD</button>\r\n                </div> : null}\r\n            </div>\r\n            <div className=\"questions-container\">\r\n                <div className=\"margin flex column\"><h4 className=\"questions\">ACROSS</h4>\r\n                <QuestionsAcross questions={this.state.questions} handleDelete={this.handleDeleteQuestion}/>\r\n                </div>\r\n                <div className=\"margin flex column\"><h4 className=\"questions\">DOWN</h4>\r\n                <QuestionsDown questions={this.state.questions} handleDelete={this.handleDeleteQuestion}/>\r\n                </div>\r\n            </div>\r\n            <div className=\"solution-container\">\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr><Solution crossword={this.state.crossWord}/></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <button className=\"form-button\" onClick={this.save}>SEND CROSSWORD!</button>\r\n            {this.state.error}\r\n        </div>\r\n        {this.state.showHelp ? showHelp : null}\r\n        {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError}/> : null}\r\n        </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { crossword: state.crossword, user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { addCrossword, getUser }\r\n    )(Creator);","import React from 'react';\r\nimport Creator from './Creator'\r\nimport { getCookie } from '../js';\r\nimport { baseURL } from '../apis';\r\n\r\n\r\nclass CrosswordCreator extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            across: 4,\r\n            down: 4, \r\n            create: false,\r\n            error: '',\r\n            header: 'Select the size of your crossword! Minimum is 4x4 and Maximum is 20x20'\r\n        }\r\n    }\r\n\r\n    handleChange = e =>{\r\n        this.setState({error: ''})\r\n        switch(e.target.name) {\r\n            case 'across':\r\n                this.setState({across: e.target.value})\r\n                break;\r\n            case 'down':\r\n                this.setState({down: e.target.value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleClick = e => {\r\n        console.log(this.state.across)\r\n        if(this.state.across > 3 && this.state.across < 21 && this.state.down > 3 && this.state.down < 21) {\r\n        this.setState({create: true})\r\n        this.setState({header: 'Create your crossword!'})\r\n        } else {\r\n            this.setState({error: 'Size of rows and columns should be between 4 and 20!'})\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const inputs = (\r\n            <div className=\"content-container\">\r\n                <div className=\"form-container\">\r\n                <label>Down</label><input \r\n            name=\"down\"\r\n            type=\"number\"\r\n            min=\"4\"\r\n            max=\"20\"\r\n            onChange={this.handleChange}\r\n            value={this.state.down}\r\n            required\r\n            />\r\n            <label>Across</label>\r\n            <input \r\n            name=\"across\"\r\n            type=\"number\"\r\n            min=\"4\"\r\n            max=\"20\"\r\n            onChange={this.handleChange}\r\n            value={this.state.across}\r\n            />\r\n            <button className=\"form-button\"\r\n            name=\"create\"\r\n            onClick={this.handleClick}>CREATE</button>\r\n            {this.state.error}</div>\r\n            </div>\r\n        )\r\n        return(\r\n            <div className=\"container flex column\">\r\n                <h2>{this.state.header}</h2>\r\n            {this.state.create ? <Creator across={this.state.across} down={this.state.down}/> : inputs}\r\n            </div>\r\n        )\r\n    }\r\n\r\n}\r\n\r\nexport default CrosswordCreator","import React from 'react'\r\nimport { connect } from 'react-redux';\r\nimport { userLogin, addUser } from '../actions';\r\nimport { baseURL } from '../apis/index';\r\n\r\nclass LoginPage extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            login: '',\r\n            password: '',\r\n            confirmPassword: '',\r\n            email: '',\r\n            switcher: 1,\r\n            error:''\r\n\r\n        }\r\n    }\r\n\r\n    handleSwitcher = e => {\r\n        this.setState({error: ''})\r\n        switch(e.target.name) {\r\n            case 'signin':\r\n                this.setState({switcher:1});\r\n                break;\r\n            case 'signup':\r\n                this.setState({switcher:2});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({error: ''})\r\n        switch(e.target.name) {\r\n            case 'login':\r\n                this.setState({login: e.target.value});\r\n                break;\r\n            case 'password':\r\n                this.setState({password: e.target.value});\r\n                break;\r\n            case 'confirmPassword': \r\n                this.setState({confirmPassword: e.target.value});\r\n                break;\r\n            case 'email':\r\n                this.setState({email: e.target.value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleSignIn = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            await this.props.userLogin(this.state.login, this.state.password);\r\n                window.location.replace(`${baseURL}`)  \r\n        } catch (err) {\r\n            this.setState({error: err.response.data});\r\n        }\r\n    }\r\n\r\n    handleSignUp = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            await this.props.addUser(this.state.login, this.state.password, this.state.confirmPassword, this.state.email);\r\n            window.location.replace(`${baseURL}/activate-now/${this.props.user._id}`)\r\n        } catch (err) {\r\n            this.setState({error: err.response.data});\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        const login = (\r\n            <form className=\"form\" id=\"login-form\">\r\n                    <div className=\"form-container\">\r\n                        <div className=\"form-field\">\r\n                        <label>Login</label>\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"login\"\r\n                        value={this.state.login}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                        <label>Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        onChange={this.handleChange}\r\n                        value={this.state.password}\r\n                        required\r\n                        />\r\n                        </div>\r\n                        <button onClick={this.handleSignIn} className=\"form-button\">SIGN IN</button>\r\n                        <a className=\"hover\" href={`${baseURL}/login-problems`}>Have problems with sign in?</a>\r\n                    </div>\r\n                </form>\r\n        )\r\n\r\n        const register = (\r\n            <form className=\"form\" id=\"login-form\">\r\n                    <div className=\"form-container\">\r\n                        <div className=\"form-field\">\r\n                        <label>Login</label>\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"login\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        value={this.state.login}\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                        <label>Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        name=\"password\"\r\n                        value={this.state.password}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                        <label>Confirm Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        name=\"confirmPassword\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        />\r\n                        <div className=\"form-field\">\r\n                        <label>Email</label>\r\n                        <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        />\r\n                        </div>\r\n                        </div>\r\n                        <button onClick={this.handleSignUp}className=\"form-button\">SIGN UP</button>\r\n                    </div>\r\n                </form>\r\n        )\r\n        return(\r\n            <div className=\"container\">\r\n            <div className=\"content-container\">\r\n                <div className=\"login-switcher\">\r\n                    {this.state.switcher===1 ? <button className=\"button-active\" name=\"signin\" onClick={this.handleSwitcher}>SIGN IN</button> : <button name=\"signin\" onClick={this.handleSwitcher}>SIGN IN</button>}\r\n                    {this.state.switcher===2 ? <button className=\"button-active\" name=\"signup\" onClick={this.handleSwitcher}>CREATE ACCOUNT</button> : <button name=\"signup\" onClick={this.handleSwitcher}>CREATE ACCOUNT</button>}\r\n                </div>\r\n                {this.state.switcher===1 ? login : register}\r\n                {this.state.error}\r\n            </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { userLogin, addUser }\r\n    )(LoginPage);\r\n","import React from 'react';\r\nimport { getCookie, setCookie } from '../js/index';\r\nimport { connect } from 'react-redux';\r\nimport { getUser, userSignOut, getRandomCrossword } from '../actions';\r\nimport { baseURL } from '../apis';\r\nimport Message from './Message'\r\n\r\nconst Profile = ({user, enter, leave, signOut}) => {\r\n    if(!user.login) {\r\n    return(\r\n        <a name=\"signin\" href=\"/login\"><div onMouseEnter={enter.bind()} onMouseLeave={leave.bind()} name=\"signin\" className=\"header-element\"><i name=\"signin\" className=\"fas fa-user\"></i><div name=\"signin\" id=\"text-signin\">Sign in</div></div></a>\r\n    )\r\n    } else {\r\n        \r\n        return(\r\n            <><a name=\"create\" href=\"/create\"><div onMouseEnter={enter.bind()} onMouseLeave={leave.bind()} name=\"create\" className=\"header-element\"><i name=\"create\" className=\"fas fa-pencil-alt\"></i><div name=\"create\" id=\"text-create\">Create</div></div></a>\r\n            <a name=\"account\" href=\"/account\"><div onMouseEnter={enter.bind()} onMouseLeave={leave.bind()} name=\"account\" className=\"header-element\"><i name=\"account\" className=\"fas fa-user-cog\"></i><div id=\"text-account\" name=\"account\">Account</div></div></a>\r\n            <div name=\"signout\" onMouseEnter={enter.bind()} onMouseLeave={leave.bind()} onClick={signOut.bind(null)}className=\"header-element\"><i name=\"signout\" className=\"fas fa-power-off\"></i><div name=\"signout\" id=\"text-signout\">Sign Out</div></div></>\r\n        )\r\n        \r\n    }\r\n}\r\nclass Header extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: {},\r\n            loaded: false,\r\n            message: '',\r\n            showMessage: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        const token = getCookie(\"jwt_access\");\r\n        const id = getCookie('customerID')\r\n        if(token) {\r\n        try {\r\n            await this.props.getUser(id, token)\r\n            this.setState({user: this.props.user});\r\n        } catch(err) {\r\n            setCookie('customerID', \"\", 0.00001);\r\n            setCookie('jwt_access', \"\", 0.00001);\r\n            return window.location.replace(`${baseURL}`)\r\n        }\r\n    }\r\n        this.setState({loaded: true})\r\n\r\n        \r\n    }\r\n\r\n    handleEnter = e => {\r\n        let name = e.target.attributes.name.value\r\n        let div = document.getElementById(`text-${name}`)\r\n        div.style.display=\"block\"\r\n    }\r\n\r\n    handleLeave = e => {\r\n        let name = e.target.attributes.name.value\r\n        let div = document.getElementById(`text-${name}`)\r\n        div.style.display=\"none\"\r\n\r\n    }\r\n\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n    getRandom = async () => {\r\n        try {\r\n        await this.props.getRandomCrossword();\r\n        window.location.replace(`${baseURL}/crosswords/${this.props.crossword.ID}`)\r\n        } catch(err) {\r\n            this.showMessage(err.response.data, true)\r\n        }\r\n    }\r\n\r\n    handleSignOut = async () => {\r\n        await this.props.userSignOut();\r\n        window.location.replace(`${baseURL}`);\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <>{this.state.loaded ? <div className=\"header-container\">\r\n                <a name=\"home\" href=\"/\"><div name=\"home\" onMouseLeave={this.handleLeave} onMouseEnter={this.handleEnter}className=\"header-element\"><i name=\"home\" className=\"fas fa-home\"></i><div name=\"home\" id=\"text-home\">Home</div></div></a>\r\n                <a name=\"random\" onClick={this.getRandom}><div name=\"random\" onMouseLeave={this.handleLeave} onMouseEnter={this.handleEnter}className=\"header-element\"><i name=\"random\" className=\"fas fa-dice\"></i><div name=\"random\" id=\"text-random\">Random</div></div></a>\r\n                <a name=\"crosswords\" href=\"/crosswords\"><div name=\"crosswords\" onMouseLeave={this.handleLeave} onMouseEnter={this.handleEnter} className=\"header-element\"><i name=\"crosswords\" className=\"fas fa-chess-board\"></i><div name=\"crosswords\" id=\"text-crosswords\">Crosswords</div></div></a>\r\n                <Profile user={this.state.user} enter={this.handleEnter} leave={this.handleLeave} signOut={this.handleSignOut}/>\r\n            </div> : null}\r\n            {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError}/> : null}</>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user, crossword: state.crossword };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUser, userSignOut, getRandomCrossword }\r\n    )(Header);","import React from 'react';\r\n\r\nfunction Loader() {\r\n    return (\r\n    <div className=\"loader-container\">\r\n            <div className=\"ui active centered inline loader\">\r\n            </div>\r\n            <p>Loading</p>\r\n            </div>\r\n    )\r\n\r\n}\r\n\r\nexport default Loader","import React from 'react';\r\nimport { getAddedCrosswords, getSolvedCrosswords, getProgressCrosswords, getUser, getCrossword } from '../actions';\r\nimport { getCookie } from '../js';\r\nimport { connect } from 'react-redux';\r\nimport Loader from './Loader'\r\nimport { getDate } from '../js'\r\nimport { baseURL } from '../apis'\r\n\r\n\r\nclass AccountCrosswords extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            section: 'added',\r\n            user: {},\r\n            addedSite: 1,\r\n            solvedSite: 1,\r\n            progressSite: 1,\r\n            addedCrosswords: [],\r\n            solvedCrosswords: [],\r\n            progressCrosswords: [],\r\n            addCrL: 0,\r\n            slvCrL: 0,\r\n            prCrL: 0,\r\n            lastSiteAdded: false,\r\n            lastSiteSolved: false,\r\n            lastSiteProgress: false,\r\n            loaded: false,\r\n            crosswordDetails: {},\r\n            dtlSlv: 0,\r\n            dtlRts: 0,\r\n            dtlAdb: '',\r\n            prevSection: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let token = getCookie(\"jwt_access\")\r\n        let id = getCookie('customerID')\r\n        if(token) {\r\n            try {\r\n                await this.props.getUser(id, token)\r\n            } catch(err) {\r\n                return window.location.replace(`${baseURL}/login`)\r\n            }\r\n        } \r\n        \r\n        this.setState({user: this.props.user})\r\n\r\n        await this.props.getAddedCrosswords(this.state.user._id, this.state.addedSite)\r\n        await this.setState({addedCrosswords: this.props.crosswords.crosswords})\r\n        await this.setState({addCrL: this.props.crosswords.length})\r\n\r\n        await this.props.getSolvedCrosswords(this.state.user._id, this.state.solvedSite)\r\n        await this.setState({solvedCrosswords: this.props.crosswords.crosswords})\r\n        await this.setState({slvCrL: this.props.crosswords.length})\r\n\r\n        await this.props.getProgressCrosswords(this.state.user._id, this.state.progressSite)\r\n        await this.setState({progressCrosswords: this.props.crosswords.crosswords})\r\n        await this.setState({prCrL: this.props.crosswords.length})\r\n\r\n        if(this.state.addedSite * 10 >= this.state.addCrL) {\r\n            this.setState({lastSiteAdded: true})\r\n        }\r\n        if(this.state.solvedSite * 10 >= this.state.slvCrL) {\r\n            this.setState({lastSiteSolved: true})\r\n        }\r\n        if(this.state.progressSite * 10 >= this.state.prCrL) {\r\n            this.setState({lastSiteProgress: true})\r\n        }\r\n\r\n        this.setState({loaded: true})\r\n\r\n        \r\n    }\r\n\r\n\r\n    handleSection = async e => {\r\n        this.setState({prevSection: this.state.section})\r\n        this.setState({section: e.target.attributes.section.value})\r\n        if(e.target.attributes.section.value===\"details\") {\r\n            this.setState({loaded: false});\r\n            await this.props.getCrossword(Number(e.target.attributes.crossword.value));\r\n            this.setState({crosswordDetails: this.props.crossword})\r\n            this.setState({dtlRts: this.props.crossword.ratings.length})\r\n            this.setState({dtlSlv: this.props.crossword.solvedBy.length})\r\n            this.setState({dtlAdb: this.props.crossword.addedBy.login})\r\n            this.setState({loaded: true})\r\n        }\r\n    }\r\n\r\n    handleSite = async e => {\r\n        this.setState({loaded: false})\r\n        let currentSite;\r\n        switch(this.state.section) {\r\n\r\n            case 'added':\r\n                currentSite = this.state.addedSite\r\n                switch(e.target.attributes.action.value) {\r\n                    case 'prev':\r\n                        await this.setState({addedSite: currentSite-1})\r\n                        break;\r\n                    case 'next':\r\n                        await this.setState({addedSite: currentSite+1})\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                await this.props.getAddedCrosswords(this.state.user._id, this.state.addedSite)\r\n                this.setState({addedCrosswords: this.props.crosswords.crosswords})\r\n                this.setState({addCrL: this.props.crosswords.length})\r\n                if(this.state.addedSite * 2 >= this.state.addCrL) {\r\n                    this.setState({lastSiteAdded: true})\r\n                } else {\r\n                    this.setState({lastSiteAdded: false})\r\n                }\r\n                this.setState({loaded: true})\r\n                break;\r\n\r\n                case 'solved':\r\n                currentSite = this.state.solvedSite\r\n                switch(e.target.name) {\r\n                    case 'prev':\r\n                        await this.setState({solvedSite: currentSite-1})\r\n                        break;\r\n                    case 'next':\r\n                        await this.setState({solvedSite: currentSite+1})\r\n                        break;\r\n                    default:\r\n                        break;\r\n                }\r\n                await this.props.getSolvedCrosswords(this.state.user._id, this.state.solvedSite)\r\n                this.setState({solvedCrosswords: this.props.crosswords.crosswords})\r\n                this.setState({slvCrL: this.props.crosswords.length})\r\n                if(this.state.solvedSite * 10 >= this.state.slvCrL) {\r\n                    this.setState({lastSiteSolved: true})\r\n                } else {\r\n                    this.setState({lastSiteSolved: false})\r\n                }\r\n                this.setState({loaded: true})\r\n                break;\r\n\r\n                case 'continue':\r\n                    currentSite = this.state.progressSite\r\n                    switch(e.target.name) {\r\n                        case 'prev':\r\n                            await this.setState({progressSite: currentSite-1})\r\n                            break;\r\n                        case 'next':\r\n                            await this.setState({progressSite: currentSite+1})\r\n                            break;\r\n                        default:\r\n                            break;\r\n                    }\r\n                    await this.props.getProgressCrosswords(this.state.user._id, this.state.progressSite)\r\n                    this.setState({progressCrosswords: this.props.crosswords.crosswords})\r\n                    this.setState({prCrL: this.props.crosswords.length})\r\n                    if(this.state.progressSite * 10 >= this.state.prCrL) {\r\n                        this.setState({lastSiteProgress: true})\r\n                    } else {\r\n                        this.setState({lastSiteProgress: false})\r\n                    }\r\n                    this.setState({loaded: true})\r\n                    break;\r\n        }\r\n        \r\n    }\r\n\r\n    renderAdded = (handleSection) => {\r\n\r\n        return this.state.addedCrosswords.map(crossword => {\r\n            return <div className=\"crossword-bar\">\r\n                    <div>#{crossword.ID}</div> \r\n                    <div>{crossword.values.length} x {crossword.values[0].length}</div>\r\n                    <div>TRIED: {crossword.tries}</div>\r\n                    <div>SOLVED: {crossword.solvedBy.length}</div>\r\n                        {crossword.isApproved ? <div className=\"green\">APPROVED</div> : null}\r\n                        {!crossword.isRejected && !crossword.isApproved ? <div className=\"orange\">UNAPPROVED</div> : null}\r\n                        {crossword.isRejected ? <div className=\"red\">REJECTED</div> : null}\r\n                        <button className=\"form-button\" section=\"details\" crossword={crossword.ID} onClick={handleSection}><i section=\"details\" crossword={crossword.ID} onClick={handleSection} className=\"fas fa-info\"></i></button>\r\n        </div>\r\n        })\r\n    }\r\n\r\n    renderSolved = (handleSection) => {\r\n        return this.state.solvedCrosswords.map(crossword => {\r\n            let date = getDate(new Date(crossword.dateSolved))\r\n            return <div className=\"crossword-bar\">\r\n                    <div>#{crossword.ID}</div> \r\n                    <div>{crossword.across} x {crossword.down}</div>\r\n                    <div> added by {crossword.addedBy.login}</div> \r\n                    <div>Date solved: {date}</div>\r\n                    <button className=\"form-button\" section=\"details\" crossword={crossword.ID} onClick={handleSection}><i section=\"details\" crossword={crossword.ID} onClick={handleSection} className=\"fas fa-info\"></i></button>\r\n        </div>\r\n        })\r\n    }\r\n\r\n    renderProgress = (handleSection) => {\r\n        return this.state.progressCrosswords.map(crossword => {\r\n            return <a className=\"crossword-bar\">\r\n                    <div>#{crossword.ID}</div> \r\n                    <div>{crossword.values.length} x {crossword.values[0].length}</div>\r\n                    <div><button className=\"form-button\" section=\"details\" crossword={crossword.ID} onClick={handleSection}><i section=\"details\" crossword={crossword.ID} onClick={handleSection} className=\"fas fa-info\"></i></button>\r\n                    <a href={`/crosswords/${crossword.ID}`} ><button className=\"form-button\"><i className=\"fas fa-play\"></i></button></a>\r\n                    </div>\r\n        </a>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        let string;\r\n        if(this.state.crosswordDetails) {\r\n            let date = new Date(this.state.crosswordDetails.dateCreated);\r\n            string = getDate(date);\r\n        }\r\n        const details = (\r\n            <div className=\"details-container\">\r\n                <button className=\"form-button\" section={this.state.prevSection} onClick={this.handleSection}><i section={this.state.prevSection} className=\"fas fa-chevron-left\"></i></button>\r\n                <div>ID: {this.state.crosswordDetails.ID}</div>\r\n                <div>Date Added: {string}</div>\r\n                <div>Tried: {this.state.crosswordDetails.tries}</div>\r\n                <div>Rating: {this.state.crosswordDetails.ovrRating} ({this.state.dtlRts})</div>\r\n                <div>Solved: {this.state.dtlSlv}</div>\r\n                <div>Added by: {this.state.dtlAdb}</div>\r\n                <div>Difficult: {this.state.crosswordDetails.difficult}</div>\r\n                {this.state.crosswordDetails.isRejected ? <div><b>Reject message: {this.state.crosswordDetails.rejectMsg}</b></div> : null }\r\n            <a href={`/crosswords/${this.state.crosswordDetails.ID}`}><button className=\"form-button\"><i className=\"fas fa-eye\"></i></button></a>\r\n            </div>\r\n        )\r\n        const added = (\r\n            <div className=\"type-container\">{this.renderAdded(this.handleSection)}\r\n            <div className=\"button-container\">\r\n                    {this.state.addedSite>1 ? <button action=\"prev\" onClick={this.handleSite}className=\"form-button\"><i action=\"prev\" className=\"fas fa-chevron-left\"></i></button> : null }\r\n                    {this.state.lastSiteAdded ? null : <button action=\"next\" onClick={this.handleSite} className=\"form-button\"><i action=\"next\" className=\"fas fa-chevron-right\"></i></button>}\r\n                </div></div>\r\n        )\r\n\r\n        const progress = (\r\n            <div className=\"type-container\">{this.renderProgress(this.handleSection)}\r\n            <div className=\"button-container\">\r\n                    {this.state.progressSite>1 ? <button action=\"prev\" onClick={this.handleSite}className=\"form-button\"><i action=\"prev\" className=\"fas fa-chevron-left\"></i></button> : null }\r\n                    {this.state.lastSiteProgress ? null : <button action=\"next\" onClick={this.handleSite}className=\"form-button\"><i action=\"next\"className=\"fas fa-chevron-right\"></i></button>}\r\n                </div></div>\r\n        )\r\n\r\n\r\n        const solved = (\r\n            <div className=\"type-container\">{this.renderSolved(this.handleSection)}\r\n            <div className=\"button-container\">\r\n                    {this.state.solvedSite>1 ? <button action=\"prev\" onClick={this.handleSite}className=\"form-button\"><i action=\"prev\" className=\"fas fa-chevron-left\"></i></button> : null }\r\n                    {this.state.lastSiteSolved ? null : <button action=\"next\" onClick={this.handleSite}className=\"form-button\"><i action=\"next\" className=\"fas fa-chevron-right\"></i></button>}\r\n                </div></div>\r\n        )\r\n\r\n        const loaded = (\r\n            <>{this.state.section===\"added\" ? <>{added}</> : null}\r\n                {this.state.section===\"solved\" ? <div>{solved}</div> : null}\r\n                {this.state.section===\"continue\" ? <div>{progress}</div> : null}\r\n                {this.state.section===\"details\" ? <div>{details}</div> : null}</>\r\n        )\r\n        \r\n        return(\r\n            <>\r\n            <div className=\"section-menu-container\">\r\n                {this.state.section===\"added\" ? \r\n                <button onClick={this.handleSection} section=\"added\"className=\"section-menu-element-active\">Added</button> :\r\n                <button onClick={this.handleSection} section=\"added\"className=\"section-menu-element\">Added</button>}\r\n                {this.state.section===\"solved\" ?\r\n                <button onClick={this.handleSection} section=\"solved\" className=\"section-menu-element-active\">Solved</button> :\r\n                <button onClick={this.handleSection} section=\"solved\" className=\"section-menu-element\">Solved</button>}\r\n                {this.state.section===\"continue\" ?\r\n                <button onClick={this.handleSection} section=\"continue\" className=\"section-menu-element-active\">In Progress</button> :\r\n                <button onClick={this.handleSection} section=\"continue\" className=\"section-menu-element\">In Progress</button>}\r\n            </div>\r\n            <div className=\"section-content\">\r\n                {this.state.loaded ? loaded : <Loader/>}\r\n\r\n                \r\n\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { crosswords: state.crosswords, user: state.user, crossword: state.crossword };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getAddedCrosswords, getSolvedCrosswords, getProgressCrosswords, getUser, getCrossword }\r\n    )(AccountCrosswords);","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUser, userUpdate } from '../actions';\r\nimport { getCookie } from '../js'\r\nimport { baseURL } from '../apis';\r\nimport Message from './Message'\r\n\r\n\r\n\r\nclass Details extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user:{},\r\n            login: '',\r\n            email: '',\r\n            currentPassword: '',\r\n            error: '',\r\n            added: '',\r\n            solved: '',\r\n            approved: '',\r\n            rejected:'',\r\n            message: '',\r\n            showMessage: false,\r\n            isError: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let token = getCookie(\"jwt_access\");\r\n        let id = getCookie('customerID');\r\n        if(token) {\r\n            try {\r\n            await this.props.getUser(id, token);\r\n            } catch(err) {\r\n                return window.location.replace(`${baseURL}`)\r\n            }\r\n            this.setState({login: this.props.user.login});\r\n            this.setState({email: this.props.user.email});\r\n            this.setState({added: this.props.user.added.length});\r\n            this.setState({solved: this.props.user.solved.length})\r\n            let approved =0;\r\n            let rejected =0;\r\n            this.props.user.added.map( crossword => {\r\n                if(crossword.isApproved) {\r\n                    approved +=1;\r\n                }\r\n                else if(crossword.isRejected) {\r\n                    rejected+=1\r\n                }\r\n            })\r\n            this.setState({approved: approved});\r\n            this.setState({rejected: rejected})\r\n        }\r\n        else {\r\n            window.location.replace(`${baseURL}/login`)\r\n        }\r\n    }\r\n\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n    handleChange = async(e) => {\r\n        this.setState({error: ''})\r\n        switch(e.target.name) {\r\n            case 'login':\r\n            this.setState({login: e.target.value});\r\n            break;\r\n            case 'email':\r\n            this.setState({email: e.target.value});\r\n            break;\r\n            case 'currentPassword':\r\n            this.setState({currentPassword: e.target.value});\r\n            break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    handleUpdate = async e => {\r\n        e.preventDefault();\r\n        this.setState({error: ''})\r\n        let token = getCookie(\"jwt_access\");\r\n        let id = getCookie('customerID')\r\n\r\n        if(this.state.currentPassword===\"\") {\r\n            return this.showMessage(\"You must type your current password to approve changes!\", true)\r\n        }\r\n        try {\r\n        await this.props.userUpdate(this.state.login, this.state.email, this.state.currentPassword, id, token)\r\n        this.showMessage(this.props.user)\r\n        } catch (err) {\r\n            return this.showMessage(err.response.data, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"details-section\">\r\n                <form className=\"form\" id=\"update-form\">\r\n                    <div className=\"form-container\">\r\n                        <div className=\"form-field\">\r\n                        <label>Login</label>\r\n                        <input\r\n                        type=\"text\"\r\n                        name=\"login\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        value={this.state.login}\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                        <label>Email</label>\r\n                        <input\r\n                        type=\"email\"\r\n                        name=\"email\"\r\n                        value={this.state.email}\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                        <label>Current password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        name=\"currentPassword\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        />\r\n                        </div>\r\n                        <button onClick={this.handleUpdate}className=\"form-button\">UPDATE</button>\r\n                    </div>\r\n                </form>\r\n                {this.state.error}\r\n\r\n                <div>\r\n                    Added crosswords: {this.state.added}\r\n                </div>\r\n                <div>\r\n                    Approved crosswords: {this.state.approved}/{this.state.added}\r\n                </div>\r\n                <div>\r\n                    Rejected crosswords: {this.state.rejected}/{this.state.added}\r\n                </div>\r\n                <div>\r\n                    Solved crosswords: {this.state.solved}\r\n                </div>\r\n                {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError}/> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUser, userUpdate }\r\n    )(Details);","import React from 'react';\r\n\r\nimport { connect } from 'react-redux';\r\nimport { getUser, passwordUpdate } from '../actions';\r\nimport { getCookie } from '../js'\r\nimport { baseURL } from '../apis';\r\nimport Message from './Message'\r\n\r\n\r\n\r\nclass ChangePassword extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user:{},\r\n            newPassword: '',\r\n            confirmNewPassword: '',\r\n            currentPassword: '',\r\n            error: '',\r\n            message: '',\r\n            showMessage: false\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let token = getCookie(\"jwt_access\");\r\n        let id = getCookie('customerID')\r\n        if(token) {\r\n            await this.props.getUser(id, token);\r\n        }\r\n        else {\r\n            window.location.replace(`${baseURL}/login`)\r\n        }\r\n    }\r\n\r\n    handleChange = async(e) => {\r\n        this.setState({error: ''})\r\n        switch(e.target.name) {\r\n            case 'newPassword':\r\n            this.setState({newPassword: e.target.value});\r\n            break;\r\n            case 'confirmNewPassword':\r\n            this.setState({confirmNewPassword: e.target.value});\r\n            break;\r\n            case 'currentPassword':\r\n            this.setState({currentPassword: e.target.value});\r\n            break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n    handleUpdate = async e => {\r\n        e.preventDefault();\r\n        this.setState({error: ''})\r\n        let token = getCookie(\"jwt_access\");\r\n        let id = getCookie('customerID');\r\n\r\n        if(this.state.currentPassword===\"\") {\r\n            return this.showMessage(\"You must type your current password to approve changes!\", true)\r\n        }\r\n        try {\r\n        await this.props.passwordUpdate(this.state.newPassword, this.state.confirmNewPassword, this.state.currentPassword, id, token)\r\n        this.showMessage(this.props.user)\r\n        } catch (err) {\r\n            return this.showMessage(err.response.data, true)\r\n        }\r\n    }\r\n\r\n    render() {\r\n\r\n        return (\r\n            <div className=\"details-section\">\r\n                <form className=\"form\" id=\"update-form\">\r\n                    <div className=\"form-container\">\r\n                        <div className=\"form-field\">\r\n                        <label>New Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        name=\"newPassword\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Type your new password...\"\r\n                        required\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                        <label>Confirm New Password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        name=\"confirmNewPassword\"\r\n                        placeholder=\"Confirm your new password...\"\r\n                        onChange={this.handleChange}\r\n                        required\r\n                        />\r\n                        </div>\r\n                        <div className=\"form-field\">\r\n                        <label>Current password</label>\r\n                        <input\r\n                        type=\"password\"\r\n                        name=\"currentPassword\"\r\n                        onChange={this.handleChange}\r\n                        placeholder=\"Type your current password...\"\r\n                        required\r\n                        />\r\n                        </div>\r\n                        <button onClick={this.handleUpdate}className=\"form-button\">UPDATE</button>\r\n                    </div>\r\n                </form>\r\n                {this.state.error}\r\n                {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError}/> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUser, passwordUpdate }\r\n    )(ChangePassword);","import React from 'react';\r\nimport Details from './Details'\r\nimport ChangePassword from './ChangePassword'\r\nimport { baseURL } from '../apis'\r\nimport { getCookie } from '../js'\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from '../actions'\r\n\r\nclass AccountSettings extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            section: \"details\"\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let token = getCookie(\"jwt_access\")\r\n        let id = getCookie('customerID')\r\n            try {\r\n                await this.props.getUser(id, token)\r\n            } catch(err) {\r\n                return window.location.replace(`${baseURL}/login`)\r\n            }\r\n    }\r\n\r\n    handleSection = e => {\r\n        this.setState({section: e.target.name})\r\n    }\r\n\r\n    render() {\r\n\r\n        return(\r\n            <>\r\n            <div className=\"section-menu-container\">\r\n                {this.state.section===\"details\" ? \r\n                <button onClick={this.handleSection} name=\"details\"className=\"section-menu-element-active\">Account details</button> :\r\n                <button onClick={this.handleSection} name=\"details\"className=\"section-menu-element\">Account details</button>}\r\n                {this.state.section===\"password\" ?\r\n                <button onClick={this.handleSection} name=\"password\" className=\"section-menu-element-active\">Change password</button> :\r\n                <button onClick={this.handleSection} name=\"password\" className=\"section-menu-element\">Change password</button>}\r\n            </div>\r\n            <div className=\"section-content\">\r\n                {this.state.section===\"details\" ? <Details/> : null}\r\n                {this.state.section===\"password\" ? <ChangePassword/> : null}\r\n\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUser }\r\n    )(AccountSettings);","import React from 'react'\r\n\r\n\r\n\r\nfunction Confirmation({user, handleChange, handleConfirm, handleClose}) {\r\n    return (\r\n        <div className=\"confirmation-container\">\r\n            <div className=\"confirmation-header\">\r\n                <p>Confirm with your password</p>\r\n            </div>\r\n            <div className=\"confirmation-content\">\r\n        <div>Are you sure you want to do this action for {user}?</div>\r\n                <form id=\"confirm-form\">\r\n                    <div className=\"form-container\">\r\n                        <label>Your password</label>\r\n                        <div className=\"form-field\">\r\n                            <input\r\n                            name=\"password\"\r\n                            onChange={handleChange.bind()}\r\n                            placeholder=\"Type your password\"\r\n                            type=\"password\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={handleConfirm.bind(null)} className=\"form-button\"><i className=\"fas fa-check\"></i></button> \r\n                    <button onClick={handleClose.bind(null)} style={{backgroundColor: \"red\"}} className=\"form-button\"><i className=\"fas fa-times\"></i></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default Confirmation","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getCookie } from '../js';\r\nimport { getUsersByQuery, manageAdmin } from '../actions';\r\nimport Confirmation from './Confirmation'\r\nimport Message from './Message'\r\n\r\nclass AdminForm extends React.Component{\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            query: '',\r\n            error: '',\r\n            users: [],\r\n            confirm: false,\r\n            user: '',\r\n            userID: '',\r\n            password: '',\r\n            message: '',\r\n            showMessage: false,\r\n            isError: false\r\n        }\r\n    }\r\n\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n    handleSearch = async e => {\r\n        e.preventDefault();\r\n        this.setState({users: []})\r\n        if(this.state.query==\"\") {\r\n            return this.showMessage(\"You must type query condition\", true)\r\n        }\r\n        let token = getCookie('jwt_access');\r\n        try {\r\n        await this.props.getUsersByQuery(this.state.query, token)\r\n        await this.setState({users: this.props.users})\r\n\r\n        } catch(err) {\r\n            this.showMessage(err.response.data, true)\r\n        }\r\n\r\n    }\r\n\r\n    handleConfirm = async e => {\r\n        let target = e.target;\r\n        await this.setState({user: target.name})\r\n        await this.setState({userID: target.id})\r\n        this.setState({confirm: true})\r\n    }\r\n\r\n    handleAppoint = async e => {\r\n        e.preventDefault();\r\n        let token = getCookie(\"jwt_access\");\r\n        try {\r\n        await this.props.manageAdmin(this.state.userID, this.state.password, token, \"add\")\r\n        this.props.showMessage(this.props.user);\r\n        this.props.handleUpdate();\r\n\r\n        } catch (err) {\r\n            this.showMessage(err.response.data, true)\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleClose = e => {\r\n        e.preventDefault();\r\n        this.setState({confirm: false})\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({error: ''})\r\n        switch(e.target.name) {\r\n            case 'query':\r\n                this.setState({query: e.target.value});\r\n                break;\r\n            case 'password':\r\n                this.setState({password: e.target.value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n    }\r\n\r\n    renderUsers = () => {\r\n        return this.state.users.map(user => {\r\n            return <div className=\"query-users-element\"><div>{user.login}</div> <button id={user._id} name={user.login} onClick={this.handleConfirm}className=\"form-button\">+</button></div>\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <>\r\n            <form className=\"admin-form\">\r\n                <input\r\n                name=\"query\"\r\n                placeholder=\"Search for users\"\r\n                onChange={this.handleChange}/>\r\n                <button className=\"form-button\" onClick={this.handleSearch}>SEARCH</button>\r\n                {this.state.error}\r\n            </form>\r\n            {this.state.users.length>0 ? <div className=\"query-users-container\">{this.renderUsers()}</div> : null}\r\n            {this.state.confirm ? <Confirmation user={this.state.user} handleChange={this.handleChange} handleConfirm={this.handleAppoint} handleClose={this.handleClose} /> : null}\r\n            {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError}/> : null}\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { users: state.users, user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUsersByQuery, manageAdmin }\r\n    )(AdminForm);\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getUnapprovedCrosswords, getAdmins, manageAdmin, getUserById, getUser } from '../actions';\r\nimport { getCookie, getDate } from '../js';\r\nimport AdminForm from './AdminForm';\r\nimport Confirmation from './Confirmation';\r\nimport Message from './Message'\r\nimport { baseURL } from '../apis';\r\n\r\nclass AccountAdministration extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            section: 'admins',\r\n            unapr: [],\r\n            admins: [],\r\n            empty:'',\r\n            add: false,\r\n            update: false,\r\n            userID: '',\r\n            user: '',\r\n            confirm: false,\r\n            password: '',\r\n            message: '',\r\n            showMessage: false,\r\n            fetchedUser: {},\r\n            details: false,\r\n            userDateCr: '',\r\n            isError: false\r\n        }\r\n    }\r\n\r\n    componentDidUpdate = async () => {\r\n        let token = getCookie('jwt_access')\r\n        if(this.state.update) {\r\n            try {\r\n            await this.props.getAdmins(token);\r\n            this.setState({admins: this.props.users})\r\n            } catch(err) {\r\n                this.setState({empty: err.response.data})\r\n            }\r\n            this.setState({update: false})\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let token = getCookie('jwt_access');\r\n        let id = getCookie('customerID')\r\n    \r\n        if(token) {\r\n            try {\r\n                await this.props.getUser(id, token);\r\n                if(this.props.user.isAdmin===false) {\r\n                    return window.location.replace(`${baseURL}`)\r\n                }\r\n            } catch(err) {\r\n                return window.location.replace(`${baseURL}/login`)\r\n            }\r\n        }\r\n        try {\r\n            await this.props.getUnapprovedCrosswords(token);\r\n            await this.props.getAdmins(token);\r\n        this.setState({unapr: this.props.crosswords});\r\n        this.setState({admins: this.props.users})\r\n        } catch (err) {\r\n            this.setState({empty: err.response.data})\r\n        }\r\n\r\n    }\r\n\r\n    renderCrosswords = () => {\r\n        if(this.state.unapr.length>0) {\r\n        return this.state.unapr.map( crossword => {\r\n            let date = getDate(new Date(crossword.dateCreated));\r\n            return (\r\n                <a href={`/admin/crossword/${crossword.ID}`} className=\"crossword-bar\">\r\n                    <div>#{crossword.ID}</div> \r\n                    <div>{crossword.values.length} x {crossword.values[0].length}</div>\r\n                    <div> added by {crossword.addedBy.login}</div> \r\n                    <div>Date added: {date}</div>\r\n        </a>\r\n            )\r\n        })\r\n    } else {\r\n        return <div>{this.state.empty}</div>\r\n    }\r\n    }\r\n\r\n    handleConfirm = async e => {\r\n        let target = e.target;\r\n        await this.setState({userID: target.id});\r\n        await this.setState({user: target.name});\r\n        this.setState({confirm: true})\r\n    }\r\n\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n    handleDetails = async e => {\r\n        e.preventDefault();\r\n        let token = getCookie('jwt_access');\r\n        try {\r\n            await this.props.getUserById(e.target.id, token);\r\n        } catch(err) {\r\n            return window.location.replace(`${baseURL}`)\r\n        }\r\n        this.setState({section: ''});\r\n        this.setState({details: true})\r\n        this.setState({fetchedUser: this.props.user})\r\n        let date = new Date(this.props.user.dateCreated);\r\n        let string = getDate(date);\r\n        this.setState({userDateCr: string})\r\n    }\r\n\r\n    renderAdmins = (handleConfirm, handleDetails) => {\r\n\r\n        return this.state.admins.map( admin => {\r\n            let date = new Date(admin.dateCreated)\r\n            let string = getDate(date)\r\n\r\n            return (\r\n                <tr>\r\n                    <td>{admin.login}</td>\r\n                    <td>{admin.email}</td>\r\n                    <td>{string}</td>\r\n                    <td><button name={admin.login} id={admin._id} onClick={handleConfirm} className=\"form-button\"><i name={admin.login} id={admin._id} onClick={handleConfirm} className=\"fas fa-trash-alt\"></i></button><button name={admin.login} id={admin._id} onClick={handleDetails} className=\"form-button\"><i name={admin.login} id={admin._id} onClick={handleDetails} className=\"fas fa-info-circle\"></i></button></td>\r\n                </tr>\r\n            )\r\n        })\r\n    }\r\n\r\n    handleSection = e => {\r\n        this.setState({section: e.target.name})\r\n        this.setState({details: false})\r\n    }\r\n\r\n    handleClose = e => {\r\n        e.preventDefault();\r\n        this.setState({confirm: false})\r\n    }\r\n\r\n    handleChange = e => {\r\n        switch(e.target.name) {\r\n            case 'password':\r\n                this.setState({password: e.target.value})\r\n        }\r\n    }\r\n\r\n    handleDelete = async e => {\r\n        e.preventDefault();\r\n        let token = getCookie(\"jwt_access\")\r\n        try {\r\n        await this.props.manageAdmin(this.state.userID, this.state.password, token, \"delete\")\r\n        this.setState({confirm: false});\r\n        this.setState({update: true});\r\n        this.showMessage(this.props.user)\r\n        } catch(err) {\r\n            this.showMessage(err.response.data, true)\r\n        }\r\n    }\r\n\r\n    handleAdd = () =>  {\r\n        if(this.state.add) {\r\n        this.setState({add: false})\r\n        } else {\r\n            this.setState({add: true})\r\n        }\r\n    }\r\n\r\n    handleBack = () => {\r\n        this.setState({details: false})\r\n        this.setState({section: \"admins\"});\r\n    }\r\n\r\n    render() {\r\n        return(\r\n            <>\r\n            <div className=\"section-menu-container\">\r\n                {this.state.section===\"approve\" ? \r\n                <button onClick={this.handleSection} name=\"approve\"className=\"section-menu-element-active\">Crosswords to approve</button> :\r\n                <button onClick={this.handleSection} name=\"approve\"className=\"section-menu-element\">Crosswords to approve</button>}\r\n                {this.state.section===\"admins\" ?\r\n                <button onClick={this.handleSection} name=\"admins\" className=\"section-menu-element-active\">Admins</button> :\r\n                <button onClick={this.handleSection} name=\"admins\" className=\"section-menu-element\">Admins</button>}\r\n            </div>\r\n            <div className=\"section-content\">\r\n                {this.state.section===\"approve\" ? \r\n                    <div className=\"type-container\">\r\n                        {this.renderCrosswords()}\r\n                    </div> :\r\n                 null}\r\n                {this.state.section===\"admins\" ? \r\n                <div>\r\n                    <button style={{width: \"auto\", fontSize: \"20px\"}}className=\"form-button\" onClick={this.handleAdd}><i className=\"fas fa-user-plus\"></i></button>\r\n                    {this.state.add ? <AdminForm showMessage={this.showMessage} handleUpdate={() => {this.setState({update:true}); this.setState({add: false})}}/> : null}\r\n                    <table className=\"render-table\">\r\n                        <thead>\r\n                                <tr>\r\n                                    <th>Login</th>\r\n                                    <th>Email</th>\r\n                                    <th>Date created</th>\r\n                                    <th>Action</th>\r\n                                </tr>\r\n                                </thead>\r\n                                <tbody>\r\n                                {this.renderAdmins(this.handleConfirm, this.handleDetails)}\r\n                                </tbody>\r\n                    </table>\r\n                </div> \r\n                : null}\r\n                {this.state.details ? <div className=\"details-container\">\r\n                    <button className=\"form-button\" onClick={this.handleBack}><i className=\"fas fa-chevron-left\"></i></button>\r\n                    <div>Login: {this.state.fetchedUser.login}</div>\r\n                    <div>E-mail: {this.state.fetchedUser.email}</div>\r\n                    <div>Approved crosswords: {this.props.user.approved.length}</div>\r\n                    <div>Crosswords added: {this.props.user.added.length}</div>\r\n                    <div>Date created: {this.state.userDateCr}</div>\r\n                    </div> : null}\r\n                {this.state.confirm ? <Confirmation user={this.state.user} handleChange={this.handleChange} handleConfirm={this.handleDelete} handleClose={this.handleClose}/> : null}\r\n                {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError} /> : null}\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { crosswords: state.crosswords, users: state.users, user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUnapprovedCrosswords, getAdmins, manageAdmin, getUserById, getUser }\r\n    )(AccountAdministration);","import React from 'react';\r\nimport { getCookie } from '../js';\r\nimport AccountCrosswords from './AccountCrosswords';\r\nimport AccountSettings from './AccountSettings';\r\nimport AccountAdministration from './AccountAdministration';\r\nimport { connect } from 'react-redux';\r\nimport { getUser } from '../actions';\r\nimport { baseURL } from '../apis';\r\n\r\n\r\nclass Account extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state = {\r\n            user: {\r\n                _id: '000',\r\n                isAdmin: false,\r\n                loaded: false\r\n            }\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let token = getCookie(\"jwt_access\");\r\n        let id = getCookie('customerID');\r\n        if(token) {\r\n            try {\r\n                await this.props.getUser(id, token)\r\n                this.setState({user: this.props.user})\r\n                this.setState({isAdmin: this.props.user.isAdmin});\r\n            } catch(err) {\r\n                return window.location.replace(`${baseURL}/login`)\r\n            }\r\n        } else {\r\n            return window.location.replace(`${baseURL}/login`)\r\n        }\r\n\r\n        this.setState({loaded: true})\r\n\r\n\r\n        \r\n    }\r\n\r\n    handleLeave = () => {\r\n        let divs = document.getElementsByClassName(\"menu-element-text\");\r\n\r\n        let array = Array.from(divs)\r\n\r\n        array.map( div => {\r\n            div.style.display=\"none\";\r\n        })\r\n\r\n    }\r\n\r\n    handleHover = () => {\r\n        let divs = document.getElementsByClassName(\"menu-element-text\");\r\n\r\n        let array = Array.from(divs)\r\n\r\n        array.map( div => {\r\n            div.style.display=\"block\";\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const adminPanel = (\r\n            <>{this.props.match.params.section===\"administration\" ? <a href=\"/account/administration\"><div className=\"menu-element-active\"><i className=\"fas fa-user-shield\"></i><div className=\"menu-element-text\"> Administration</div></div></a> : <a href=\"/account/administration\"><div className=\"menu-element\"><i className=\"fas fa-user-shield\"></i><div className=\"menu-element-text\"> Administration</div></div></a>}</>\r\n        )\r\n\r\n        const content = (\r\n            <div className=\"account-container\">\r\n                <div onMouseEnter={this.handleHover} onMouseLeave={this.handleLeave} className=\"menu-container\">\r\n                    {this.props.match.params.section===\"crosswords\" ? <a href=\"/account/crosswords\"><div className=\"menu-element-active\"><i className=\"fas fa-chess-board\"></i> <div className=\"menu-element-text\"> Crosswords</div></div></a> : <a href=\"/account/crosswords\"><div className=\"menu-element\"><i className=\"fas fa-chess-board\"></i> <div className=\"menu-element-text\"> Crosswords</div></div></a>}\r\n                    {this.props.match.params.section===\"settings\" ? <a href=\"/account/settings\"><div className=\"menu-element-active\"><i className=\"fas fa-cog\"></i><div className=\"menu-element-text\"> Settings</div></div></a> : <a href=\"/account/settings\"><div className=\"menu-element\"><i className=\"fas fa-cog\"></i><div className=\"menu-element-text\"> Settings</div></div></a>}\r\n                    {this.state.isAdmin ? adminPanel : null}\r\n                </div>\r\n                <div className=\"content-account\">\r\n                    {this.props.match.params.section===\"crosswords\" ? <AccountCrosswords user={this.state.user}/> : null}\r\n                    {this.props.match.params.section===\"settings\" ? <AccountSettings user={this.state.user}/> : null}\r\n                    {this.props.match.params.section===\"administration\" ? <AccountAdministration user={this.state.user}/> : null}\r\n                </div>\r\n            </div>\r\n        )\r\n\r\n        return(\r\n            <>{this.state.loaded ? content : null}</>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getUser }\r\n    )(Account);","import React from 'react';\r\nimport { getCrossword, getUser, approveCrossword } from '../actions';\r\nimport { getCookie, compareNumbers } from '../js';\r\nimport { connect } from 'react-redux';\r\nimport { baseURL } from '../apis';\r\nimport Message from './Message'\r\nimport Loader from './Loader'\r\n\r\n\r\nfunction QuestionsAcross({showRange, questions}) {\r\n    return questions.map( question => {\r\n        let q = `A${question.number}`\r\n        if(question.type===\"across\") {\r\n        return (\r\n        <div className=\"single-question\" onClick={showRange.bind(null, q)} id={`A${question.number}`}><p>{question.number}. {question.text}</p></div>\r\n        )\r\n        } else return null\r\n    })\r\n}\r\n\r\nfunction Solution({crossword}) {\r\n    let array=[]\r\n    crossword.map(column => {\r\n        column.map( field => {\r\n            if(field.password!==\"\") {\r\n                array.push({\r\n                    value: field.value,\r\n                    number: field.password\r\n                })\r\n            }\r\n        })\r\n    })\r\n\r\n    array.sort(compareNumbers);\r\n\r\n    return array.map( element => {\r\n        return (\r\n            <td>\r\n                <div className=\"field-container\">\r\n                    <input readOnly=\"true\" type=\"text\" className=\"field\" value={element.value}></input>\r\n        <div className=\"question-number\">{element.number}</div>\r\n                </div>\r\n            </td>\r\n        )\r\n    })\r\n\r\n    \r\n\r\n}\r\n\r\nfunction QuestionsDown({showRange, questions}) {\r\n    return questions.map( question => {\r\n        let q = `D${question.number}`\r\n        if(question.type===\"down\") {\r\n        return (\r\n            <div className=\"single-question\" onClick={showRange.bind(null, q)} id={`D${question.number}`}><p>{question.number}. {question.text}</p></div>\r\n        )\r\n        } else return null\r\n    })\r\n}\r\nfunction RenderColumns({moveCursor, showRange, handleChange, columns}) {\r\n    return columns.map(element => {\r\n    \r\n        if(element.value!==\"blank\"){\r\n            return <td>\r\n            <div className=\"field-container\" onKeyUp={moveCursor.bind()} onClick={showRange.bind(null, element.questionRange)} id={element.name}>\r\n                <input value={element.value} onChange={handleChange.bind()} type=\"text\" maxLength=\"1\" name={element.name} className=\"field\"></input>\r\n                {element.question!==\"\" ? <div id={element.name} className=\"question-number\">{element.question}</div> : null}\r\n                {element.password!==\"\" ? <div id={element.name} className=\"password-number\">{element.password}</div> : null}\r\n                </div>\r\n                </td>\r\n        } else {\r\n            return <td>\r\n            <div className=\"field-container\" id={element.name} style={{backgroundColor: \"black\"}}>\r\n                </div>\r\n                </td>\r\n        }\r\n    })\r\n        \r\n}\r\n\r\nfunction RenderSolvedColumns({moveCursor, showRange, columns}) {\r\n    return columns.map(element => {\r\n    \r\n        if(element.value!==\"blank\"){\r\n            return <td>\r\n            <div className=\"field-container\" onKeyUp={moveCursor.bind()} onClick={showRange.bind(null, element.questionRange)} id={element.name}>\r\n                <input value={element.value} type=\"text\" maxLength=\"1\" name={element.name} readOnly=\"true\" className=\"field\"></input>\r\n                {element.question!==\"\" ? <div id={element.name} className=\"question-number\">{element.question}</div> : null}\r\n                {element.password!==\"\" ? <div id={element.name} className=\"password-number\">{element.password}</div> : null}\r\n                </div>\r\n                </td>\r\n        } else {\r\n            return <td>\r\n            <div className=\"field-container\" id={element.name} style={{backgroundColor: \"black\"}}>\r\n                </div>\r\n                </td>\r\n        }\r\n    })\r\n        \r\n}\r\n\r\nclass CrosswordAdmin extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loaded: false,\r\n            crossword: [],\r\n            crosswordSolved: [],\r\n            solution: false,\r\n            crosswordID: '',\r\n            empty: false,\r\n            rejMsg: '',\r\n            rejectMessage: false,\r\n            isError: false\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let token = getCookie(\"jwt_access\");\r\n        let id = getCookie('customerID');\r\n        if(token) {\r\n            try {\r\n                await this.props.getUser(id, token);\r\n            } catch(err) {\r\n                return window.location.replace(`${baseURL}`)\r\n            }\r\n        }\r\n        if(this.props.user.isAdmin) {\r\n            try {\r\n        await this.props.getCrossword(this.props.match.params.id);\r\n        if(this.props.crossword.isApproved || this.props.crossword.isRejected) {\r\n            this.setState({empty: true})\r\n        }\r\n        this.setState({crosswordSolved: this.props.crossword.values})\r\n        let crossword = this.props.crossword.values.map( column => {\r\n            return column.map(field => {\r\n                if(field.value!==\"blank\") {\r\n                    return {\r\n                        name: field.name,\r\n                        value: \"\",\r\n                        password: field.password,\r\n                        question: field.question,\r\n                        questionRange: field.questionRange\r\n                    }\r\n                } else {\r\n                    return {\r\n                        name: field.name,\r\n                        value: field.value,\r\n                        question: field.question,\r\n                        password: field.password\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        this.setState({crossword: crossword});\r\n        this.setState({questions: this.props.crossword.questions});\r\n        this.setState({crosswordID: this.props.crossword.ID});\r\n            } catch(err) {\r\n                this.setState({empty: true})\r\n            }\r\n            this.setState({loaded: true});\r\n\r\n        }\r\n        else {\r\n            if(!token) {\r\n            window.location.replace(`${baseURL}/login`)\r\n            } \r\n            else {\r\n                window.location.replace(`${baseURL}`)\r\n            }\r\n        }\r\n\r\n\r\n    }\r\n\r\n    handleChange = e => {\r\n        let crossword = this.state.crossword;\r\n        crossword.map( element => {\r\n            element.map(field => {\r\n                if(field.name===e.target.name) {\r\n                    field.value=e.target.value;\r\n                }\r\n            })\r\n        });\r\n        this.setState({crossword: crossword})\r\n\r\n    }\r\n\r\n    handleTextArea = e => {\r\n        switch(e.target.name) {\r\n            case 'rej-msg':\r\n                this.setState({rejMsg: e.target.value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    colorQuestion = (question) => {\r\n        let questions = document.getElementsByClassName('single-question');\r\n            let arr = Array.from(questions);\r\n            arr.map((element, index) => {\r\n                if(element.id===question) {\r\n                    questions[index].style.color=\"green\"\r\n                } else {\r\n                    questions[index].style.color=\"black\"\r\n\r\n                }\r\n            })\r\n    }\r\n    \r\n\r\n    renderRows = (moveCursor, showRange, change, solution, crossword) => {\r\n        let cross = crossword;\r\n        return crossword.map( function callback(row, index){\r\n            return(\r\n            <tr key={index}>\r\n               {solution ? \r\n               <RenderSolvedColumns moveCursor={moveCursor} showRange={showRange} columns={cross[index]} key={index}/> :\r\n               <RenderColumns moveCursor={moveCursor} showRange={showRange} handleChange={change} columns={cross[index]} key={index}/>}\r\n            </tr>\r\n            )\r\n        })\r\n            \r\n    }\r\n    showRange = e => {\r\n        let array = e;\r\n        let question;\r\n        if(Array.isArray(array)) {\r\n            if(array.length===2) {\r\n                if(this.state.currentQuestion!==array[0]) {\r\n                this.setState({currentQuestion: array[0]})\r\n                question=array[0]\r\n                } else {\r\n                    this.setState({currentQuestion: array[1]})\r\n                    question=array[1];\r\n                }\r\n            } else {\r\n                this.setState({currentQuestion: array[0]})\r\n            question=array[0]\r\n            }\r\n            \r\n        } else {\r\n            this.setState({currentQuestion: e})\r\n            question = e    \r\n        }\r\n        this.colorQuestion(question)\r\n\r\n\r\n        let crossword = this.state.crossword;\r\n\r\n        crossword.map(row=> {\r\n            row.map(field=> {\r\n                if(field.value!==\"blank\") {\r\n                let input = document.getElementById(field.name).firstChild;\r\n                input.style.backgroundColor=\"white\";\r\n                input.removeAttribute(\"readOnly\")\r\n                }\r\n            })\r\n        })\r\n        let range = []\r\n\r\n        crossword.map(row => {\r\n            row.map(field => {\r\n                if(field.value!==\"blank\") {\r\n                if(field.questionRange.indexOf(question) !== -1) {\r\n                    let div = document.getElementById(field.name);\r\n                    let input = div.firstChild;\r\n                    input.style.backgroundColor=\"green\";\r\n                    range.push(field.name)\r\n                } else {\r\n                    let div = document.getElementById(field.name);\r\n                    let input = div.firstChild;\r\n                    input.setAttribute(\"readOnly\", \"true\")\r\n                }\r\n            }\r\n            })\r\n        })\r\n        this.setState({currentRange: range})\r\n        \r\n    }\r\n\r\n    moveCursor = async e => {\r\n        let index = this.state.currentRange.indexOf(e.target.name);\r\n        if(index+1<this.state.currentRange.length || e.keyCode===8){\r\n            if(e.keyCode!==8 && e.keyCode!==18 && e.keyCode!==17 && e.keyCode!==16 && e.keyCode!==46) {\r\n        document.getElementById(this.state.currentRange[index+1]).firstChild.focus();\r\n            }\r\n            if(e.keyCode===8) {\r\n                if(index>0) {\r\n                document.getElementById(this.state.currentRange[index-1]).firstChild.focus();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n    handleView = () => {\r\n        if(this.state.solution) {\r\n            this.setState({solution: false});\r\n            console.log(\"false\")\r\n        } else {\r\n            this.setState({solution: true})\r\n            console.log(\"true\")\r\n        }\r\n    }\r\n\r\n    handleApprove = async e => {\r\n        e.preventDefault();\r\n        let token = getCookie(\"jwt_access\");\r\n        try {\r\n            await this.props.approveCrossword(this.state.crosswordID, \"approve\", \"\", token);\r\n            this.showMessage(this.props.crossword)\r\n        } catch (err) {\r\n            this.showMessage(err.response.data, true)\r\n        }\r\n    }\r\n\r\n    handleReject = async e => {\r\n        e.preventDefault();\r\n        let token = getCookie(\"jwt_access\");\r\n        try {\r\n            await this.props.approveCrossword(this.state.crosswordID, \"reject\", this.state.rejMsg, token);\r\n            this.showMessage(this.props.crossword)\r\n            this.setState({rejectMessage: false})\r\n        } catch (err) {\r\n            this.showMessage(err.response.data, true)\r\n        }\r\n\r\n    }\r\n\r\n    handleMessage = async e => {\r\n        e.preventDefault();\r\n        this.setState({rejectMessage: true})\r\n    }\r\n\r\n    handleClose = e => {\r\n        e.preventDefault();\r\n        this.setState({rejectMessage: false})\r\n    }\r\n\r\n    render() {\r\n\r\n\r\n        const empty = (\r\n            <div>Oops! It looks like there's no crossword here!</div>\r\n        )\r\n\r\n        const content = (\r\n            <div className=\"flex column\">\r\n                <button className=\"form-button\" onClick={this.handleView}>CHANGE VIEW</button>\r\n                <div className=\"table-container\">\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n        {this.state.solution ? <>{this.renderRows(this.moveCursor, this.showRange, this.handleChange, this.state.solution, this.state.crosswordSolved)}</> : <>{this.renderRows(this.moveCursor, this.showRange, this.handleChange, this.state.solution, this.state.crossword)}</>} \r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"under-table-container\">\r\n            <div className=\"questions-container flex\">\r\n                <div className=\"margin flex column\"><h4 className=\"questions\">ACROSS</h4>\r\n                <QuestionsAcross showRange={this.showRange} questions={this.state.questions}/>\r\n                </div>\r\n                \r\n                <div className=\"margin flex column\"><h4 className=\"questions\">DOWN</h4>\r\n                <QuestionsDown showRange={this.showRange} questions={this.state.questions}/>\r\n                </div>\r\n                \r\n            </div>\r\n            <div className=\"solution-container\">\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr><Solution crossword={this.state.crossword}/></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <button onClick={this.handleApprove} className=\"form-button\">APPROVE</button>\r\n            <button onClick={this.handleMessage} className=\"form-button\">REJECT</button>\r\n            {this.state.error}\r\n        </div>\r\n            </div>\r\n        )\r\n        const isEmpty = (\r\n            <>{this.state.empty ? empty : content}</>\r\n        )\r\n\r\n        const rejectMessage = (\r\n            <div className=\"confirmation-container\">\r\n            <div className=\"confirmation-header\">\r\n                <p>Rejection message</p>\r\n            </div>\r\n            <div className=\"confirmation-content\">\r\n                <form id=\"confirm-form\">\r\n                    <div className=\"form-container\">\r\n                        <label>Your message</label>\r\n                        <div className=\"form-field\">\r\n                            <textarea\r\n                            name=\"rej-msg\"\r\n                            col=\"20\"\r\n                            rows=\"5\"\r\n                            onChange={this.handleTextArea}\r\n                            placeholder=\"Tell the creator of this crossword why are you rejecting it.\"\r\n                            />\r\n                        </div>\r\n                    </div>\r\n                    <button onClick={this.handleReject} className=\"form-button\"><i className=\"fas fa-check\"></i></button> \r\n                    <button onClick={this.handleClose} style={{backgroundColor: \"red\"}} className=\"form-button\"><i className=\"fas fa-times\"></i></button>\r\n                </form>\r\n            </div>\r\n        </div>\r\n        )\r\n        return (\r\n            <>{this.state.loaded ? isEmpty : <Loader/>}\r\n            {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError}/> : null}\r\n            {this.state.rejectMessage ? rejectMessage : null}</>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { crossword: state.crossword, user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getCrossword, getUser, approveCrossword }\r\n    )(CrosswordAdmin);","import React from 'react';\r\n\r\nfunction CrByType({crosswords, user}) {\r\n    return crosswords.map( crossword => {\r\n        let tried = false;\r\n        let fields;\r\n        let filled;\r\n        let percent;\r\n        if(user) {\r\n        for(let i =0; i<user.tries.length; i++) {\r\n            if(crossword._id==user.tries[i]._id) {\r\n                fields=0;\r\n                filled=0;\r\n                tried = true\r\n                user.tries[i].values.map(row => {\r\n                    row.map( field => {\r\n                        if(field.value!=\"blank\") {\r\n                            fields+=1\r\n                        }\r\n                        if(field.value!=\"\" && field.value!=\"blank\") {\r\n                            filled+=1\r\n                        }\r\n                    })\r\n                })\r\n                let x =filled/fields*100;\r\n                percent = Number(Math.round(x + 'e+0') + 'e-0');\r\n            }\r\n        }\r\n    }\r\n        if(crossword.solved) {\r\n            return  (\r\n            <a href={`/crosswords/${crossword.ID}`} className=\"crossword-bar\">\r\n                        <div>#{crossword.ID}</div> \r\n                        <div>{crossword.values.length} x {crossword.values[0].length} added by {crossword.addedBy.login}</div>\r\n                        <div className=\"ui progress\" data-percent=\"100\">\r\n                                <div className=\"bar\" style={{transitionDuration: \"300ms\", width:\"100%\", height: \"100%\"}}>\r\n                                    <div className=\"progress\" style={{color: \"black\"}}>100%</div>\r\n                                </div> \r\n                        </div>\r\n                        <div>SOLVED! <i style={{color:\"lime\", fontSize: \"30px\"}} className=\"fas fa-check\"></i></div>\r\n                        <div className=\"rating-bar-container\"><i style={{color: \"gold\"}} className=\"fas fa-star\"></i><div>{crossword.ovrRating}/5 ({crossword.ratings.length})</div></div>\r\n                    </a>\r\n            )\r\n\r\n        } else if(tried) {\r\n            return (\r\n                <a href={`/crosswords/${crossword.ID}`} className=\"crossword-bar\">\r\n                        <div>#{crossword.ID}</div> \r\n                        <div>{crossword.values.length} x {crossword.values[0].length} added by {crossword.addedBy.login} </div>\r\n                        <div className=\"ui progress\" data-percent={percent}>\r\n                                <div className=\"bar\" style={{transitionDuration: \"300ms\", width:`${percent}%`, height: \"100%\"}}>\r\n                                    <div className=\"progress\" style={{color: \"black\"}}>{percent}%</div>\r\n                                </div> \r\n                            </div>\r\n                            <div>IN PROGRESS</div>\r\n                            <div className=\"rating-bar-container\"><i style={{color: \"gold\"}} className=\"fas fa-star\"></i><div>{crossword.ovrRating}/5 ({crossword.ratings.length})</div></div>\r\n                    </a>\r\n            )\r\n        } else \r\n            {\r\n                return (\r\n                    <a href={`/crosswords/${crossword.ID}`} className=\"crossword-bar\">\r\n                            <div>#{crossword.ID}</div> \r\n                            <div>{crossword.values.length} x {crossword.values[0].length} added by {crossword.addedBy.login}</div>\r\n                            <div></div>\r\n                            <div></div>\r\n                            <div className=\"rating-bar-container\"><i style={{color: \"gold\"}} className=\"fas fa-star\"></i><div>{crossword.ovrRating}/5 ({crossword.ratings.length})</div></div>\r\n\r\n                        </a>\r\n                )\r\n            }\r\n        \r\n    })\r\n    \r\n}\r\n\r\nexport default CrByType","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { getAppCrosswords, getUser } from '../actions';\r\nimport { getCookie, setCookie } from '../js';\r\nimport CrByType from './CrByType';\r\nimport { baseURL } from '../apis'\r\n\r\nclass Crosswords extends React.Component {\r\n    constructor(props) {\r\n        super(props)\r\n        this.state={\r\n            crosswords: [],\r\n            beginner: [],\r\n            semiAdvanced: [],\r\n            advanced: [],\r\n            expert: [],\r\n            showCrosswords: false,\r\n            current: [],\r\n            error: ''\r\n        }\r\n    }\r\n\r\n    componentDidMount = async () => {\r\n        let token = getCookie(\"jwt_access\");\r\n        let id = getCookie('customerID');\r\n        // try {\r\n            await this.props.getAppCrosswords(token);\r\n        // } catch(err) {\r\n        //     return this.setState({error: err.response.data})\r\n        // }\r\n        if(token) {\r\n        try {\r\n            await this.props.getUser(id, token);\r\n            this.setState({user: this.props.user})\r\n        } catch(err) {\r\n            setCookie('customerID', \"\", 0.00001);\r\n            setCookie('jwt_access', \"\", 0.00001);\r\n            return \r\n        }\r\n        }\r\n        this.setState({crosswords: this.props.crosswords})\r\n        const crosswords = this.state.crosswords\r\n\r\n        if(token) {\r\n            \r\n                if(this.props.user.solved.length>0) {\r\n                    this.props.user.solved.map(solved => {\r\n                        let isSolved = false\r\n                        for(let prop in crosswords) {\r\n\r\n                        crosswords[prop].map( crossword => {\r\n                            isSolved=false\r\n                        if(crossword._id==solved._id) {\r\n                            isSolved=true\r\n                            console.log(solved._id + \" \" + crossword._id)\r\n\r\n                        }\r\n                        if(isSolved===true) {\r\n                            console.log(crossword._id)\r\n                            crossword.solved=true;\r\n                        } else {\r\n                            if(crossword.solved!==true) {\r\n                                crossword.solved = false\r\n                            }\r\n                        }\r\n                    })\r\n                }\r\n                \r\n                })\r\n                } else {\r\n                }\r\n            }\r\n        \r\n        \r\n        this.setState({crosswords: crosswords})\r\n        this.setState({beginner: crosswords.beginner})\r\n        this.setState({semiAdvanced: crosswords.semiAdvanced})\r\n        this.setState({advanced: crosswords.advanced})\r\n        this.setState({expert: crosswords.expert})\r\n    \r\n    }\r\n\r\n    crosswords = (crosswords) => {\r\n        console.log(crosswords)\r\n        \r\n    }\r\n\r\n    handleBack = () => {\r\n        this.setState({current: []})\r\n        this.setState({showCrosswords: false})\r\n    }\r\n\r\n    handleClick = async e => {\r\n        console.log(\"click\")\r\n        switch(e.target.id) {\r\n            case \"Beginner\":\r\n                await this.setState({current: this.state.beginner});\r\n                break;\r\n            case \"Semi-Advanced\":\r\n                await this.setState({current: this.state.semiAdvanced});\r\n                break;\r\n            case \"Advanced\":\r\n                await this.setState({current: this.state.advanced});\r\n                break;\r\n            case \"Expert\":\r\n                await this.setState({current: this.state.expert});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n\r\n        if(this.state.current.length>0) {\r\n            this.setState({showCrosswords: true})\r\n\r\n        }\r\n\r\n    }\r\n\r\n    renderCrosswords = (handleClick, ...param) => {\r\n        let crosswords = param;\r\n        let difficults = [\"Beginner\", \"Semi-Advanced\", \"Advanced\", \"Expert\"]\r\n            return crosswords.map(function(type, index) {\r\n                let solved =0;\r\n                    type.map (crossword => {\r\n                        \r\n                        if(crossword.solved===true) {\r\n                            solved+=1;\r\n                        }\r\n                        \r\n                    })\r\n                    let percent = 0\r\n                    if(solved>0) {\r\n                        let x = solved/type.length * 100;\r\n                        percent = Number(Math.round(x, 'e+0') + 'e-0');\r\n\r\n                    }\r\n\r\n                return (\r\n                        <div className=\"card-container\" id={difficults[index]} onClick={handleClick}>\r\n                            <p className=\"frame-header\">{difficults[index]}</p> \r\n                            <p className=\"solved-number\">Solved: {solved}/{type.length}</p>\r\n                            <div className=\"ui progress\" data-percent={percent}>\r\n                                <div className=\"bar\" style={{transitionDuration: \"300ms\", width:`${percent}%`, height: \"100%\"}}>\r\n                                    <div className=\"progress\" style={{color: \"black\"}}>{percent}%</div>\r\n                                </div> \r\n                            </div>\r\n                        </div>\r\n                )\r\n                })\r\n        \r\n    }\r\n\r\n    render() {\r\n\r\n        const types = (\r\n            <div className=\"crosswords-container\">{this.renderCrosswords(this.handleClick, this.state.beginner, this.state.semiAdvanced, this.state.advanced, this.state.expert)}</div>\r\n        )\r\n\r\n        const crosswords = (\r\n            <div className=\"crosswords\">\r\n                <div className=\"form-button\" onClick={this.handleBack} style={{width: \"100px\"}}>BACK</div>\r\n                <div className=\"type-container\"><CrByType crosswords={this.state.current} user={this.state.user}/></div>\r\n            </div>\r\n        )\r\n\r\n        const content = (\r\n            <>{this.state.showCrosswords ? crosswords : types}</>\r\n        )\r\n        const error = (\r\n            <>{this.state.error}</>\r\n        )\r\n\r\n        \r\n        return (\r\n            <>{this.state.error!=='' ? error : content}</>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { crosswords: state.crosswords, user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getAppCrosswords, getUser }\r\n    )(Crosswords);","import React from 'react';\r\n\r\nfunction Blank() {\r\n    return (\r\n        <div>Oops, looks like there's no crossword</div>\r\n    )\r\n}\r\n\r\nexport default Blank","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { reviewCrossword } from '../actions';\r\nimport { getCookie } from '../js';\r\nimport Message from './Message'\r\n\r\n\r\nclass RatingForm extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state ={\r\n            _id: props._id,\r\n            showMessage: false,\r\n            isReviewed: props.isReviewed,\r\n            rating: props.rating,\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n    handleEnter = e => {\r\n        let currentStar = e.target.attributes.mark.value\r\n        let element = document.getElementsByClassName(\"stars-container\");\r\n        let stars = Array.from(element[0].children);\r\n        stars.map(star => {\r\n            if(currentStar>=star.attributes.mark.value) {\r\n                star.style.color=\"gold\";\r\n            }\r\n        })\r\n    }\r\n    handleLeave = e => {\r\n        let element = document.getElementsByClassName(\"stars-container\");\r\n        let stars = Array.from(element[0].children);\r\n        stars.map(star => {\r\n                star.style.color=\"black\";\r\n        })\r\n    }\r\n\r\n    handleRating = async e => {\r\n        let token = getCookie(\"jwt_access\");\r\n        if(!token) { return this.setState({error: \"You have to be signed in if you want to add your rating.\"})}\r\n        try {\r\n            await this.props.reviewCrossword(this.state._id, e.target.attributes.mark.value, token);\r\n            this.showMessage(this.props.crossword);\r\n            setTimeout(function() {\r\n                window.location.reload()\r\n            }, 3000)\r\n        } catch(err) {\r\n            this.showMessage(err.response.data, true)\r\n        }\r\n\r\n    }\r\n\r\n    renderStars = () => {\r\n        let array = [1, 2, 3, 4, 5];\r\n        return array.map(element => {\r\n            if(this.state.rating>=element) {\r\n                return <i style={{color: \"gold\"}}className=\"fas fa-star\"></i>\r\n            } else {\r\n                return <i className=\"far fa-star\"></i>\r\n            }\r\n        })\r\n    }\r\n\r\n    render() {\r\n\r\n        const isReviewed = (\r\n            <><h3>You have added your rating to this crossword. Thank you!</h3>\r\n                <div className=\"stars-container\">\r\n                    <div>Your rating: {this.state.rating}/5</div>{this.renderStars()}\r\n                </div></>\r\n        )\r\n        const toReview = (\r\n            <><h3>What is your rating of this crossword?</h3>\r\n                <div className=\"stars-container\">\r\n                <i mark=\"1\" onClick={this.handleRating} onMouseEnter={this.handleEnter} onMouseLeave={this.handleLeave} className=\"far fa-star rate-star star1\"></i>\r\n                <i mark=\"2\" onClick={this.handleRating} onMouseEnter={this.handleEnter} onMouseLeave={this.handleLeave} className=\"far fa-star rate-star star2\"></i>\r\n                <i mark=\"3\" onClick={this.handleRating} onMouseEnter={this.handleEnter} onMouseLeave={this.handleLeave} className=\"far fa-star rate-star star3\"></i>\r\n                <i mark=\"4\" onClick={this.handleRating} onMouseEnter={this.handleEnter} onMouseLeave={this.handleLeave} className=\"far fa-star rate-star star4\"></i>\r\n                <i mark=\"5\" onClick={this.handleRating} onMouseEnter={this.handleEnter} onMouseLeave={this.handleLeave} className=\"far fa-star rate-star star5\"></i>\r\n                </div></>\r\n        )\r\n\r\n        return(\r\n            <div className=\"rate-container\">\r\n                {this.state.isReviewed ? isReviewed : toReview}\r\n                {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError}/> : null}\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { crossword: state.crossword, user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { reviewCrossword }\r\n    )(RatingForm);","import React from 'react';\r\nimport { getCrossword, getUser, saveCrossword, solveCrossword, addTry } from '../actions';\r\nimport { getCookie, compareNumbers } from '../js';\r\nimport { connect } from 'react-redux';\r\nimport Blank from './Blank'\r\nimport Message from './Message';\r\nimport RatingForm from './RatingForm'\r\nimport { baseURL } from '../apis'\r\n\r\n\r\nfunction QuestionsAcross({showRange, questions}) {\r\n    return questions.map( question => {\r\n        if(question.type===\"across\") {\r\n            let q = `A${question.number}`\r\n        return (\r\n        <div onClick={showRange.bind(null, q)} id={`A${question.number}`} className=\"single-question\"><p>{question.number}. {question.text}</p></div>\r\n        )\r\n        } else return null\r\n    })\r\n}\r\n\r\nfunction Solution({crossword}) {\r\n    let array=[]\r\n    crossword.map(column => {\r\n        column.map( field => {\r\n            if(field.password!==\"\") {\r\n                array.push({\r\n                    value: field.value,\r\n                    number: field.password\r\n                })\r\n            }\r\n        })\r\n    })\r\n\r\n    array.sort(compareNumbers);\r\n\r\n    return array.map( element => {\r\n        return (\r\n            <td>\r\n                <div className=\"field-container\">\r\n                    <input readOnly={true} type=\"text\" className=\"field\" value={element.value}></input>\r\n        <div className=\"question-number\">{element.number}</div>\r\n                </div>\r\n            </td>\r\n        )\r\n    })\r\n\r\n    \r\n\r\n}\r\n\r\nfunction QuestionsDown({showRange, questions}) {\r\n    return questions.map( question => {\r\n        if(question.type===\"down\") {\r\n            let q = `D${question.number}`\r\n        return (\r\n            <div onClick={showRange.bind(null, q)} id={`D${question.number}`} className=\"single-question\"><p>{question.number}. {question.text}</p></div>\r\n        )\r\n        } else return null\r\n    })\r\n}\r\nfunction RenderColumns({moveCursor, showRange, handleChange, columns, isSolved}) {\r\n    return columns.map(element => {\r\n    \r\n        if(element.value!==\"blank\"){\r\n            if(isSolved) {\r\n                return <td>\r\n            <div className=\"field-container\" id={element.name}>\r\n                <input readOnly=\"true\" value={element.value} onChange={handleChange.bind()} type=\"text\" maxLength=\"1\" name={element.name} className=\"field\"></input>\r\n                {element.question!==\"\" ? <div id={element.name} className=\"question-number\">{element.question}</div> : null}\r\n                {element.password!==\"\" ? <div id={element.name} className=\"password-number\">{element.password}</div> : null}\r\n                </div>\r\n                </td>\r\n            } else {\r\n            return <td>\r\n            <div className=\"field-container\"  onClick={showRange.bind(null, element.questionRange)} id={element.name}>\r\n                <input value={element.value} onKeyUp={moveCursor.bind()} onChange={handleChange.bind()} type=\"text\" maxLength=\"1\" name={element.name} className=\"field\"></input>\r\n                {element.question!==\"\" ? <div id={element.name} className=\"question-number\">{element.question}</div> : null}\r\n                {element.password!==\"\" ? <div id={element.name} className=\"password-number\">{element.password}</div> : null}\r\n                </div>\r\n                </td>\r\n            }\r\n        } else {\r\n            return <td>\r\n            <div className=\"field-container\" id={element.name} style={{backgroundColor: \"black\"}}>\r\n                </div>\r\n                </td>\r\n        }\r\n    })\r\n        \r\n}\r\n\r\nclass Solving extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            loaded: false,\r\n            crossword: [],\r\n            solution: false,\r\n            crosswordID: '',\r\n            crossword_id: '',\r\n            isSolved: false,\r\n            blank: false,\r\n            currentQuestion: '',\r\n            currentRange: [],\r\n            showMessage: false,\r\n            isError: false,\r\n            token: null,\r\n            showRating: false,\r\n            isReviewed: false,\r\n            rating: 0\r\n        }\r\n    }\r\n\r\n    async componentDidMount() {\r\n        let token = getCookie(\"jwt_access\");\r\n        let id = getCookie('customerID');\r\n        if(token) {\r\n            try {\r\n            await this.props.getUser(id, token);\r\n            this.setState({token: token})\r\n            } catch(err) {\r\n                return window.location.replace(`${baseURL}`)\r\n            }\r\n        }\r\n        \r\n        try {\r\n            await this.props.getCrossword(this.props.match.params.id);\r\n        } catch(err) {\r\n            return this.setState({blank: true})\r\n        }\r\n        this.setState({crossword_id: this.props.crossword._id})\r\n        this.setState({questions: this.props.crossword.questions});\r\n        this.setState({crosswordID: this.props.crossword.ID});\r\n        if(!this.props.crossword.isApproved) {\r\n            return this.setState({blank: true})\r\n        }\r\n        if(!this.props.crossword) {\r\n            return this.setState({blank: true})\r\n        }\r\n        if(token) {\r\n            this.props.user.solved.map( solved => {\r\n            if(solved._id==this.props.crossword._id) {\r\n                this.setState({isSolved: true});\r\n                this.setState({showRating: true})\r\n            }\r\n        })\r\n        }\r\n        let crossword;\r\n        if(this.state.isSolved===false) {\r\n        crossword = this.props.crossword.values.map( column => {\r\n            return column.map(field => {\r\n                if(field.value!==\"blank\") {\r\n                    return {\r\n                        name: field.name,\r\n                        value: \"\",\r\n                        password: field.password,\r\n                        question: field.question,\r\n                        questionRange: field.questionRange\r\n                    }\r\n                } else {\r\n                    return {\r\n                        name: field.name,\r\n                        value: field.value,\r\n                        question: field.question,\r\n                        password: field.password\r\n                    }\r\n                }\r\n            })\r\n        })\r\n        await this.props.addTry(this.props.crossword._id)\r\n        this.setState({crossword: crossword});\r\n    } else {\r\n        this.setState({crossword: this.props.crossword.values})\r\n        this.props.user.reviewed.map(crossword => {\r\n            if(crossword._id===this.state.crossword_id) {\r\n                this.setState({isReviewed: true})\r\n                this.setState({rating: crossword.rating})\r\n            }\r\n        })\r\n    }\r\n\r\n        if(token) {\r\n        this.props.user.tries.map( tried => {\r\n            if(tried._id==this.state.crossword_id) {\r\n                this.setState({crossword: tried.values})\r\n            }\r\n        })\r\n    }\r\n        this.setState({loaded: true});\r\n    }\r\n\r\n    colorQuestion = (question) => {\r\n        let questions = document.getElementsByClassName('single-question');\r\n            let arr = Array.from(questions);\r\n            arr.map((element, index) => {\r\n                if(element.id===question) {\r\n                    questions[index].style.color=\"green\"\r\n                } else {\r\n                    questions[index].style.color=\"black\"\r\n\r\n                }\r\n            })\r\n    }\r\n\r\n    showRange = e => {\r\n        let array = e;\r\n        let question;\r\n        if(Array.isArray(array)) {\r\n            if(array.length===2) {\r\n                if(this.state.currentQuestion!==array[0]) {\r\n                this.setState({currentQuestion: array[0]})\r\n                question=array[0]\r\n                } else {\r\n                    this.setState({currentQuestion: array[1]})\r\n                    question=array[1];\r\n                }\r\n            } else {\r\n                this.setState({currentQuestion: array[0]})\r\n            question=array[0]\r\n            }\r\n            \r\n        } else {\r\n            this.setState({currentQuestion: e})\r\n            question = e    \r\n        }\r\n        this.colorQuestion(question)\r\n\r\n\r\n        let crossword = this.state.crossword;\r\n\r\n        crossword.map(row=> {\r\n            row.map(field=> {\r\n                if(field.value!==\"blank\") {\r\n                let input = document.getElementById(field.name).firstChild;\r\n                input.style.backgroundColor=\"white\";\r\n                input.removeAttribute(\"readOnly\")\r\n                }\r\n            })\r\n        })\r\n        let range = []\r\n\r\n        crossword.map(row => {\r\n            row.map(field => {\r\n                if(field.value!==\"blank\") {\r\n                if(field.questionRange.indexOf(question) !== -1) {\r\n                    let div = document.getElementById(field.name);\r\n                    let input = div.firstChild;\r\n                    input.style.backgroundColor=\"green\";\r\n                    range.push(field.name)\r\n                } else {\r\n                    let div = document.getElementById(field.name);\r\n                    let input = div.firstChild;\r\n                    input.setAttribute(\"readOnly\", \"true\")\r\n                }\r\n            }\r\n            })\r\n        })\r\n        this.setState({currentRange: range})\r\n        \r\n    }\r\n\r\n    renderRows = (moveCursor, showRange, change, crossword, isSolved) => {\r\n        let cross = crossword;\r\n        return crossword.map( function callback(row, index){\r\n            return(\r\n            <tr key={index}>\r\n               <RenderColumns moveCursor={moveCursor} showRange={showRange} handleChange={change} columns={cross[index]} isSolved={isSolved} key={index}/>\r\n            </tr>\r\n            )\r\n        })\r\n            \r\n    }\r\n\r\n    handleChange = e => {\r\n        let crossword = this.state.crossword;\r\n        crossword.map( element => {\r\n            element.map(field => {\r\n                if(field.name===e.target.name) {\r\n                    field.value=e.target.value.toUpperCase();\r\n                }\r\n            })\r\n        });\r\n        this.setState({crossword: crossword})\r\n    }\r\n\r\n    showMessage = async (message, isError) => {\r\n        this.setState({message: message});\r\n        if(isError) {\r\n        this.setState({isError: isError})\r\n        } else {\r\n        \r\n        this.setState({isError: false})\r\n        }\r\n        this.setState({showMessage: true});\r\n        setTimeout( () => {\r\n            this.setState({showMessage: false})\r\n            this.setState({message: ''})\r\n        }, 5000);\r\n    }\r\n\r\n\r\n    handleSave = async () => {\r\n        let token = getCookie(\"jwt_access\")\r\n        let id = getCookie('customerID')\r\n        this.setState({error:''})\r\n        try {\r\n            await this.props.saveCrossword(this.state.crossword_id, this.state.crossword, id, token);\r\n            this.showMessage(this.props.crossword)\r\n        } catch(err) {\r\n            this.setState({error: err.response.data})\r\n        }\r\n    }\r\n\r\n    handleSolve = async () => {\r\n        let token = getCookie(\"jwt_access\")\r\n        let isEmpty = false;\r\n        this.state.crossword.map( row => {\r\n            row.map(field => {\r\n                if(field.value===\"\") {\r\n                    isEmpty = true;\r\n                }\r\n            })\r\n        })\r\n        if(isEmpty) {\r\n            return this.showMessage(\"You cannot solve crossword without filling every single cell!\", true)\r\n        }\r\n        this.setState({error:''})\r\n        try {\r\n            await this.props.solveCrossword(this.state.crossword_id, this.state.crossword, token);\r\n            this.showMessage(this.props.crossword)\r\n            setTimeout(function() {\r\n                window.location.reload();\r\n            }, 3000)\r\n        } catch(err) {\r\n            this.showMessage(err.response.data, true)\r\n        }\r\n\r\n    }\r\n\r\n    moveCursor = async e => {\r\n        let currentRange= this.state.currentRange;\r\n        let index = currentRange.indexOf(e.target.name);\r\n        if(index+1<currentRange.length || e.keyCode===8){\r\n            if(e.keyCode!==8 && e.keyCode!==18 && e.keyCode!==17 && e.keyCode!==16 && e.keyCode!==46) {\r\n                    document.getElementById(currentRange[index+1]).firstChild.focus();\r\n            }\r\n            if(e.keyCode===8) {\r\n                if(index>0) {\r\n                        document.getElementById(currentRange[index-1]).firstChild.focus();\r\n                }\r\n            }\r\n        }\r\n\r\n    }\r\n\r\n\r\n\r\n    render() {\r\n\r\n        const content = (\r\n            <div className=\"flex column\">\r\n                <h2 className=\"crossword-header\">Crossword #{this.state.crosswordID}</h2>\r\n                <div className=\"table-container\">\r\n                    <table className=\"table\">\r\n                        <tbody>\r\n                            {this.renderRows(this.moveCursor, this.showRange, this.handleChange, this.state.crossword, this.state.isSolved)}\r\n                        </tbody>\r\n                    </table>\r\n                </div>\r\n                <div className=\"under-table-container\">\r\n            <div className=\"questions-container\">\r\n                <div className=\"margin flex column\"><h4 className=\"questions\">ACROSS</h4>\r\n                <QuestionsAcross showRange={this.showRange} questions={this.state.questions}/>\r\n                </div>\r\n                <div className=\"margin flex column\"><h4 className=\"questions\">DOWN</h4>\r\n                <QuestionsDown showRange={this.showRange} questions={this.state.questions}/>\r\n                </div>\r\n            </div>\r\n            </div>\r\n            <div className=\"solution-container\">\r\n                <table className=\"table\">\r\n                    <tbody>\r\n                        <tr><Solution crossword={this.state.crossword}/></tr>\r\n                    </tbody>\r\n                </table>\r\n            </div>\r\n            <div className=\"button-container\">\r\n            \r\n            {this.state.token&&!this.state.isSolved ? <button onClick={this.handleSave} className=\"form-button\">SAVE</button> : null}\r\n            {this.state.isSolved ? <h3>You solved this crossword! Congratulations!</h3> : <button onClick={this.handleSolve} className=\"form-button\">SOLVE</button>}\r\n            </div>\r\n\r\n            {this.state.showRating ? <RatingForm _id={this.state.crossword_id} isReviewed={this.state.isReviewed} rating={this.state.rating} /> : null}\r\n\r\n            {this.state.error}\r\n            </div>\r\n        )\r\n        const loading = (\r\n            <div>{this.state.loaded ? content : <div>Loading</div>}</div>\r\n        )\r\n        return (\r\n            <>{this.state.blank ? <Blank/> : loading}\r\n            {this.state.showMessage ? <Message message={this.state.message} isError={this.state.isError}/> : null}</>\r\n\r\n        )\r\n    }\r\n\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { crossword: state.crossword, user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { getCrossword, getUser, saveCrossword, solveCrossword, addTry }\r\n    )(Solving);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { activateAccount } from '../actions';\r\nimport { baseURL } from '../apis'\r\n\r\nclass AccountActivation extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error: '',\r\n            loaded: false,\r\n            message: ''\r\n        }\r\n    }\r\n    \r\n    componentDidMount = async () => {\r\n        try {\r\n            await this.props.activateAccount(this.props.match.params.id, this.props.match.params.token);\r\n            this.setState({message: this.props.user})\r\n        } catch(err) {\r\n            this.setState({error: err.response.data})\r\n        }\r\n        this.setState({loaded: true})\r\n    }\r\n\r\n    render(){\r\n\r\n        const error = (\r\n            <div className=\"content-container\">{this.state.error}</div>\r\n        )\r\n\r\n        const content = (\r\n            <div className=\"content-container\">{this.state.message} You can just <a href={`${baseURL}/login`}><button className=\"form-button\">SIGN IN!</button></a></div>\r\n        )\r\n\r\n        const isError = (\r\n            <div className=\"flex\">{this.state.error==='' ? content : error }</div>\r\n        )\r\n        return(\r\n            <div>{this.state.loaded ? isError : null}</div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { activateAccount }\r\n    )(AccountActivation);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { resendActivation } from '../actions'\r\n\r\nclass MailRequired extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            error:\"\"\r\n        }\r\n    }\r\n\r\n    handleSend = async () => {\r\n        try {\r\n            await this.props.resendActivation(this.props.match.params.id);\r\n        } catch(err) {\r\n            this.setState({error: err.response.data})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"content-container\">\r\n                You have to activate your account. You should receive a message from our system to mailbox with you have registered.\r\n                When you did not receive any message please check your SPAM or just <button onClick={this.handleSend} className=\"form-button\">SEND</button> it another time.\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { crossword: state.crossword, user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { resendActivation }\r\n    )(MailRequired);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { passwordReminder, resendActivation } from '../actions'\r\n\r\n\r\nclass LoginProblems extends React.Component {\r\n\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            email: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({message: ''})\r\n        if(e.target.name===\"email\") {\r\n            this.setState({email: e.target.value})\r\n        }\r\n    }\r\n\r\n    handleForgot = async e => {\r\n        e.preventDefault();\r\n        this.setState({message: ''})\r\n        if(this.state.email==='') {\r\n            return this.setState({message: 'You have to type your email!'})\r\n        }\r\n        try {\r\n            await this.props.passwordReminder(this.state.email);\r\n            this.setState({message: this.props.user})\r\n        } catch(err) {\r\n            return this.setState({message: err.response.data})\r\n        }\r\n\r\n    }\r\n\r\n    handleResend = async e => {\r\n        e.preventDefault();\r\n        this.setState({message: ''});\r\n        if(this.state.email==='') {\r\n            return this.setState({message: 'You have to type your email!'})\r\n        }\r\n        try {\r\n            await this.props.resendActivation(this.state.email);\r\n            this.setState({message: this.props.user})\r\n        } catch(err) {\r\n            return this.setState({message: err.response.data})\r\n        }\r\n\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"content-container\"> \r\n                    <form className=\"form\">\r\n                        <div className=\"form-container\">\r\n                            <div className=\"form-field\">\r\n                                <label>Type your email and choose an action</label>\r\n                                <input\r\n                                type=\"text\"\r\n                                required=\"true\"\r\n                                name=\"email\"\r\n                                placeholder=\"Type your email\"\r\n                                onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"flex\">\r\n                                <button onClick={this.handleForgot} className=\"form-button\">FORGOT PASSWORD</button>\r\n                                <button onClick={this.handleResend} className=\"form-button\">RESEND ACTIVATION</button>\r\n                            </div>\r\n                        </div>\r\n                    </form>\r\n                    {this.state.message}\r\n                </div>\r\n\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { passwordReminder, resendActivation }\r\n    )(LoginProblems);","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { resetPassword } from '../actions'\r\n\r\nclass PasswordReset extends React.Component {\r\n    constructor(props) {\r\n        super(props);\r\n        this.state = {\r\n            password: '',\r\n            confirmPassword: '',\r\n            message: ''\r\n        }\r\n    }\r\n\r\n    handleChange = e => {\r\n        this.setState({message: ''})\r\n        switch(e.target.name) {\r\n            case 'password':\r\n                this.setState({password: e.target.value})\r\n                break;\r\n            case 'confirmPassword':\r\n                this.setState({confirmPassword: e.target.value});\r\n                break;\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n    resetPassword = async e => {\r\n        e.preventDefault();\r\n        try {\r\n            await this.props.resetPassword(this.props.match.params.id, this.props.match.params.token, this.state.password, this.state.confirmPassword);\r\n            this.setState({message: this.props.user});\r\n        } catch(err) {\r\n            return this.setState({message: err.response.data})\r\n        }\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"container\">\r\n                <div className=\"content-container\"> \r\n                    <form className=\"form\">\r\n                        <div className=\"form-container\">\r\n                            <div className=\"form-field\">\r\n                                <label>New password</label>\r\n                                <input\r\n                                type=\"password\"\r\n                                required=\"true\"\r\n                                name=\"password\"\r\n                                onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                            <div className=\"form-field\">\r\n                                <label>Confirm new password</label>\r\n                                <input\r\n                                type=\"password\"\r\n                                required=\"true\"\r\n                                name=\"confirmPassword\"\r\n                                onChange={this.handleChange}\r\n                                />\r\n                            </div>\r\n                                <button onClick={this.resetPassword} className=\"form-button\">SEND</button>\r\n                        </div>\r\n                    </form>\r\n                    {this.state.message}\r\n                </div>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n    return { user: state.user };\r\n\r\n};\r\n\r\nexport default connect(\r\n    mapStateToProps,\r\n    { resetPassword }\r\n    )(PasswordReset);","import React from 'react';\r\nimport { BrowserRouter as Router, Route, Switch } from 'react-router-dom';\r\nimport LandingPage from './LandingPage';\r\nimport CrosswordCreator from './CrosswordCreator';\r\nimport LoginPage from './LoginPage';\r\nimport Header from './Header';\r\nimport Account from './Account';\r\nimport CrosswordAdmin from './CrosswordAdmin';\r\nimport Crosswords from './Crosswords'\r\nimport Solving from './Solving'\r\nimport AccountActivation from './AccountActivation';\r\nimport MailRequired from './MailRequired';\r\nimport LoginProblems from './LoginProblems';\r\nimport PasswordReset from './PasswordReset';\r\nimport './index.css';\r\n\r\n\r\nconst App = () => {\r\n    return (\r\n        <>\r\n        <Header/>\r\n    <Router>\r\n        <Switch>\r\n            <Route path=\"/\" exact component={LandingPage}/>\r\n            <Route path=\"/create\" exact component={CrosswordCreator}/>\r\n            <Route path=\"/login\" exact component={LoginPage}/>\r\n            <Route path=\"/account\" exact component={Account}/>\r\n            <Route path=\"/account/:section\" exact component={Account}/>\r\n            <Route path=\"/admin/crossword/:id\" exact component={CrosswordAdmin}/>\r\n            <Route path=\"/crosswords\" exact component={Crosswords}/>\r\n            <Route path=\"/crosswords/:id\" exact component={Solving}/>\r\n            <Route path=\"/activation/:id/:token\" exact component={AccountActivation}/>\r\n            <Route path=\"/activate-now/:id\" exact component={MailRequired}/>\r\n            <Route path=\"/login-problems\" exact component={LoginProblems}/>\r\n            <Route path=\"/password-reset/:id/:token\" exact component={PasswordReset}/>\r\n        </Switch>\r\n    </Router>\r\n    </>\r\n    );\r\n\r\n};\r\n\r\nexport default App;","import { combineReducers } from 'redux';\r\nimport crosswordReducer from './crosswordReducer';\r\nimport userReducer from './userReducer';\r\nimport fetchCrosswords from './fetchCrosswords';\r\nimport fetchUsers from './fetchUsers';\r\nimport mailReducer from './mailReducer';\r\n\r\nexport default combineReducers({\r\n    crossword: crosswordReducer,\r\n    user: userReducer,\r\n    crosswords: fetchCrosswords,\r\n    users: fetchUsers,\r\n    mail: mailReducer\r\n});","export default (\r\n    state = {},\r\n    action) => {\r\n        switch (action.type) {\r\n            case 'GET_CROSSWORD':\r\n                return action.payload;\r\n            case 'GET_RANDOM_CROSSWORD':\r\n                return action.payload;\r\n            case 'ADD_CROSSWORD':\r\n                return action.payload;\r\n            case 'APPROVE_CROSSWORD':\r\n                return action.payload;\r\n            case 'SAVE_CROSSWORD':\r\n                return action.payload;\r\n            case 'SOLVE_CROSSWORD':\r\n                return action.payload;\r\n            case 'REVIEW_CROSSWORD':\r\n                return action.payload;\r\n            default: \r\n                return state;\r\n        }\r\n    };","export default (\r\n    state = {},\r\n    action) => {\r\n        switch (action.type) {\r\n            case 'USER_LOGIN':\r\n                return action.payload;\r\n            case 'ADD_USER':\r\n                return action.payload;\r\n            case 'USER_LOGOUT':\r\n                return {login: '', email: ''};\r\n            case 'GET_USER':\r\n                return action.payload;\r\n            case 'USER_REGISTER':\r\n                return state;\r\n            case 'UPDATE_USER':\r\n                return action.payload;\r\n            case 'UPDATE_PASSWORD':\r\n                return action.payload;\r\n            case 'APPOINT_ADMIN':\r\n                return action.payload;\r\n            case 'GET_USER_BY_ID':\r\n                return action.payload;\r\n            case 'ACTIVATE_ACCOUNT':\r\n                return action.payload;\r\n            case 'RESEND_ACTIVATION':\r\n                return action.payload;\r\n            case 'PASSWORD_REMINDER':\r\n                return action.payload;\r\n            case 'RESET_PASSWORD':\r\n                return action.payload;\r\n            default: \r\n                return state;\r\n        }\r\n    };","export default (\r\n    state = [],\r\n    action) => {\r\n        switch (action.type) {\r\n            case 'GET_UNAPR':\r\n                return action.payload;\r\n            case 'GET_APP_CROSSWORDS':\r\n                return action.payload;\r\n            case 'GET_ADDED_CROSSWORDS':\r\n                return action.payload;\r\n            case 'GET_SOLVED_CROSSWORDS':\r\n                return action.payload;\r\n            case 'GET_PROGRESS_CROSSWORDS':\r\n                return action.payload;\r\n            default: \r\n                return state;\r\n        }\r\n    };","export default (\r\n    state = [],\r\n    action) => {\r\n        switch (action.type) {\r\n            case 'GET_ADMINS':\r\n                return action.payload;\r\n            case 'GET_USERS_BY_QUERY':\r\n                return action.payload;\r\n            default: \r\n                return state;\r\n        }\r\n    };","export default (\r\n    state = {},\r\n    action) => {\r\n        switch (action.type) {\r\n            case 'SEND_MAIL':\r\n                return action.payload;\r\n            default: \r\n                return state;\r\n        }\r\n    };","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport App from './components/App'\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport { createStore, applyMiddleware } from 'redux';\r\nimport reducers from './reducers';\r\nimport { BrowserRouter } from 'react-router-dom';\r\n\r\nReactDOM.render(\r\n    <BrowserRouter>\r\n    <Provider store={createStore(reducers, applyMiddleware(thunk))}>\r\n    <App />\r\n    </Provider>\r\n    </BrowserRouter>,\r\n    document.querySelector('#root')\r\n);"],"sourceRoot":""}